{
  "version": 3,
  "sources": ["../node_modules/@mozilla/readability/Readability.js", "../node_modules/@mozilla/readability/Readability-readerable.js", "../node_modules/@mozilla/readability/index.js", "../src/modules/TextAnalysisEngine.ts", "../src/modules/BlurModeManager.ts", "../src/modules/ReadingSessionManager.ts", "../src/modules/StorageManager.ts", "../src/content.ts"],
  "sourcesContent": ["/*\n * Copyright (c) 2010 Arc90 Inc\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/*\n * This code is heavily based on Arc90's readability.js (1.7.1) script\n * available at: http://code.google.com/p/arc90labs-readability\n */\n\n/**\n * Public constructor.\n * @param {HTMLDocument} doc     The document to parse.\n * @param {Object}       options The options object.\n */\nfunction Readability(doc, options) {\n  // In some older versions, people passed a URI as the first argument. Cope:\n  if (options && options.documentElement) {\n    doc = options;\n    options = arguments[2];\n  } else if (!doc || !doc.documentElement) {\n    throw new Error(\n      \"First argument to Readability constructor should be a document object.\"\n    );\n  }\n  options = options || {};\n\n  this._doc = doc;\n  this._docJSDOMParser = this._doc.firstChild.__JSDOMParser__;\n  this._articleTitle = null;\n  this._articleByline = null;\n  this._articleDir = null;\n  this._articleSiteName = null;\n  this._attempts = [];\n  this._metadata = {};\n\n  // Configurable options\n  this._debug = !!options.debug;\n  this._maxElemsToParse =\n    options.maxElemsToParse || this.DEFAULT_MAX_ELEMS_TO_PARSE;\n  this._nbTopCandidates =\n    options.nbTopCandidates || this.DEFAULT_N_TOP_CANDIDATES;\n  this._charThreshold = options.charThreshold || this.DEFAULT_CHAR_THRESHOLD;\n  this._classesToPreserve = this.CLASSES_TO_PRESERVE.concat(\n    options.classesToPreserve || []\n  );\n  this._keepClasses = !!options.keepClasses;\n  this._serializer =\n    options.serializer ||\n    function (el) {\n      return el.innerHTML;\n    };\n  this._disableJSONLD = !!options.disableJSONLD;\n  this._allowedVideoRegex = options.allowedVideoRegex || this.REGEXPS.videos;\n  this._linkDensityModifier = options.linkDensityModifier || 0;\n\n  // Start with all flags set\n  this._flags =\n    this.FLAG_STRIP_UNLIKELYS |\n    this.FLAG_WEIGHT_CLASSES |\n    this.FLAG_CLEAN_CONDITIONALLY;\n\n  // Control whether log messages are sent to the console\n  if (this._debug) {\n    let logNode = function (node) {\n      if (node.nodeType == node.TEXT_NODE) {\n        return `${node.nodeName} (\"${node.textContent}\")`;\n      }\n      let attrPairs = Array.from(node.attributes || [], function (attr) {\n        return `${attr.name}=\"${attr.value}\"`;\n      }).join(\" \");\n      return `<${node.localName} ${attrPairs}>`;\n    };\n    this.log = function () {\n      if (typeof console !== \"undefined\") {\n        let args = Array.from(arguments, arg => {\n          if (arg && arg.nodeType == this.ELEMENT_NODE) {\n            return logNode(arg);\n          }\n          return arg;\n        });\n        args.unshift(\"Reader: (Readability)\");\n        // eslint-disable-next-line no-console\n        console.log(...args);\n      } else if (typeof dump !== \"undefined\") {\n        /* global dump */\n        var msg = Array.prototype.map\n          .call(arguments, function (x) {\n            return x && x.nodeName ? logNode(x) : x;\n          })\n          .join(\" \");\n        dump(\"Reader: (Readability) \" + msg + \"\\n\");\n      }\n    };\n  } else {\n    this.log = function () {};\n  }\n}\n\nReadability.prototype = {\n  FLAG_STRIP_UNLIKELYS: 0x1,\n  FLAG_WEIGHT_CLASSES: 0x2,\n  FLAG_CLEAN_CONDITIONALLY: 0x4,\n\n  // https://developer.mozilla.org/en-US/docs/Web/API/Node/nodeType\n  ELEMENT_NODE: 1,\n  TEXT_NODE: 3,\n\n  // Max number of nodes supported by this parser. Default: 0 (no limit)\n  DEFAULT_MAX_ELEMS_TO_PARSE: 0,\n\n  // The number of top candidates to consider when analysing how\n  // tight the competition is among candidates.\n  DEFAULT_N_TOP_CANDIDATES: 5,\n\n  // Element tags to score by default.\n  DEFAULT_TAGS_TO_SCORE: \"section,h2,h3,h4,h5,h6,p,td,pre\"\n    .toUpperCase()\n    .split(\",\"),\n\n  // The default number of chars an article must have in order to return a result\n  DEFAULT_CHAR_THRESHOLD: 500,\n\n  // All of the regular expressions in use within readability.\n  // Defined up here so we don't instantiate them repeatedly in loops.\n  REGEXPS: {\n    // NOTE: These two regular expressions are duplicated in\n    // Readability-readerable.js. Please keep both copies in sync.\n    unlikelyCandidates:\n      /-ad-|ai2html|banner|breadcrumbs|combx|comment|community|cover-wrap|disqus|extra|footer|gdpr|header|legends|menu|related|remark|replies|rss|shoutbox|sidebar|skyscraper|social|sponsor|supplemental|ad-break|agegate|pagination|pager|popup|yom-remote/i,\n    okMaybeItsACandidate: /and|article|body|column|content|main|shadow/i,\n\n    positive:\n      /article|body|content|entry|hentry|h-entry|main|page|pagination|post|text|blog|story/i,\n    negative:\n      /-ad-|hidden|^hid$| hid$| hid |^hid |banner|combx|comment|com-|contact|footer|gdpr|masthead|media|meta|outbrain|promo|related|scroll|share|shoutbox|sidebar|skyscraper|sponsor|shopping|tags|widget/i,\n    extraneous:\n      /print|archive|comment|discuss|e[\\-]?mail|share|reply|all|login|sign|single|utility/i,\n    byline: /byline|author|dateline|writtenby|p-author/i,\n    replaceFonts: /<(\\/?)font[^>]*>/gi,\n    normalize: /\\s{2,}/g,\n    videos:\n      /\\/\\/(www\\.)?((dailymotion|youtube|youtube-nocookie|player\\.vimeo|v\\.qq)\\.com|(archive|upload\\.wikimedia)\\.org|player\\.twitch\\.tv)/i,\n    shareElements: /(\\b|_)(share|sharedaddy)(\\b|_)/i,\n    nextLink: /(next|weiter|continue|>([^\\|]|$)|\u00BB([^\\|]|$))/i,\n    prevLink: /(prev|earl|old|new|<|\u00AB)/i,\n    tokenize: /\\W+/g,\n    whitespace: /^\\s*$/,\n    hasContent: /\\S$/,\n    hashUrl: /^#.+/,\n    srcsetUrl: /(\\S+)(\\s+[\\d.]+[xw])?(\\s*(?:,|$))/g,\n    b64DataUrl: /^data:\\s*([^\\s;,]+)\\s*;\\s*base64\\s*,/i,\n    // Commas as used in Latin, Sindhi, Chinese and various other scripts.\n    // see: https://en.wikipedia.org/wiki/Comma#Comma_variants\n    commas: /\\u002C|\\u060C|\\uFE50|\\uFE10|\\uFE11|\\u2E41|\\u2E34|\\u2E32|\\uFF0C/g,\n    // See: https://schema.org/Article\n    jsonLdArticleTypes:\n      /^Article|AdvertiserContentArticle|NewsArticle|AnalysisNewsArticle|AskPublicNewsArticle|BackgroundNewsArticle|OpinionNewsArticle|ReportageNewsArticle|ReviewNewsArticle|Report|SatiricalArticle|ScholarlyArticle|MedicalScholarlyArticle|SocialMediaPosting|BlogPosting|LiveBlogPosting|DiscussionForumPosting|TechArticle|APIReference$/,\n    // used to see if a node's content matches words commonly used for ad blocks or loading indicators\n    adWords:\n      /^(ad(vertising|vertisement)?|pub(licit\u00E9)?|werb(ung)?|\u5E7F\u544A|\u0420\u0435\u043A\u043B\u0430\u043C\u0430|Anuncio)$/iu,\n    loadingWords:\n      /^((loading|\u6B63\u5728\u52A0\u8F7D|\u0417\u0430\u0433\u0440\u0443\u0437\u043A\u0430|chargement|cargando)(\u2026|\\.\\.\\.)?)$/iu,\n  },\n\n  UNLIKELY_ROLES: [\n    \"menu\",\n    \"menubar\",\n    \"complementary\",\n    \"navigation\",\n    \"alert\",\n    \"alertdialog\",\n    \"dialog\",\n  ],\n\n  DIV_TO_P_ELEMS: new Set([\n    \"BLOCKQUOTE\",\n    \"DL\",\n    \"DIV\",\n    \"IMG\",\n    \"OL\",\n    \"P\",\n    \"PRE\",\n    \"TABLE\",\n    \"UL\",\n  ]),\n\n  ALTER_TO_DIV_EXCEPTIONS: [\"DIV\", \"ARTICLE\", \"SECTION\", \"P\", \"OL\", \"UL\"],\n\n  PRESENTATIONAL_ATTRIBUTES: [\n    \"align\",\n    \"background\",\n    \"bgcolor\",\n    \"border\",\n    \"cellpadding\",\n    \"cellspacing\",\n    \"frame\",\n    \"hspace\",\n    \"rules\",\n    \"style\",\n    \"valign\",\n    \"vspace\",\n  ],\n\n  DEPRECATED_SIZE_ATTRIBUTE_ELEMS: [\"TABLE\", \"TH\", \"TD\", \"HR\", \"PRE\"],\n\n  // The commented out elements qualify as phrasing content but tend to be\n  // removed by readability when put into paragraphs, so we ignore them here.\n  PHRASING_ELEMS: [\n    // \"CANVAS\", \"IFRAME\", \"SVG\", \"VIDEO\",\n    \"ABBR\",\n    \"AUDIO\",\n    \"B\",\n    \"BDO\",\n    \"BR\",\n    \"BUTTON\",\n    \"CITE\",\n    \"CODE\",\n    \"DATA\",\n    \"DATALIST\",\n    \"DFN\",\n    \"EM\",\n    \"EMBED\",\n    \"I\",\n    \"IMG\",\n    \"INPUT\",\n    \"KBD\",\n    \"LABEL\",\n    \"MARK\",\n    \"MATH\",\n    \"METER\",\n    \"NOSCRIPT\",\n    \"OBJECT\",\n    \"OUTPUT\",\n    \"PROGRESS\",\n    \"Q\",\n    \"RUBY\",\n    \"SAMP\",\n    \"SCRIPT\",\n    \"SELECT\",\n    \"SMALL\",\n    \"SPAN\",\n    \"STRONG\",\n    \"SUB\",\n    \"SUP\",\n    \"TEXTAREA\",\n    \"TIME\",\n    \"VAR\",\n    \"WBR\",\n  ],\n\n  // These are the classes that readability sets itself.\n  CLASSES_TO_PRESERVE: [\"page\"],\n\n  // These are the list of HTML entities that need to be escaped.\n  HTML_ESCAPE_MAP: {\n    lt: \"<\",\n    gt: \">\",\n    amp: \"&\",\n    quot: '\"',\n    apos: \"'\",\n  },\n\n  /**\n   * Run any post-process modifications to article content as necessary.\n   *\n   * @param Element\n   * @return void\n   **/\n  _postProcessContent(articleContent) {\n    // Readability cannot open relative uris so we convert them to absolute uris.\n    this._fixRelativeUris(articleContent);\n\n    this._simplifyNestedElements(articleContent);\n\n    if (!this._keepClasses) {\n      // Remove classes.\n      this._cleanClasses(articleContent);\n    }\n  },\n\n  /**\n   * Iterates over a NodeList, calls `filterFn` for each node and removes node\n   * if function returned `true`.\n   *\n   * If function is not passed, removes all the nodes in node list.\n   *\n   * @param NodeList nodeList The nodes to operate on\n   * @param Function filterFn the function to use as a filter\n   * @return void\n   */\n  _removeNodes(nodeList, filterFn) {\n    // Avoid ever operating on live node lists.\n    if (this._docJSDOMParser && nodeList._isLiveNodeList) {\n      throw new Error(\"Do not pass live node lists to _removeNodes\");\n    }\n    for (var i = nodeList.length - 1; i >= 0; i--) {\n      var node = nodeList[i];\n      var parentNode = node.parentNode;\n      if (parentNode) {\n        if (!filterFn || filterFn.call(this, node, i, nodeList)) {\n          parentNode.removeChild(node);\n        }\n      }\n    }\n  },\n\n  /**\n   * Iterates over a NodeList, and calls _setNodeTag for each node.\n   *\n   * @param NodeList nodeList The nodes to operate on\n   * @param String newTagName the new tag name to use\n   * @return void\n   */\n  _replaceNodeTags(nodeList, newTagName) {\n    // Avoid ever operating on live node lists.\n    if (this._docJSDOMParser && nodeList._isLiveNodeList) {\n      throw new Error(\"Do not pass live node lists to _replaceNodeTags\");\n    }\n    for (const node of nodeList) {\n      this._setNodeTag(node, newTagName);\n    }\n  },\n\n  /**\n   * Iterate over a NodeList, which doesn't natively fully implement the Array\n   * interface.\n   *\n   * For convenience, the current object context is applied to the provided\n   * iterate function.\n   *\n   * @param  NodeList nodeList The NodeList.\n   * @param  Function fn       The iterate function.\n   * @return void\n   */\n  _forEachNode(nodeList, fn) {\n    Array.prototype.forEach.call(nodeList, fn, this);\n  },\n\n  /**\n   * Iterate over a NodeList, and return the first node that passes\n   * the supplied test function\n   *\n   * For convenience, the current object context is applied to the provided\n   * test function.\n   *\n   * @param  NodeList nodeList The NodeList.\n   * @param  Function fn       The test function.\n   * @return void\n   */\n  _findNode(nodeList, fn) {\n    return Array.prototype.find.call(nodeList, fn, this);\n  },\n\n  /**\n   * Iterate over a NodeList, return true if any of the provided iterate\n   * function calls returns true, false otherwise.\n   *\n   * For convenience, the current object context is applied to the\n   * provided iterate function.\n   *\n   * @param  NodeList nodeList The NodeList.\n   * @param  Function fn       The iterate function.\n   * @return Boolean\n   */\n  _someNode(nodeList, fn) {\n    return Array.prototype.some.call(nodeList, fn, this);\n  },\n\n  /**\n   * Iterate over a NodeList, return true if all of the provided iterate\n   * function calls return true, false otherwise.\n   *\n   * For convenience, the current object context is applied to the\n   * provided iterate function.\n   *\n   * @param  NodeList nodeList The NodeList.\n   * @param  Function fn       The iterate function.\n   * @return Boolean\n   */\n  _everyNode(nodeList, fn) {\n    return Array.prototype.every.call(nodeList, fn, this);\n  },\n\n  _getAllNodesWithTag(node, tagNames) {\n    if (node.querySelectorAll) {\n      return node.querySelectorAll(tagNames.join(\",\"));\n    }\n    return [].concat.apply(\n      [],\n      tagNames.map(function (tag) {\n        var collection = node.getElementsByTagName(tag);\n        return Array.isArray(collection) ? collection : Array.from(collection);\n      })\n    );\n  },\n\n  /**\n   * Removes the class=\"\" attribute from every element in the given\n   * subtree, except those that match CLASSES_TO_PRESERVE and\n   * the classesToPreserve array from the options object.\n   *\n   * @param Element\n   * @return void\n   */\n  _cleanClasses(node) {\n    var classesToPreserve = this._classesToPreserve;\n    var className = (node.getAttribute(\"class\") || \"\")\n      .split(/\\s+/)\n      .filter(cls => classesToPreserve.includes(cls))\n      .join(\" \");\n\n    if (className) {\n      node.setAttribute(\"class\", className);\n    } else {\n      node.removeAttribute(\"class\");\n    }\n\n    for (node = node.firstElementChild; node; node = node.nextElementSibling) {\n      this._cleanClasses(node);\n    }\n  },\n\n  /**\n   * Tests whether a string is a URL or not.\n   *\n   * @param {string} str The string to test\n   * @return {boolean} true if str is a URL, false if not\n   */\n  _isUrl(str) {\n    try {\n      new URL(str);\n      return true;\n    } catch {\n      return false;\n    }\n  },\n  /**\n   * Converts each <a> and <img> uri in the given element to an absolute URI,\n   * ignoring #ref URIs.\n   *\n   * @param Element\n   * @return void\n   */\n  _fixRelativeUris(articleContent) {\n    var baseURI = this._doc.baseURI;\n    var documentURI = this._doc.documentURI;\n    function toAbsoluteURI(uri) {\n      // Leave hash links alone if the base URI matches the document URI:\n      if (baseURI == documentURI && uri.charAt(0) == \"#\") {\n        return uri;\n      }\n\n      // Otherwise, resolve against base URI:\n      try {\n        return new URL(uri, baseURI).href;\n      } catch (ex) {\n        // Something went wrong, just return the original:\n      }\n      return uri;\n    }\n\n    var links = this._getAllNodesWithTag(articleContent, [\"a\"]);\n    this._forEachNode(links, function (link) {\n      var href = link.getAttribute(\"href\");\n      if (href) {\n        // Remove links with javascript: URIs, since\n        // they won't work after scripts have been removed from the page.\n        if (href.indexOf(\"javascript:\") === 0) {\n          // if the link only contains simple text content, it can be converted to a text node\n          if (\n            link.childNodes.length === 1 &&\n            link.childNodes[0].nodeType === this.TEXT_NODE\n          ) {\n            var text = this._doc.createTextNode(link.textContent);\n            link.parentNode.replaceChild(text, link);\n          } else {\n            // if the link has multiple children, they should all be preserved\n            var container = this._doc.createElement(\"span\");\n            while (link.firstChild) {\n              container.appendChild(link.firstChild);\n            }\n            link.parentNode.replaceChild(container, link);\n          }\n        } else {\n          link.setAttribute(\"href\", toAbsoluteURI(href));\n        }\n      }\n    });\n\n    var medias = this._getAllNodesWithTag(articleContent, [\n      \"img\",\n      \"picture\",\n      \"figure\",\n      \"video\",\n      \"audio\",\n      \"source\",\n    ]);\n\n    this._forEachNode(medias, function (media) {\n      var src = media.getAttribute(\"src\");\n      var poster = media.getAttribute(\"poster\");\n      var srcset = media.getAttribute(\"srcset\");\n\n      if (src) {\n        media.setAttribute(\"src\", toAbsoluteURI(src));\n      }\n\n      if (poster) {\n        media.setAttribute(\"poster\", toAbsoluteURI(poster));\n      }\n\n      if (srcset) {\n        var newSrcset = srcset.replace(\n          this.REGEXPS.srcsetUrl,\n          function (_, p1, p2, p3) {\n            return toAbsoluteURI(p1) + (p2 || \"\") + p3;\n          }\n        );\n\n        media.setAttribute(\"srcset\", newSrcset);\n      }\n    });\n  },\n\n  _simplifyNestedElements(articleContent) {\n    var node = articleContent;\n\n    while (node) {\n      if (\n        node.parentNode &&\n        [\"DIV\", \"SECTION\"].includes(node.tagName) &&\n        !(node.id && node.id.startsWith(\"readability\"))\n      ) {\n        if (this._isElementWithoutContent(node)) {\n          node = this._removeAndGetNext(node);\n          continue;\n        } else if (\n          this._hasSingleTagInsideElement(node, \"DIV\") ||\n          this._hasSingleTagInsideElement(node, \"SECTION\")\n        ) {\n          var child = node.children[0];\n          for (var i = 0; i < node.attributes.length; i++) {\n            child.setAttributeNode(node.attributes[i].cloneNode());\n          }\n          node.parentNode.replaceChild(child, node);\n          node = child;\n          continue;\n        }\n      }\n\n      node = this._getNextNode(node);\n    }\n  },\n\n  /**\n   * Get the article title as an H1.\n   *\n   * @return string\n   **/\n  _getArticleTitle() {\n    var doc = this._doc;\n    var curTitle = \"\";\n    var origTitle = \"\";\n\n    try {\n      curTitle = origTitle = doc.title.trim();\n\n      // If they had an element with id \"title\" in their HTML\n      if (typeof curTitle !== \"string\") {\n        curTitle = origTitle = this._getInnerText(\n          doc.getElementsByTagName(\"title\")[0]\n        );\n      }\n    } catch (e) {\n      /* ignore exceptions setting the title. */\n    }\n\n    var titleHadHierarchicalSeparators = false;\n    function wordCount(str) {\n      return str.split(/\\s+/).length;\n    }\n\n    // If there's a separator in the title, first remove the final part\n    if (/ [\\|\\-\\\\\\/>\u00BB] /.test(curTitle)) {\n      titleHadHierarchicalSeparators = / [\\\\\\/>\u00BB] /.test(curTitle);\n      let allSeparators = Array.from(origTitle.matchAll(/ [\\|\\-\\\\\\/>\u00BB] /gi));\n      curTitle = origTitle.substring(0, allSeparators.pop().index);\n\n      // If the resulting title is too short, remove the first part instead:\n      if (wordCount(curTitle) < 3) {\n        curTitle = origTitle.replace(/^[^\\|\\-\\\\\\/>\u00BB]*[\\|\\-\\\\\\/>\u00BB]/gi, \"\");\n      }\n    } else if (curTitle.includes(\": \")) {\n      // Check if we have an heading containing this exact string, so we\n      // could assume it's the full title.\n      var headings = this._getAllNodesWithTag(doc, [\"h1\", \"h2\"]);\n      var trimmedTitle = curTitle.trim();\n      var match = this._someNode(headings, function (heading) {\n        return heading.textContent.trim() === trimmedTitle;\n      });\n\n      // If we don't, let's extract the title out of the original title string.\n      if (!match) {\n        curTitle = origTitle.substring(origTitle.lastIndexOf(\":\") + 1);\n\n        // If the title is now too short, try the first colon instead:\n        if (wordCount(curTitle) < 3) {\n          curTitle = origTitle.substring(origTitle.indexOf(\":\") + 1);\n          // But if we have too many words before the colon there's something weird\n          // with the titles and the H tags so let's just use the original title instead\n        } else if (wordCount(origTitle.substr(0, origTitle.indexOf(\":\"))) > 5) {\n          curTitle = origTitle;\n        }\n      }\n    } else if (curTitle.length > 150 || curTitle.length < 15) {\n      var hOnes = doc.getElementsByTagName(\"h1\");\n\n      if (hOnes.length === 1) {\n        curTitle = this._getInnerText(hOnes[0]);\n      }\n    }\n\n    curTitle = curTitle.trim().replace(this.REGEXPS.normalize, \" \");\n    // If we now have 4 words or fewer as our title, and either no\n    // 'hierarchical' separators (\\, /, > or \u00BB) were found in the original\n    // title or we decreased the number of words by more than 1 word, use\n    // the original title.\n    var curTitleWordCount = wordCount(curTitle);\n    if (\n      curTitleWordCount <= 4 &&\n      (!titleHadHierarchicalSeparators ||\n        curTitleWordCount !=\n          wordCount(origTitle.replace(/[\\|\\-\\\\\\/>\u00BB]+/g, \"\")) - 1)\n    ) {\n      curTitle = origTitle;\n    }\n\n    return curTitle;\n  },\n\n  /**\n   * Prepare the HTML document for readability to scrape it.\n   * This includes things like stripping javascript, CSS, and handling terrible markup.\n   *\n   * @return void\n   **/\n  _prepDocument() {\n    var doc = this._doc;\n\n    // Remove all style tags in head\n    this._removeNodes(this._getAllNodesWithTag(doc, [\"style\"]));\n\n    if (doc.body) {\n      this._replaceBrs(doc.body);\n    }\n\n    this._replaceNodeTags(this._getAllNodesWithTag(doc, [\"font\"]), \"SPAN\");\n  },\n\n  /**\n   * Finds the next node, starting from the given node, and ignoring\n   * whitespace in between. If the given node is an element, the same node is\n   * returned.\n   */\n  _nextNode(node) {\n    var next = node;\n    while (\n      next &&\n      next.nodeType != this.ELEMENT_NODE &&\n      this.REGEXPS.whitespace.test(next.textContent)\n    ) {\n      next = next.nextSibling;\n    }\n    return next;\n  },\n\n  /**\n   * Replaces 2 or more successive <br> elements with a single <p>.\n   * Whitespace between <br> elements are ignored. For example:\n   *   <div>foo<br>bar<br> <br><br>abc</div>\n   * will become:\n   *   <div>foo<br>bar<p>abc</p></div>\n   */\n  _replaceBrs(elem) {\n    this._forEachNode(this._getAllNodesWithTag(elem, [\"br\"]), function (br) {\n      var next = br.nextSibling;\n\n      // Whether 2 or more <br> elements have been found and replaced with a\n      // <p> block.\n      var replaced = false;\n\n      // If we find a <br> chain, remove the <br>s until we hit another node\n      // or non-whitespace. This leaves behind the first <br> in the chain\n      // (which will be replaced with a <p> later).\n      while ((next = this._nextNode(next)) && next.tagName == \"BR\") {\n        replaced = true;\n        var brSibling = next.nextSibling;\n        next.remove();\n        next = brSibling;\n      }\n\n      // If we removed a <br> chain, replace the remaining <br> with a <p>. Add\n      // all sibling nodes as children of the <p> until we hit another <br>\n      // chain.\n      if (replaced) {\n        var p = this._doc.createElement(\"p\");\n        br.parentNode.replaceChild(p, br);\n\n        next = p.nextSibling;\n        while (next) {\n          // If we've hit another <br><br>, we're done adding children to this <p>.\n          if (next.tagName == \"BR\") {\n            var nextElem = this._nextNode(next.nextSibling);\n            if (nextElem && nextElem.tagName == \"BR\") {\n              break;\n            }\n          }\n\n          if (!this._isPhrasingContent(next)) {\n            break;\n          }\n\n          // Otherwise, make this node a child of the new <p>.\n          var sibling = next.nextSibling;\n          p.appendChild(next);\n          next = sibling;\n        }\n\n        while (p.lastChild && this._isWhitespace(p.lastChild)) {\n          p.lastChild.remove();\n        }\n\n        if (p.parentNode.tagName === \"P\") {\n          this._setNodeTag(p.parentNode, \"DIV\");\n        }\n      }\n    });\n  },\n\n  _setNodeTag(node, tag) {\n    this.log(\"_setNodeTag\", node, tag);\n    if (this._docJSDOMParser) {\n      node.localName = tag.toLowerCase();\n      node.tagName = tag.toUpperCase();\n      return node;\n    }\n\n    var replacement = node.ownerDocument.createElement(tag);\n    while (node.firstChild) {\n      replacement.appendChild(node.firstChild);\n    }\n    node.parentNode.replaceChild(replacement, node);\n    if (node.readability) {\n      replacement.readability = node.readability;\n    }\n\n    for (var i = 0; i < node.attributes.length; i++) {\n      replacement.setAttributeNode(node.attributes[i].cloneNode());\n    }\n    return replacement;\n  },\n\n  /**\n   * Prepare the article node for display. Clean out any inline styles,\n   * iframes, forms, strip extraneous <p> tags, etc.\n   *\n   * @param Element\n   * @return void\n   **/\n  _prepArticle(articleContent) {\n    this._cleanStyles(articleContent);\n\n    // Check for data tables before we continue, to avoid removing items in\n    // those tables, which will often be isolated even though they're\n    // visually linked to other content-ful elements (text, images, etc.).\n    this._markDataTables(articleContent);\n\n    this._fixLazyImages(articleContent);\n\n    // Clean out junk from the article content\n    this._cleanConditionally(articleContent, \"form\");\n    this._cleanConditionally(articleContent, \"fieldset\");\n    this._clean(articleContent, \"object\");\n    this._clean(articleContent, \"embed\");\n    this._clean(articleContent, \"footer\");\n    this._clean(articleContent, \"link\");\n    this._clean(articleContent, \"aside\");\n\n    // Clean out elements with little content that have \"share\" in their id/class combinations from final top candidates,\n    // which means we don't remove the top candidates even they have \"share\".\n\n    var shareElementThreshold = this.DEFAULT_CHAR_THRESHOLD;\n\n    this._forEachNode(articleContent.children, function (topCandidate) {\n      this._cleanMatchedNodes(topCandidate, function (node, matchString) {\n        return (\n          this.REGEXPS.shareElements.test(matchString) &&\n          node.textContent.length < shareElementThreshold\n        );\n      });\n    });\n\n    this._clean(articleContent, \"iframe\");\n    this._clean(articleContent, \"input\");\n    this._clean(articleContent, \"textarea\");\n    this._clean(articleContent, \"select\");\n    this._clean(articleContent, \"button\");\n    this._cleanHeaders(articleContent);\n\n    // Do these last as the previous stuff may have removed junk\n    // that will affect these\n    this._cleanConditionally(articleContent, \"table\");\n    this._cleanConditionally(articleContent, \"ul\");\n    this._cleanConditionally(articleContent, \"div\");\n\n    // replace H1 with H2 as H1 should be only title that is displayed separately\n    this._replaceNodeTags(\n      this._getAllNodesWithTag(articleContent, [\"h1\"]),\n      \"h2\"\n    );\n\n    // Remove extra paragraphs\n    this._removeNodes(\n      this._getAllNodesWithTag(articleContent, [\"p\"]),\n      function (paragraph) {\n        // At this point, nasty iframes have been removed; only embedded video\n        // ones remain.\n        var contentElementCount = this._getAllNodesWithTag(paragraph, [\n          \"img\",\n          \"embed\",\n          \"object\",\n          \"iframe\",\n        ]).length;\n        return (\n          contentElementCount === 0 && !this._getInnerText(paragraph, false)\n        );\n      }\n    );\n\n    this._forEachNode(\n      this._getAllNodesWithTag(articleContent, [\"br\"]),\n      function (br) {\n        var next = this._nextNode(br.nextSibling);\n        if (next && next.tagName == \"P\") {\n          br.remove();\n        }\n      }\n    );\n\n    // Remove single-cell tables\n    this._forEachNode(\n      this._getAllNodesWithTag(articleContent, [\"table\"]),\n      function (table) {\n        var tbody = this._hasSingleTagInsideElement(table, \"TBODY\")\n          ? table.firstElementChild\n          : table;\n        if (this._hasSingleTagInsideElement(tbody, \"TR\")) {\n          var row = tbody.firstElementChild;\n          if (this._hasSingleTagInsideElement(row, \"TD\")) {\n            var cell = row.firstElementChild;\n            cell = this._setNodeTag(\n              cell,\n              this._everyNode(cell.childNodes, this._isPhrasingContent)\n                ? \"P\"\n                : \"DIV\"\n            );\n            table.parentNode.replaceChild(cell, table);\n          }\n        }\n      }\n    );\n  },\n\n  /**\n   * Initialize a node with the readability object. Also checks the\n   * className/id for special names to add to its score.\n   *\n   * @param Element\n   * @return void\n   **/\n  _initializeNode(node) {\n    node.readability = { contentScore: 0 };\n\n    switch (node.tagName) {\n      case \"DIV\":\n        node.readability.contentScore += 5;\n        break;\n\n      case \"PRE\":\n      case \"TD\":\n      case \"BLOCKQUOTE\":\n        node.readability.contentScore += 3;\n        break;\n\n      case \"ADDRESS\":\n      case \"OL\":\n      case \"UL\":\n      case \"DL\":\n      case \"DD\":\n      case \"DT\":\n      case \"LI\":\n      case \"FORM\":\n        node.readability.contentScore -= 3;\n        break;\n\n      case \"H1\":\n      case \"H2\":\n      case \"H3\":\n      case \"H4\":\n      case \"H5\":\n      case \"H6\":\n      case \"TH\":\n        node.readability.contentScore -= 5;\n        break;\n    }\n\n    node.readability.contentScore += this._getClassWeight(node);\n  },\n\n  _removeAndGetNext(node) {\n    var nextNode = this._getNextNode(node, true);\n    node.remove();\n    return nextNode;\n  },\n\n  /**\n   * Traverse the DOM from node to node, starting at the node passed in.\n   * Pass true for the second parameter to indicate this node itself\n   * (and its kids) are going away, and we want the next node over.\n   *\n   * Calling this in a loop will traverse the DOM depth-first.\n   *\n   * @param {Element} node\n   * @param {boolean} ignoreSelfAndKids\n   * @return {Element}\n   */\n  _getNextNode(node, ignoreSelfAndKids) {\n    // First check for kids if those aren't being ignored\n    if (!ignoreSelfAndKids && node.firstElementChild) {\n      return node.firstElementChild;\n    }\n    // Then for siblings...\n    if (node.nextElementSibling) {\n      return node.nextElementSibling;\n    }\n    // And finally, move up the parent chain *and* find a sibling\n    // (because this is depth-first traversal, we will have already\n    // seen the parent nodes themselves).\n    do {\n      node = node.parentNode;\n    } while (node && !node.nextElementSibling);\n    return node && node.nextElementSibling;\n  },\n\n  // compares second text to first one\n  // 1 = same text, 0 = completely different text\n  // works the way that it splits both texts into words and then finds words that are unique in second text\n  // the result is given by the lower length of unique parts\n  _textSimilarity(textA, textB) {\n    var tokensA = textA\n      .toLowerCase()\n      .split(this.REGEXPS.tokenize)\n      .filter(Boolean);\n    var tokensB = textB\n      .toLowerCase()\n      .split(this.REGEXPS.tokenize)\n      .filter(Boolean);\n    if (!tokensA.length || !tokensB.length) {\n      return 0;\n    }\n    var uniqTokensB = tokensB.filter(token => !tokensA.includes(token));\n    var distanceB = uniqTokensB.join(\" \").length / tokensB.join(\" \").length;\n    return 1 - distanceB;\n  },\n\n  /**\n   * Checks whether an element node contains a valid byline\n   *\n   * @param node {Element}\n   * @param matchString {string}\n   * @return boolean\n   */\n  _isValidByline(node, matchString) {\n    var rel = node.getAttribute(\"rel\");\n    var itemprop = node.getAttribute(\"itemprop\");\n    var bylineLength = node.textContent.trim().length;\n\n    return (\n      (rel === \"author\" ||\n        (itemprop && itemprop.includes(\"author\")) ||\n        this.REGEXPS.byline.test(matchString)) &&\n      !!bylineLength &&\n      bylineLength < 100\n    );\n  },\n\n  _getNodeAncestors(node, maxDepth) {\n    maxDepth = maxDepth || 0;\n    var i = 0,\n      ancestors = [];\n    while (node.parentNode) {\n      ancestors.push(node.parentNode);\n      if (maxDepth && ++i === maxDepth) {\n        break;\n      }\n      node = node.parentNode;\n    }\n    return ancestors;\n  },\n\n  /***\n   * grabArticle - Using a variety of metrics (content score, classname, element types), find the content that is\n   *         most likely to be the stuff a user wants to read. Then return it wrapped up in a div.\n   *\n   * @param page a document to run upon. Needs to be a full document, complete with body.\n   * @return Element\n   **/\n  /* eslint-disable-next-line complexity */\n  _grabArticle(page) {\n    this.log(\"**** grabArticle ****\");\n    var doc = this._doc;\n    var isPaging = page !== null;\n    page = page ? page : this._doc.body;\n\n    // We can't grab an article if we don't have a page!\n    if (!page) {\n      this.log(\"No body found in document. Abort.\");\n      return null;\n    }\n\n    var pageCacheHtml = page.innerHTML;\n\n    while (true) {\n      this.log(\"Starting grabArticle loop\");\n      var stripUnlikelyCandidates = this._flagIsActive(\n        this.FLAG_STRIP_UNLIKELYS\n      );\n\n      // First, node prepping. Trash nodes that look cruddy (like ones with the\n      // class name \"comment\", etc), and turn divs into P tags where they have been\n      // used inappropriately (as in, where they contain no other block level elements.)\n      var elementsToScore = [];\n      var node = this._doc.documentElement;\n\n      let shouldRemoveTitleHeader = true;\n\n      while (node) {\n        if (node.tagName === \"HTML\") {\n          this._articleLang = node.getAttribute(\"lang\");\n        }\n\n        var matchString = node.className + \" \" + node.id;\n\n        if (!this._isProbablyVisible(node)) {\n          this.log(\"Removing hidden node - \" + matchString);\n          node = this._removeAndGetNext(node);\n          continue;\n        }\n\n        // User is not able to see elements applied with both \"aria-modal = true\" and \"role = dialog\"\n        if (\n          node.getAttribute(\"aria-modal\") == \"true\" &&\n          node.getAttribute(\"role\") == \"dialog\"\n        ) {\n          node = this._removeAndGetNext(node);\n          continue;\n        }\n\n        // If we don't have a byline yet check to see if this node is a byline; if it is store the byline and remove the node.\n        if (\n          !this._articleByline &&\n          !this._metadata.byline &&\n          this._isValidByline(node, matchString)\n        ) {\n          // Find child node matching [itemprop=\"name\"] and use that if it exists for a more accurate author name byline\n          var endOfSearchMarkerNode = this._getNextNode(node, true);\n          var next = this._getNextNode(node);\n          var itemPropNameNode = null;\n          while (next && next != endOfSearchMarkerNode) {\n            var itemprop = next.getAttribute(\"itemprop\");\n            if (itemprop && itemprop.includes(\"name\")) {\n              itemPropNameNode = next;\n              break;\n            } else {\n              next = this._getNextNode(next);\n            }\n          }\n          this._articleByline = (itemPropNameNode ?? node).textContent.trim();\n          node = this._removeAndGetNext(node);\n          continue;\n        }\n\n        if (shouldRemoveTitleHeader && this._headerDuplicatesTitle(node)) {\n          this.log(\n            \"Removing header: \",\n            node.textContent.trim(),\n            this._articleTitle.trim()\n          );\n          shouldRemoveTitleHeader = false;\n          node = this._removeAndGetNext(node);\n          continue;\n        }\n\n        // Remove unlikely candidates\n        if (stripUnlikelyCandidates) {\n          if (\n            this.REGEXPS.unlikelyCandidates.test(matchString) &&\n            !this.REGEXPS.okMaybeItsACandidate.test(matchString) &&\n            !this._hasAncestorTag(node, \"table\") &&\n            !this._hasAncestorTag(node, \"code\") &&\n            node.tagName !== \"BODY\" &&\n            node.tagName !== \"A\"\n          ) {\n            this.log(\"Removing unlikely candidate - \" + matchString);\n            node = this._removeAndGetNext(node);\n            continue;\n          }\n\n          if (this.UNLIKELY_ROLES.includes(node.getAttribute(\"role\"))) {\n            this.log(\n              \"Removing content with role \" +\n                node.getAttribute(\"role\") +\n                \" - \" +\n                matchString\n            );\n            node = this._removeAndGetNext(node);\n            continue;\n          }\n        }\n\n        // Remove DIV, SECTION, and HEADER nodes without any content(e.g. text, image, video, or iframe).\n        if (\n          (node.tagName === \"DIV\" ||\n            node.tagName === \"SECTION\" ||\n            node.tagName === \"HEADER\" ||\n            node.tagName === \"H1\" ||\n            node.tagName === \"H2\" ||\n            node.tagName === \"H3\" ||\n            node.tagName === \"H4\" ||\n            node.tagName === \"H5\" ||\n            node.tagName === \"H6\") &&\n          this._isElementWithoutContent(node)\n        ) {\n          node = this._removeAndGetNext(node);\n          continue;\n        }\n\n        if (this.DEFAULT_TAGS_TO_SCORE.includes(node.tagName)) {\n          elementsToScore.push(node);\n        }\n\n        // Turn all divs that don't have children block level elements into p's\n        if (node.tagName === \"DIV\") {\n          // Put phrasing content into paragraphs.\n          var p = null;\n          var childNode = node.firstChild;\n          while (childNode) {\n            var nextSibling = childNode.nextSibling;\n            if (this._isPhrasingContent(childNode)) {\n              if (p !== null) {\n                p.appendChild(childNode);\n              } else if (!this._isWhitespace(childNode)) {\n                p = doc.createElement(\"p\");\n                node.replaceChild(p, childNode);\n                p.appendChild(childNode);\n              }\n            } else if (p !== null) {\n              while (p.lastChild && this._isWhitespace(p.lastChild)) {\n                p.lastChild.remove();\n              }\n              p = null;\n            }\n            childNode = nextSibling;\n          }\n\n          // Sites like http://mobile.slate.com encloses each paragraph with a DIV\n          // element. DIVs with only a P element inside and no text content can be\n          // safely converted into plain P elements to avoid confusing the scoring\n          // algorithm with DIVs with are, in practice, paragraphs.\n          if (\n            this._hasSingleTagInsideElement(node, \"P\") &&\n            this._getLinkDensity(node) < 0.25\n          ) {\n            var newNode = node.children[0];\n            node.parentNode.replaceChild(newNode, node);\n            node = newNode;\n            elementsToScore.push(node);\n          } else if (!this._hasChildBlockElement(node)) {\n            node = this._setNodeTag(node, \"P\");\n            elementsToScore.push(node);\n          }\n        }\n        node = this._getNextNode(node);\n      }\n\n      /**\n       * Loop through all paragraphs, and assign a score to them based on how content-y they look.\n       * Then add their score to their parent node.\n       *\n       * A score is determined by things like number of commas, class names, etc. Maybe eventually link density.\n       **/\n      var candidates = [];\n      this._forEachNode(elementsToScore, function (elementToScore) {\n        if (\n          !elementToScore.parentNode ||\n          typeof elementToScore.parentNode.tagName === \"undefined\"\n        ) {\n          return;\n        }\n\n        // If this paragraph is less than 25 characters, don't even count it.\n        var innerText = this._getInnerText(elementToScore);\n        if (innerText.length < 25) {\n          return;\n        }\n\n        // Exclude nodes with no ancestor.\n        var ancestors = this._getNodeAncestors(elementToScore, 5);\n        if (ancestors.length === 0) {\n          return;\n        }\n\n        var contentScore = 0;\n\n        // Add a point for the paragraph itself as a base.\n        contentScore += 1;\n\n        // Add points for any commas within this paragraph.\n        contentScore += innerText.split(this.REGEXPS.commas).length;\n\n        // For every 100 characters in this paragraph, add another point. Up to 3 points.\n        contentScore += Math.min(Math.floor(innerText.length / 100), 3);\n\n        // Initialize and score ancestors.\n        this._forEachNode(ancestors, function (ancestor, level) {\n          if (\n            !ancestor.tagName ||\n            !ancestor.parentNode ||\n            typeof ancestor.parentNode.tagName === \"undefined\"\n          ) {\n            return;\n          }\n\n          if (typeof ancestor.readability === \"undefined\") {\n            this._initializeNode(ancestor);\n            candidates.push(ancestor);\n          }\n\n          // Node score divider:\n          // - parent:             1 (no division)\n          // - grandparent:        2\n          // - great grandparent+: ancestor level * 3\n          if (level === 0) {\n            var scoreDivider = 1;\n          } else if (level === 1) {\n            scoreDivider = 2;\n          } else {\n            scoreDivider = level * 3;\n          }\n          ancestor.readability.contentScore += contentScore / scoreDivider;\n        });\n      });\n\n      // After we've calculated scores, loop through all of the possible\n      // candidate nodes we found and find the one with the highest score.\n      var topCandidates = [];\n      for (var c = 0, cl = candidates.length; c < cl; c += 1) {\n        var candidate = candidates[c];\n\n        // Scale the final candidates score based on link density. Good content\n        // should have a relatively small link density (5% or less) and be mostly\n        // unaffected by this operation.\n        var candidateScore =\n          candidate.readability.contentScore *\n          (1 - this._getLinkDensity(candidate));\n        candidate.readability.contentScore = candidateScore;\n\n        this.log(\"Candidate:\", candidate, \"with score \" + candidateScore);\n\n        for (var t = 0; t < this._nbTopCandidates; t++) {\n          var aTopCandidate = topCandidates[t];\n\n          if (\n            !aTopCandidate ||\n            candidateScore > aTopCandidate.readability.contentScore\n          ) {\n            topCandidates.splice(t, 0, candidate);\n            if (topCandidates.length > this._nbTopCandidates) {\n              topCandidates.pop();\n            }\n            break;\n          }\n        }\n      }\n\n      var topCandidate = topCandidates[0] || null;\n      var neededToCreateTopCandidate = false;\n      var parentOfTopCandidate;\n\n      // If we still have no top candidate, just use the body as a last resort.\n      // We also have to copy the body node so it is something we can modify.\n      if (topCandidate === null || topCandidate.tagName === \"BODY\") {\n        // Move all of the page's children into topCandidate\n        topCandidate = doc.createElement(\"DIV\");\n        neededToCreateTopCandidate = true;\n        // Move everything (not just elements, also text nodes etc.) into the container\n        // so we even include text directly in the body:\n        while (page.firstChild) {\n          this.log(\"Moving child out:\", page.firstChild);\n          topCandidate.appendChild(page.firstChild);\n        }\n\n        page.appendChild(topCandidate);\n\n        this._initializeNode(topCandidate);\n      } else if (topCandidate) {\n        // Find a better top candidate node if it contains (at least three) nodes which belong to `topCandidates` array\n        // and whose scores are quite closed with current `topCandidate` node.\n        var alternativeCandidateAncestors = [];\n        for (var i = 1; i < topCandidates.length; i++) {\n          if (\n            topCandidates[i].readability.contentScore /\n              topCandidate.readability.contentScore >=\n            0.75\n          ) {\n            alternativeCandidateAncestors.push(\n              this._getNodeAncestors(topCandidates[i])\n            );\n          }\n        }\n        var MINIMUM_TOPCANDIDATES = 3;\n        if (alternativeCandidateAncestors.length >= MINIMUM_TOPCANDIDATES) {\n          parentOfTopCandidate = topCandidate.parentNode;\n          while (parentOfTopCandidate.tagName !== \"BODY\") {\n            var listsContainingThisAncestor = 0;\n            for (\n              var ancestorIndex = 0;\n              ancestorIndex < alternativeCandidateAncestors.length &&\n              listsContainingThisAncestor < MINIMUM_TOPCANDIDATES;\n              ancestorIndex++\n            ) {\n              listsContainingThisAncestor += Number(\n                alternativeCandidateAncestors[ancestorIndex].includes(\n                  parentOfTopCandidate\n                )\n              );\n            }\n            if (listsContainingThisAncestor >= MINIMUM_TOPCANDIDATES) {\n              topCandidate = parentOfTopCandidate;\n              break;\n            }\n            parentOfTopCandidate = parentOfTopCandidate.parentNode;\n          }\n        }\n        if (!topCandidate.readability) {\n          this._initializeNode(topCandidate);\n        }\n\n        // Because of our bonus system, parents of candidates might have scores\n        // themselves. They get half of the node. There won't be nodes with higher\n        // scores than our topCandidate, but if we see the score going *up* in the first\n        // few steps up the tree, that's a decent sign that there might be more content\n        // lurking in other places that we want to unify in. The sibling stuff\n        // below does some of that - but only if we've looked high enough up the DOM\n        // tree.\n        parentOfTopCandidate = topCandidate.parentNode;\n        var lastScore = topCandidate.readability.contentScore;\n        // The scores shouldn't get too low.\n        var scoreThreshold = lastScore / 3;\n        while (parentOfTopCandidate.tagName !== \"BODY\") {\n          if (!parentOfTopCandidate.readability) {\n            parentOfTopCandidate = parentOfTopCandidate.parentNode;\n            continue;\n          }\n          var parentScore = parentOfTopCandidate.readability.contentScore;\n          if (parentScore < scoreThreshold) {\n            break;\n          }\n          if (parentScore > lastScore) {\n            // Alright! We found a better parent to use.\n            topCandidate = parentOfTopCandidate;\n            break;\n          }\n          lastScore = parentOfTopCandidate.readability.contentScore;\n          parentOfTopCandidate = parentOfTopCandidate.parentNode;\n        }\n\n        // If the top candidate is the only child, use parent instead. This will help sibling\n        // joining logic when adjacent content is actually located in parent's sibling node.\n        parentOfTopCandidate = topCandidate.parentNode;\n        while (\n          parentOfTopCandidate.tagName != \"BODY\" &&\n          parentOfTopCandidate.children.length == 1\n        ) {\n          topCandidate = parentOfTopCandidate;\n          parentOfTopCandidate = topCandidate.parentNode;\n        }\n        if (!topCandidate.readability) {\n          this._initializeNode(topCandidate);\n        }\n      }\n\n      // Now that we have the top candidate, look through its siblings for content\n      // that might also be related. Things like preambles, content split by ads\n      // that we removed, etc.\n      var articleContent = doc.createElement(\"DIV\");\n      if (isPaging) {\n        articleContent.id = \"readability-content\";\n      }\n\n      var siblingScoreThreshold = Math.max(\n        10,\n        topCandidate.readability.contentScore * 0.2\n      );\n      // Keep potential top candidate's parent node to try to get text direction of it later.\n      parentOfTopCandidate = topCandidate.parentNode;\n      var siblings = parentOfTopCandidate.children;\n\n      for (var s = 0, sl = siblings.length; s < sl; s++) {\n        var sibling = siblings[s];\n        var append = false;\n\n        this.log(\n          \"Looking at sibling node:\",\n          sibling,\n          sibling.readability\n            ? \"with score \" + sibling.readability.contentScore\n            : \"\"\n        );\n        this.log(\n          \"Sibling has score\",\n          sibling.readability ? sibling.readability.contentScore : \"Unknown\"\n        );\n\n        if (sibling === topCandidate) {\n          append = true;\n        } else {\n          var contentBonus = 0;\n\n          // Give a bonus if sibling nodes and top candidates have the example same classname\n          if (\n            sibling.className === topCandidate.className &&\n            topCandidate.className !== \"\"\n          ) {\n            contentBonus += topCandidate.readability.contentScore * 0.2;\n          }\n\n          if (\n            sibling.readability &&\n            sibling.readability.contentScore + contentBonus >=\n              siblingScoreThreshold\n          ) {\n            append = true;\n          } else if (sibling.nodeName === \"P\") {\n            var linkDensity = this._getLinkDensity(sibling);\n            var nodeContent = this._getInnerText(sibling);\n            var nodeLength = nodeContent.length;\n\n            if (nodeLength > 80 && linkDensity < 0.25) {\n              append = true;\n            } else if (\n              nodeLength < 80 &&\n              nodeLength > 0 &&\n              linkDensity === 0 &&\n              nodeContent.search(/\\.( |$)/) !== -1\n            ) {\n              append = true;\n            }\n          }\n        }\n\n        if (append) {\n          this.log(\"Appending node:\", sibling);\n\n          if (!this.ALTER_TO_DIV_EXCEPTIONS.includes(sibling.nodeName)) {\n            // We have a node that isn't a common block level element, like a form or td tag.\n            // Turn it into a div so it doesn't get filtered out later by accident.\n            this.log(\"Altering sibling:\", sibling, \"to div.\");\n\n            sibling = this._setNodeTag(sibling, \"DIV\");\n          }\n\n          articleContent.appendChild(sibling);\n          // Fetch children again to make it compatible\n          // with DOM parsers without live collection support.\n          siblings = parentOfTopCandidate.children;\n          // siblings is a reference to the children array, and\n          // sibling is removed from the array when we call appendChild().\n          // As a result, we must revisit this index since the nodes\n          // have been shifted.\n          s -= 1;\n          sl -= 1;\n        }\n      }\n\n      if (this._debug) {\n        this.log(\"Article content pre-prep: \" + articleContent.innerHTML);\n      }\n      // So we have all of the content that we need. Now we clean it up for presentation.\n      this._prepArticle(articleContent);\n      if (this._debug) {\n        this.log(\"Article content post-prep: \" + articleContent.innerHTML);\n      }\n\n      if (neededToCreateTopCandidate) {\n        // We already created a fake div thing, and there wouldn't have been any siblings left\n        // for the previous loop, so there's no point trying to create a new div, and then\n        // move all the children over. Just assign IDs and class names here. No need to append\n        // because that already happened anyway.\n        topCandidate.id = \"readability-page-1\";\n        topCandidate.className = \"page\";\n      } else {\n        var div = doc.createElement(\"DIV\");\n        div.id = \"readability-page-1\";\n        div.className = \"page\";\n        while (articleContent.firstChild) {\n          div.appendChild(articleContent.firstChild);\n        }\n        articleContent.appendChild(div);\n      }\n\n      if (this._debug) {\n        this.log(\"Article content after paging: \" + articleContent.innerHTML);\n      }\n\n      var parseSuccessful = true;\n\n      // Now that we've gone through the full algorithm, check to see if\n      // we got any meaningful content. If we didn't, we may need to re-run\n      // grabArticle with different flags set. This gives us a higher likelihood of\n      // finding the content, and the sieve approach gives us a higher likelihood of\n      // finding the -right- content.\n      var textLength = this._getInnerText(articleContent, true).length;\n      if (textLength < this._charThreshold) {\n        parseSuccessful = false;\n        // eslint-disable-next-line no-unsanitized/property\n        page.innerHTML = pageCacheHtml;\n\n        this._attempts.push({\n          articleContent,\n          textLength,\n        });\n\n        if (this._flagIsActive(this.FLAG_STRIP_UNLIKELYS)) {\n          this._removeFlag(this.FLAG_STRIP_UNLIKELYS);\n        } else if (this._flagIsActive(this.FLAG_WEIGHT_CLASSES)) {\n          this._removeFlag(this.FLAG_WEIGHT_CLASSES);\n        } else if (this._flagIsActive(this.FLAG_CLEAN_CONDITIONALLY)) {\n          this._removeFlag(this.FLAG_CLEAN_CONDITIONALLY);\n        } else {\n          // No luck after removing flags, just return the longest text we found during the different loops\n          this._attempts.sort(function (a, b) {\n            return b.textLength - a.textLength;\n          });\n\n          // But first check if we actually have something\n          if (!this._attempts[0].textLength) {\n            return null;\n          }\n\n          articleContent = this._attempts[0].articleContent;\n          parseSuccessful = true;\n        }\n      }\n\n      if (parseSuccessful) {\n        // Find out text direction from ancestors of final top candidate.\n        var ancestors = [parentOfTopCandidate, topCandidate].concat(\n          this._getNodeAncestors(parentOfTopCandidate)\n        );\n        this._someNode(ancestors, function (ancestor) {\n          if (!ancestor.tagName) {\n            return false;\n          }\n          var articleDir = ancestor.getAttribute(\"dir\");\n          if (articleDir) {\n            this._articleDir = articleDir;\n            return true;\n          }\n          return false;\n        });\n        return articleContent;\n      }\n    }\n  },\n\n  /**\n   * Converts some of the common HTML entities in string to their corresponding characters.\n   *\n   * @param str {string} - a string to unescape.\n   * @return string without HTML entity.\n   */\n  _unescapeHtmlEntities(str) {\n    if (!str) {\n      return str;\n    }\n\n    var htmlEscapeMap = this.HTML_ESCAPE_MAP;\n    return str\n      .replace(/&(quot|amp|apos|lt|gt);/g, function (_, tag) {\n        return htmlEscapeMap[tag];\n      })\n      .replace(/&#(?:x([0-9a-f]+)|([0-9]+));/gi, function (_, hex, numStr) {\n        var num = parseInt(hex || numStr, hex ? 16 : 10);\n\n        // these character references are replaced by a conforming HTML parser\n        if (num == 0 || num > 0x10ffff || (num >= 0xd800 && num <= 0xdfff)) {\n          num = 0xfffd;\n        }\n\n        return String.fromCodePoint(num);\n      });\n  },\n\n  /**\n   * Try to extract metadata from JSON-LD object.\n   * For now, only Schema.org objects of type Article or its subtypes are supported.\n   * @return Object with any metadata that could be extracted (possibly none)\n   */\n  _getJSONLD(doc) {\n    var scripts = this._getAllNodesWithTag(doc, [\"script\"]);\n\n    var metadata;\n\n    this._forEachNode(scripts, function (jsonLdElement) {\n      if (\n        !metadata &&\n        jsonLdElement.getAttribute(\"type\") === \"application/ld+json\"\n      ) {\n        try {\n          // Strip CDATA markers if present\n          var content = jsonLdElement.textContent.replace(\n            /^\\s*<!\\[CDATA\\[|\\]\\]>\\s*$/g,\n            \"\"\n          );\n          var parsed = JSON.parse(content);\n\n          if (Array.isArray(parsed)) {\n            parsed = parsed.find(it => {\n              return (\n                it[\"@type\"] &&\n                it[\"@type\"].match(this.REGEXPS.jsonLdArticleTypes)\n              );\n            });\n            if (!parsed) {\n              return;\n            }\n          }\n\n          var schemaDotOrgRegex = /^https?\\:\\/\\/schema\\.org\\/?$/;\n          var matches =\n            (typeof parsed[\"@context\"] === \"string\" &&\n              parsed[\"@context\"].match(schemaDotOrgRegex)) ||\n            (typeof parsed[\"@context\"] === \"object\" &&\n              typeof parsed[\"@context\"][\"@vocab\"] == \"string\" &&\n              parsed[\"@context\"][\"@vocab\"].match(schemaDotOrgRegex));\n\n          if (!matches) {\n            return;\n          }\n\n          if (!parsed[\"@type\"] && Array.isArray(parsed[\"@graph\"])) {\n            parsed = parsed[\"@graph\"].find(it => {\n              return (it[\"@type\"] || \"\").match(this.REGEXPS.jsonLdArticleTypes);\n            });\n          }\n\n          if (\n            !parsed ||\n            !parsed[\"@type\"] ||\n            !parsed[\"@type\"].match(this.REGEXPS.jsonLdArticleTypes)\n          ) {\n            return;\n          }\n\n          metadata = {};\n\n          if (\n            typeof parsed.name === \"string\" &&\n            typeof parsed.headline === \"string\" &&\n            parsed.name !== parsed.headline\n          ) {\n            // we have both name and headline element in the JSON-LD. They should both be the same but some websites like aktualne.cz\n            // put their own name into \"name\" and the article title to \"headline\" which confuses Readability. So we try to check if either\n            // \"name\" or \"headline\" closely matches the html title, and if so, use that one. If not, then we use \"name\" by default.\n\n            var title = this._getArticleTitle();\n            var nameMatches = this._textSimilarity(parsed.name, title) > 0.75;\n            var headlineMatches =\n              this._textSimilarity(parsed.headline, title) > 0.75;\n\n            if (headlineMatches && !nameMatches) {\n              metadata.title = parsed.headline;\n            } else {\n              metadata.title = parsed.name;\n            }\n          } else if (typeof parsed.name === \"string\") {\n            metadata.title = parsed.name.trim();\n          } else if (typeof parsed.headline === \"string\") {\n            metadata.title = parsed.headline.trim();\n          }\n          if (parsed.author) {\n            if (typeof parsed.author.name === \"string\") {\n              metadata.byline = parsed.author.name.trim();\n            } else if (\n              Array.isArray(parsed.author) &&\n              parsed.author[0] &&\n              typeof parsed.author[0].name === \"string\"\n            ) {\n              metadata.byline = parsed.author\n                .filter(function (author) {\n                  return author && typeof author.name === \"string\";\n                })\n                .map(function (author) {\n                  return author.name.trim();\n                })\n                .join(\", \");\n            }\n          }\n          if (typeof parsed.description === \"string\") {\n            metadata.excerpt = parsed.description.trim();\n          }\n          if (parsed.publisher && typeof parsed.publisher.name === \"string\") {\n            metadata.siteName = parsed.publisher.name.trim();\n          }\n          if (typeof parsed.datePublished === \"string\") {\n            metadata.datePublished = parsed.datePublished.trim();\n          }\n        } catch (err) {\n          this.log(err.message);\n        }\n      }\n    });\n    return metadata ? metadata : {};\n  },\n\n  /**\n   * Attempts to get excerpt and byline metadata for the article.\n   *\n   * @param {Object} jsonld \u2014 object containing any metadata that\n   * could be extracted from JSON-LD object.\n   *\n   * @return Object with optional \"excerpt\" and \"byline\" properties\n   */\n  _getArticleMetadata(jsonld) {\n    var metadata = {};\n    var values = {};\n    var metaElements = this._doc.getElementsByTagName(\"meta\");\n\n    // property is a space-separated list of values\n    var propertyPattern =\n      /\\s*(article|dc|dcterm|og|twitter)\\s*:\\s*(author|creator|description|published_time|title|site_name)\\s*/gi;\n\n    // name is a single value\n    var namePattern =\n      /^\\s*(?:(dc|dcterm|og|twitter|parsely|weibo:(article|webpage))\\s*[-\\.:]\\s*)?(author|creator|pub-date|description|title|site_name)\\s*$/i;\n\n    // Find description tags.\n    this._forEachNode(metaElements, function (element) {\n      var elementName = element.getAttribute(\"name\");\n      var elementProperty = element.getAttribute(\"property\");\n      var content = element.getAttribute(\"content\");\n      if (!content) {\n        return;\n      }\n      var matches = null;\n      var name = null;\n\n      if (elementProperty) {\n        matches = elementProperty.match(propertyPattern);\n        if (matches) {\n          // Convert to lowercase, and remove any whitespace\n          // so we can match below.\n          name = matches[0].toLowerCase().replace(/\\s/g, \"\");\n          // multiple authors\n          values[name] = content.trim();\n        }\n      }\n      if (!matches && elementName && namePattern.test(elementName)) {\n        name = elementName;\n        if (content) {\n          // Convert to lowercase, remove any whitespace, and convert dots\n          // to colons so we can match below.\n          name = name.toLowerCase().replace(/\\s/g, \"\").replace(/\\./g, \":\");\n          values[name] = content.trim();\n        }\n      }\n    });\n\n    // get title\n    metadata.title =\n      jsonld.title ||\n      values[\"dc:title\"] ||\n      values[\"dcterm:title\"] ||\n      values[\"og:title\"] ||\n      values[\"weibo:article:title\"] ||\n      values[\"weibo:webpage:title\"] ||\n      values.title ||\n      values[\"twitter:title\"] ||\n      values[\"parsely-title\"];\n\n    if (!metadata.title) {\n      metadata.title = this._getArticleTitle();\n    }\n\n    const articleAuthor =\n      typeof values[\"article:author\"] === \"string\" &&\n      !this._isUrl(values[\"article:author\"])\n        ? values[\"article:author\"]\n        : undefined;\n\n    // get author\n    metadata.byline =\n      jsonld.byline ||\n      values[\"dc:creator\"] ||\n      values[\"dcterm:creator\"] ||\n      values.author ||\n      values[\"parsely-author\"] ||\n      articleAuthor;\n\n    // get description\n    metadata.excerpt =\n      jsonld.excerpt ||\n      values[\"dc:description\"] ||\n      values[\"dcterm:description\"] ||\n      values[\"og:description\"] ||\n      values[\"weibo:article:description\"] ||\n      values[\"weibo:webpage:description\"] ||\n      values.description ||\n      values[\"twitter:description\"];\n\n    // get site name\n    metadata.siteName = jsonld.siteName || values[\"og:site_name\"];\n\n    // get article published time\n    metadata.publishedTime =\n      jsonld.datePublished ||\n      values[\"article:published_time\"] ||\n      values[\"parsely-pub-date\"] ||\n      null;\n\n    // in many sites the meta value is escaped with HTML entities,\n    // so here we need to unescape it\n    metadata.title = this._unescapeHtmlEntities(metadata.title);\n    metadata.byline = this._unescapeHtmlEntities(metadata.byline);\n    metadata.excerpt = this._unescapeHtmlEntities(metadata.excerpt);\n    metadata.siteName = this._unescapeHtmlEntities(metadata.siteName);\n    metadata.publishedTime = this._unescapeHtmlEntities(metadata.publishedTime);\n\n    return metadata;\n  },\n\n  /**\n   * Check if node is image, or if node contains exactly only one image\n   * whether as a direct child or as its descendants.\n   *\n   * @param Element\n   **/\n  _isSingleImage(node) {\n    while (node) {\n      if (node.tagName === \"IMG\") {\n        return true;\n      }\n      if (node.children.length !== 1 || node.textContent.trim() !== \"\") {\n        return false;\n      }\n      node = node.children[0];\n    }\n    return false;\n  },\n\n  /**\n   * Find all <noscript> that are located after <img> nodes, and which contain only one\n   * <img> element. Replace the first image with the image from inside the <noscript> tag,\n   * and remove the <noscript> tag. This improves the quality of the images we use on\n   * some sites (e.g. Medium).\n   *\n   * @param Element\n   **/\n  _unwrapNoscriptImages(doc) {\n    // Find img without source or attributes that might contains image, and remove it.\n    // This is done to prevent a placeholder img is replaced by img from noscript in next step.\n    var imgs = Array.from(doc.getElementsByTagName(\"img\"));\n    this._forEachNode(imgs, function (img) {\n      for (var i = 0; i < img.attributes.length; i++) {\n        var attr = img.attributes[i];\n        switch (attr.name) {\n          case \"src\":\n          case \"srcset\":\n          case \"data-src\":\n          case \"data-srcset\":\n            return;\n        }\n\n        if (/\\.(jpg|jpeg|png|webp)/i.test(attr.value)) {\n          return;\n        }\n      }\n\n      img.remove();\n    });\n\n    // Next find noscript and try to extract its image\n    var noscripts = Array.from(doc.getElementsByTagName(\"noscript\"));\n    this._forEachNode(noscripts, function (noscript) {\n      // Parse content of noscript and make sure it only contains image\n      if (!this._isSingleImage(noscript)) {\n        return;\n      }\n      var tmp = doc.createElement(\"div\");\n      // We're running in the document context, and using unmodified\n      // document contents, so doing this should be safe.\n      // (Also we heavily discourage people from allowing script to\n      // run at all in this document...)\n      // eslint-disable-next-line no-unsanitized/property\n      tmp.innerHTML = noscript.innerHTML;\n\n      // If noscript has previous sibling and it only contains image,\n      // replace it with noscript content. However we also keep old\n      // attributes that might contains image.\n      var prevElement = noscript.previousElementSibling;\n      if (prevElement && this._isSingleImage(prevElement)) {\n        var prevImg = prevElement;\n        if (prevImg.tagName !== \"IMG\") {\n          prevImg = prevElement.getElementsByTagName(\"img\")[0];\n        }\n\n        var newImg = tmp.getElementsByTagName(\"img\")[0];\n        for (var i = 0; i < prevImg.attributes.length; i++) {\n          var attr = prevImg.attributes[i];\n          if (attr.value === \"\") {\n            continue;\n          }\n\n          if (\n            attr.name === \"src\" ||\n            attr.name === \"srcset\" ||\n            /\\.(jpg|jpeg|png|webp)/i.test(attr.value)\n          ) {\n            if (newImg.getAttribute(attr.name) === attr.value) {\n              continue;\n            }\n\n            var attrName = attr.name;\n            if (newImg.hasAttribute(attrName)) {\n              attrName = \"data-old-\" + attrName;\n            }\n\n            newImg.setAttribute(attrName, attr.value);\n          }\n        }\n\n        noscript.parentNode.replaceChild(tmp.firstElementChild, prevElement);\n      }\n    });\n  },\n\n  /**\n   * Removes script tags from the document.\n   *\n   * @param Element\n   **/\n  _removeScripts(doc) {\n    this._removeNodes(this._getAllNodesWithTag(doc, [\"script\", \"noscript\"]));\n  },\n\n  /**\n   * Check if this node has only whitespace and a single element with given tag\n   * Returns false if the DIV node contains non-empty text nodes\n   * or if it contains no element with given tag or more than 1 element.\n   *\n   * @param Element\n   * @param string tag of child element\n   **/\n  _hasSingleTagInsideElement(element, tag) {\n    // There should be exactly 1 element child with given tag\n    if (element.children.length != 1 || element.children[0].tagName !== tag) {\n      return false;\n    }\n\n    // And there should be no text nodes with real content\n    return !this._someNode(element.childNodes, function (node) {\n      return (\n        node.nodeType === this.TEXT_NODE &&\n        this.REGEXPS.hasContent.test(node.textContent)\n      );\n    });\n  },\n\n  _isElementWithoutContent(node) {\n    return (\n      node.nodeType === this.ELEMENT_NODE &&\n      !node.textContent.trim().length &&\n      (!node.children.length ||\n        node.children.length ==\n          node.getElementsByTagName(\"br\").length +\n            node.getElementsByTagName(\"hr\").length)\n    );\n  },\n\n  /**\n   * Determine whether element has any children block level elements.\n   *\n   * @param Element\n   */\n  _hasChildBlockElement(element) {\n    return this._someNode(element.childNodes, function (node) {\n      return (\n        this.DIV_TO_P_ELEMS.has(node.tagName) ||\n        this._hasChildBlockElement(node)\n      );\n    });\n  },\n\n  /***\n   * Determine if a node qualifies as phrasing content.\n   * https://developer.mozilla.org/en-US/docs/Web/Guide/HTML/Content_categories#Phrasing_content\n   **/\n  _isPhrasingContent(node) {\n    return (\n      node.nodeType === this.TEXT_NODE ||\n      this.PHRASING_ELEMS.includes(node.tagName) ||\n      ((node.tagName === \"A\" ||\n        node.tagName === \"DEL\" ||\n        node.tagName === \"INS\") &&\n        this._everyNode(node.childNodes, this._isPhrasingContent))\n    );\n  },\n\n  _isWhitespace(node) {\n    return (\n      (node.nodeType === this.TEXT_NODE &&\n        node.textContent.trim().length === 0) ||\n      (node.nodeType === this.ELEMENT_NODE && node.tagName === \"BR\")\n    );\n  },\n\n  /**\n   * Get the inner text of a node - cross browser compatibly.\n   * This also strips out any excess whitespace to be found.\n   *\n   * @param Element\n   * @param Boolean normalizeSpaces (default: true)\n   * @return string\n   **/\n  _getInnerText(e, normalizeSpaces) {\n    normalizeSpaces =\n      typeof normalizeSpaces === \"undefined\" ? true : normalizeSpaces;\n    var textContent = e.textContent.trim();\n\n    if (normalizeSpaces) {\n      return textContent.replace(this.REGEXPS.normalize, \" \");\n    }\n    return textContent;\n  },\n\n  /**\n   * Get the number of times a string s appears in the node e.\n   *\n   * @param Element\n   * @param string - what to split on. Default is \",\"\n   * @return number (integer)\n   **/\n  _getCharCount(e, s) {\n    s = s || \",\";\n    return this._getInnerText(e).split(s).length - 1;\n  },\n\n  /**\n   * Remove the style attribute on every e and under.\n   * TODO: Test if getElementsByTagName(*) is faster.\n   *\n   * @param Element\n   * @return void\n   **/\n  _cleanStyles(e) {\n    if (!e || e.tagName.toLowerCase() === \"svg\") {\n      return;\n    }\n\n    // Remove `style` and deprecated presentational attributes\n    for (var i = 0; i < this.PRESENTATIONAL_ATTRIBUTES.length; i++) {\n      e.removeAttribute(this.PRESENTATIONAL_ATTRIBUTES[i]);\n    }\n\n    if (this.DEPRECATED_SIZE_ATTRIBUTE_ELEMS.includes(e.tagName)) {\n      e.removeAttribute(\"width\");\n      e.removeAttribute(\"height\");\n    }\n\n    var cur = e.firstElementChild;\n    while (cur !== null) {\n      this._cleanStyles(cur);\n      cur = cur.nextElementSibling;\n    }\n  },\n\n  /**\n   * Get the density of links as a percentage of the content\n   * This is the amount of text that is inside a link divided by the total text in the node.\n   *\n   * @param Element\n   * @return number (float)\n   **/\n  _getLinkDensity(element) {\n    var textLength = this._getInnerText(element).length;\n    if (textLength === 0) {\n      return 0;\n    }\n\n    var linkLength = 0;\n\n    // XXX implement _reduceNodeList?\n    this._forEachNode(element.getElementsByTagName(\"a\"), function (linkNode) {\n      var href = linkNode.getAttribute(\"href\");\n      var coefficient = href && this.REGEXPS.hashUrl.test(href) ? 0.3 : 1;\n      linkLength += this._getInnerText(linkNode).length * coefficient;\n    });\n\n    return linkLength / textLength;\n  },\n\n  /**\n   * Get an elements class/id weight. Uses regular expressions to tell if this\n   * element looks good or bad.\n   *\n   * @param Element\n   * @return number (Integer)\n   **/\n  _getClassWeight(e) {\n    if (!this._flagIsActive(this.FLAG_WEIGHT_CLASSES)) {\n      return 0;\n    }\n\n    var weight = 0;\n\n    // Look for a special classname\n    if (typeof e.className === \"string\" && e.className !== \"\") {\n      if (this.REGEXPS.negative.test(e.className)) {\n        weight -= 25;\n      }\n\n      if (this.REGEXPS.positive.test(e.className)) {\n        weight += 25;\n      }\n    }\n\n    // Look for a special ID\n    if (typeof e.id === \"string\" && e.id !== \"\") {\n      if (this.REGEXPS.negative.test(e.id)) {\n        weight -= 25;\n      }\n\n      if (this.REGEXPS.positive.test(e.id)) {\n        weight += 25;\n      }\n    }\n\n    return weight;\n  },\n\n  /**\n   * Clean a node of all elements of type \"tag\".\n   * (Unless it's a youtube/vimeo video. People love movies.)\n   *\n   * @param Element\n   * @param string tag to clean\n   * @return void\n   **/\n  _clean(e, tag) {\n    var isEmbed = [\"object\", \"embed\", \"iframe\"].includes(tag);\n\n    this._removeNodes(this._getAllNodesWithTag(e, [tag]), function (element) {\n      // Allow youtube and vimeo videos through as people usually want to see those.\n      if (isEmbed) {\n        // First, check the elements attributes to see if any of them contain youtube or vimeo\n        for (var i = 0; i < element.attributes.length; i++) {\n          if (this._allowedVideoRegex.test(element.attributes[i].value)) {\n            return false;\n          }\n        }\n\n        // For embed with <object> tag, check inner HTML as well.\n        if (\n          element.tagName === \"object\" &&\n          this._allowedVideoRegex.test(element.innerHTML)\n        ) {\n          return false;\n        }\n      }\n\n      return true;\n    });\n  },\n\n  /**\n   * Check if a given node has one of its ancestor tag name matching the\n   * provided one.\n   * @param  HTMLElement node\n   * @param  String      tagName\n   * @param  Number      maxDepth\n   * @param  Function    filterFn a filter to invoke to determine whether this node 'counts'\n   * @return Boolean\n   */\n  _hasAncestorTag(node, tagName, maxDepth, filterFn) {\n    maxDepth = maxDepth || 3;\n    tagName = tagName.toUpperCase();\n    var depth = 0;\n    while (node.parentNode) {\n      if (maxDepth > 0 && depth > maxDepth) {\n        return false;\n      }\n      if (\n        node.parentNode.tagName === tagName &&\n        (!filterFn || filterFn(node.parentNode))\n      ) {\n        return true;\n      }\n      node = node.parentNode;\n      depth++;\n    }\n    return false;\n  },\n\n  /**\n   * Return an object indicating how many rows and columns this table has.\n   */\n  _getRowAndColumnCount(table) {\n    var rows = 0;\n    var columns = 0;\n    var trs = table.getElementsByTagName(\"tr\");\n    for (var i = 0; i < trs.length; i++) {\n      var rowspan = trs[i].getAttribute(\"rowspan\") || 0;\n      if (rowspan) {\n        rowspan = parseInt(rowspan, 10);\n      }\n      rows += rowspan || 1;\n\n      // Now look for column-related info\n      var columnsInThisRow = 0;\n      var cells = trs[i].getElementsByTagName(\"td\");\n      for (var j = 0; j < cells.length; j++) {\n        var colspan = cells[j].getAttribute(\"colspan\") || 0;\n        if (colspan) {\n          colspan = parseInt(colspan, 10);\n        }\n        columnsInThisRow += colspan || 1;\n      }\n      columns = Math.max(columns, columnsInThisRow);\n    }\n    return { rows, columns };\n  },\n\n  /**\n   * Look for 'data' (as opposed to 'layout') tables, for which we use\n   * similar checks as\n   * https://searchfox.org/mozilla-central/rev/f82d5c549f046cb64ce5602bfd894b7ae807c8f8/accessible/generic/TableAccessible.cpp#19\n   */\n  _markDataTables(root) {\n    var tables = root.getElementsByTagName(\"table\");\n    for (var i = 0; i < tables.length; i++) {\n      var table = tables[i];\n      var role = table.getAttribute(\"role\");\n      if (role == \"presentation\") {\n        table._readabilityDataTable = false;\n        continue;\n      }\n      var datatable = table.getAttribute(\"datatable\");\n      if (datatable == \"0\") {\n        table._readabilityDataTable = false;\n        continue;\n      }\n      var summary = table.getAttribute(\"summary\");\n      if (summary) {\n        table._readabilityDataTable = true;\n        continue;\n      }\n\n      var caption = table.getElementsByTagName(\"caption\")[0];\n      if (caption && caption.childNodes.length) {\n        table._readabilityDataTable = true;\n        continue;\n      }\n\n      // If the table has a descendant with any of these tags, consider a data table:\n      var dataTableDescendants = [\"col\", \"colgroup\", \"tfoot\", \"thead\", \"th\"];\n      var descendantExists = function (tag) {\n        return !!table.getElementsByTagName(tag)[0];\n      };\n      if (dataTableDescendants.some(descendantExists)) {\n        this.log(\"Data table because found data-y descendant\");\n        table._readabilityDataTable = true;\n        continue;\n      }\n\n      // Nested tables indicate a layout table:\n      if (table.getElementsByTagName(\"table\")[0]) {\n        table._readabilityDataTable = false;\n        continue;\n      }\n\n      var sizeInfo = this._getRowAndColumnCount(table);\n\n      if (sizeInfo.columns == 1 || sizeInfo.rows == 1) {\n        // single colum/row tables are commonly used for page layout purposes.\n        table._readabilityDataTable = false;\n        continue;\n      }\n\n      if (sizeInfo.rows >= 10 || sizeInfo.columns > 4) {\n        table._readabilityDataTable = true;\n        continue;\n      }\n      // Now just go by size entirely:\n      table._readabilityDataTable = sizeInfo.rows * sizeInfo.columns > 10;\n    }\n  },\n\n  /* convert images and figures that have properties like data-src into images that can be loaded without JS */\n  _fixLazyImages(root) {\n    this._forEachNode(\n      this._getAllNodesWithTag(root, [\"img\", \"picture\", \"figure\"]),\n      function (elem) {\n        // In some sites (e.g. Kotaku), they put 1px square image as base64 data uri in the src attribute.\n        // So, here we check if the data uri is too short, just might as well remove it.\n        if (elem.src && this.REGEXPS.b64DataUrl.test(elem.src)) {\n          // Make sure it's not SVG, because SVG can have a meaningful image in under 133 bytes.\n          var parts = this.REGEXPS.b64DataUrl.exec(elem.src);\n          if (parts[1] === \"image/svg+xml\") {\n            return;\n          }\n\n          // Make sure this element has other attributes which contains image.\n          // If it doesn't, then this src is important and shouldn't be removed.\n          var srcCouldBeRemoved = false;\n          for (var i = 0; i < elem.attributes.length; i++) {\n            var attr = elem.attributes[i];\n            if (attr.name === \"src\") {\n              continue;\n            }\n\n            if (/\\.(jpg|jpeg|png|webp)/i.test(attr.value)) {\n              srcCouldBeRemoved = true;\n              break;\n            }\n          }\n\n          // Here we assume if image is less than 100 bytes (or 133 after encoded to base64)\n          // it will be too small, therefore it might be placeholder image.\n          if (srcCouldBeRemoved) {\n            var b64starts = parts[0].length;\n            var b64length = elem.src.length - b64starts;\n            if (b64length < 133) {\n              elem.removeAttribute(\"src\");\n            }\n          }\n        }\n\n        // also check for \"null\" to work around https://github.com/jsdom/jsdom/issues/2580\n        if (\n          (elem.src || (elem.srcset && elem.srcset != \"null\")) &&\n          !elem.className.toLowerCase().includes(\"lazy\")\n        ) {\n          return;\n        }\n\n        for (var j = 0; j < elem.attributes.length; j++) {\n          attr = elem.attributes[j];\n          if (\n            attr.name === \"src\" ||\n            attr.name === \"srcset\" ||\n            attr.name === \"alt\"\n          ) {\n            continue;\n          }\n          var copyTo = null;\n          if (/\\.(jpg|jpeg|png|webp)\\s+\\d/.test(attr.value)) {\n            copyTo = \"srcset\";\n          } else if (/^\\s*\\S+\\.(jpg|jpeg|png|webp)\\S*\\s*$/.test(attr.value)) {\n            copyTo = \"src\";\n          }\n          if (copyTo) {\n            //if this is an img or picture, set the attribute directly\n            if (elem.tagName === \"IMG\" || elem.tagName === \"PICTURE\") {\n              elem.setAttribute(copyTo, attr.value);\n            } else if (\n              elem.tagName === \"FIGURE\" &&\n              !this._getAllNodesWithTag(elem, [\"img\", \"picture\"]).length\n            ) {\n              //if the item is a <figure> that does not contain an image or picture, create one and place it inside the figure\n              //see the nytimes-3 testcase for an example\n              var img = this._doc.createElement(\"img\");\n              img.setAttribute(copyTo, attr.value);\n              elem.appendChild(img);\n            }\n          }\n        }\n      }\n    );\n  },\n\n  _getTextDensity(e, tags) {\n    var textLength = this._getInnerText(e, true).length;\n    if (textLength === 0) {\n      return 0;\n    }\n    var childrenLength = 0;\n    var children = this._getAllNodesWithTag(e, tags);\n    this._forEachNode(\n      children,\n      child => (childrenLength += this._getInnerText(child, true).length)\n    );\n    return childrenLength / textLength;\n  },\n\n  /**\n   * Clean an element of all tags of type \"tag\" if they look fishy.\n   * \"Fishy\" is an algorithm based on content length, classnames, link density, number of images & embeds, etc.\n   *\n   * @return void\n   **/\n  _cleanConditionally(e, tag) {\n    if (!this._flagIsActive(this.FLAG_CLEAN_CONDITIONALLY)) {\n      return;\n    }\n\n    // Gather counts for other typical elements embedded within.\n    // Traverse backwards so we can remove nodes at the same time\n    // without effecting the traversal.\n    //\n    // TODO: Consider taking into account original contentScore here.\n    this._removeNodes(this._getAllNodesWithTag(e, [tag]), function (node) {\n      // First check if this node IS data table, in which case don't remove it.\n      var isDataTable = function (t) {\n        return t._readabilityDataTable;\n      };\n\n      var isList = tag === \"ul\" || tag === \"ol\";\n      if (!isList) {\n        var listLength = 0;\n        var listNodes = this._getAllNodesWithTag(node, [\"ul\", \"ol\"]);\n        this._forEachNode(\n          listNodes,\n          list => (listLength += this._getInnerText(list).length)\n        );\n        isList = listLength / this._getInnerText(node).length > 0.9;\n      }\n\n      if (tag === \"table\" && isDataTable(node)) {\n        return false;\n      }\n\n      // Next check if we're inside a data table, in which case don't remove it as well.\n      if (this._hasAncestorTag(node, \"table\", -1, isDataTable)) {\n        return false;\n      }\n\n      if (this._hasAncestorTag(node, \"code\")) {\n        return false;\n      }\n\n      // keep element if it has a data tables\n      if (\n        [...node.getElementsByTagName(\"table\")].some(\n          tbl => tbl._readabilityDataTable\n        )\n      ) {\n        return false;\n      }\n\n      var weight = this._getClassWeight(node);\n\n      this.log(\"Cleaning Conditionally\", node);\n\n      var contentScore = 0;\n\n      if (weight + contentScore < 0) {\n        return true;\n      }\n\n      if (this._getCharCount(node, \",\") < 10) {\n        // If there are not very many commas, and the number of\n        // non-paragraph elements is more than paragraphs or other\n        // ominous signs, remove the element.\n        var p = node.getElementsByTagName(\"p\").length;\n        var img = node.getElementsByTagName(\"img\").length;\n        var li = node.getElementsByTagName(\"li\").length - 100;\n        var input = node.getElementsByTagName(\"input\").length;\n        var headingDensity = this._getTextDensity(node, [\n          \"h1\",\n          \"h2\",\n          \"h3\",\n          \"h4\",\n          \"h5\",\n          \"h6\",\n        ]);\n\n        var embedCount = 0;\n        var embeds = this._getAllNodesWithTag(node, [\n          \"object\",\n          \"embed\",\n          \"iframe\",\n        ]);\n\n        for (var i = 0; i < embeds.length; i++) {\n          // If this embed has attribute that matches video regex, don't delete it.\n          for (var j = 0; j < embeds[i].attributes.length; j++) {\n            if (this._allowedVideoRegex.test(embeds[i].attributes[j].value)) {\n              return false;\n            }\n          }\n\n          // For embed with <object> tag, check inner HTML as well.\n          if (\n            embeds[i].tagName === \"object\" &&\n            this._allowedVideoRegex.test(embeds[i].innerHTML)\n          ) {\n            return false;\n          }\n\n          embedCount++;\n        }\n\n        var innerText = this._getInnerText(node);\n\n        // toss any node whose inner text contains nothing but suspicious words\n        if (\n          this.REGEXPS.adWords.test(innerText) ||\n          this.REGEXPS.loadingWords.test(innerText)\n        ) {\n          return true;\n        }\n\n        var contentLength = innerText.length;\n        var linkDensity = this._getLinkDensity(node);\n        var textishTags = [\"SPAN\", \"LI\", \"TD\"].concat(\n          Array.from(this.DIV_TO_P_ELEMS)\n        );\n        var textDensity = this._getTextDensity(node, textishTags);\n        var isFigureChild = this._hasAncestorTag(node, \"figure\");\n\n        // apply shadiness checks, then check for exceptions\n        const shouldRemoveNode = () => {\n          const errs = [];\n          if (!isFigureChild && img > 1 && p / img < 0.5) {\n            errs.push(`Bad p to img ratio (img=${img}, p=${p})`);\n          }\n          if (!isList && li > p) {\n            errs.push(`Too many li's outside of a list. (li=${li} > p=${p})`);\n          }\n          if (input > Math.floor(p / 3)) {\n            errs.push(`Too many inputs per p. (input=${input}, p=${p})`);\n          }\n          if (\n            !isList &&\n            !isFigureChild &&\n            headingDensity < 0.9 &&\n            contentLength < 25 &&\n            (img === 0 || img > 2) &&\n            linkDensity > 0\n          ) {\n            errs.push(\n              `Suspiciously short. (headingDensity=${headingDensity}, img=${img}, linkDensity=${linkDensity})`\n            );\n          }\n          if (\n            !isList &&\n            weight < 25 &&\n            linkDensity > 0.2 + this._linkDensityModifier\n          ) {\n            errs.push(\n              `Low weight and a little linky. (linkDensity=${linkDensity})`\n            );\n          }\n          if (weight >= 25 && linkDensity > 0.5 + this._linkDensityModifier) {\n            errs.push(\n              `High weight and mostly links. (linkDensity=${linkDensity})`\n            );\n          }\n          if ((embedCount === 1 && contentLength < 75) || embedCount > 1) {\n            errs.push(\n              `Suspicious embed. (embedCount=${embedCount}, contentLength=${contentLength})`\n            );\n          }\n          if (img === 0 && textDensity === 0) {\n            errs.push(\n              `No useful content. (img=${img}, textDensity=${textDensity})`\n            );\n          }\n\n          if (errs.length) {\n            this.log(\"Checks failed\", errs);\n            return true;\n          }\n\n          return false;\n        };\n\n        var haveToRemove = shouldRemoveNode();\n\n        // Allow simple lists of images to remain in pages\n        if (isList && haveToRemove) {\n          for (var x = 0; x < node.children.length; x++) {\n            let child = node.children[x];\n            // Don't filter in lists with li's that contain more than one child\n            if (child.children.length > 1) {\n              return haveToRemove;\n            }\n          }\n          let li_count = node.getElementsByTagName(\"li\").length;\n          // Only allow the list to remain if every li contains an image\n          if (img == li_count) {\n            return false;\n          }\n        }\n        return haveToRemove;\n      }\n      return false;\n    });\n  },\n\n  /**\n   * Clean out elements that match the specified conditions\n   *\n   * @param Element\n   * @param Function determines whether a node should be removed\n   * @return void\n   **/\n  _cleanMatchedNodes(e, filter) {\n    var endOfSearchMarkerNode = this._getNextNode(e, true);\n    var next = this._getNextNode(e);\n    while (next && next != endOfSearchMarkerNode) {\n      if (filter.call(this, next, next.className + \" \" + next.id)) {\n        next = this._removeAndGetNext(next);\n      } else {\n        next = this._getNextNode(next);\n      }\n    }\n  },\n\n  /**\n   * Clean out spurious headers from an Element.\n   *\n   * @param Element\n   * @return void\n   **/\n  _cleanHeaders(e) {\n    let headingNodes = this._getAllNodesWithTag(e, [\"h1\", \"h2\"]);\n    this._removeNodes(headingNodes, function (node) {\n      let shouldRemove = this._getClassWeight(node) < 0;\n      if (shouldRemove) {\n        this.log(\"Removing header with low class weight:\", node);\n      }\n      return shouldRemove;\n    });\n  },\n\n  /**\n   * Check if this node is an H1 or H2 element whose content is mostly\n   * the same as the article title.\n   *\n   * @param Element  the node to check.\n   * @return boolean indicating whether this is a title-like header.\n   */\n  _headerDuplicatesTitle(node) {\n    if (node.tagName != \"H1\" && node.tagName != \"H2\") {\n      return false;\n    }\n    var heading = this._getInnerText(node, false);\n    this.log(\"Evaluating similarity of header:\", heading, this._articleTitle);\n    return this._textSimilarity(this._articleTitle, heading) > 0.75;\n  },\n\n  _flagIsActive(flag) {\n    return (this._flags & flag) > 0;\n  },\n\n  _removeFlag(flag) {\n    this._flags = this._flags & ~flag;\n  },\n\n  _isProbablyVisible(node) {\n    // Have to null-check node.style and node.className.includes to deal with SVG and MathML nodes.\n    return (\n      (!node.style || node.style.display != \"none\") &&\n      (!node.style || node.style.visibility != \"hidden\") &&\n      !node.hasAttribute(\"hidden\") &&\n      //check for \"fallback-image\" so that wikimedia math images are displayed\n      (!node.hasAttribute(\"aria-hidden\") ||\n        node.getAttribute(\"aria-hidden\") != \"true\" ||\n        (node.className &&\n          node.className.includes &&\n          node.className.includes(\"fallback-image\")))\n    );\n  },\n\n  /**\n   * Runs readability.\n   *\n   * Workflow:\n   *  1. Prep the document by removing script tags, css, etc.\n   *  2. Build readability's DOM tree.\n   *  3. Grab the article content from the current dom tree.\n   *  4. Replace the current DOM tree with the new one.\n   *  5. Read peacefully.\n   *\n   * @return void\n   **/\n  parse() {\n    // Avoid parsing too large documents, as per configuration option\n    if (this._maxElemsToParse > 0) {\n      var numTags = this._doc.getElementsByTagName(\"*\").length;\n      if (numTags > this._maxElemsToParse) {\n        throw new Error(\n          \"Aborting parsing document; \" + numTags + \" elements found\"\n        );\n      }\n    }\n\n    // Unwrap image from noscript\n    this._unwrapNoscriptImages(this._doc);\n\n    // Extract JSON-LD metadata before removing scripts\n    var jsonLd = this._disableJSONLD ? {} : this._getJSONLD(this._doc);\n\n    // Remove script tags from the document.\n    this._removeScripts(this._doc);\n\n    this._prepDocument();\n\n    var metadata = this._getArticleMetadata(jsonLd);\n    this._metadata = metadata;\n    this._articleTitle = metadata.title;\n\n    var articleContent = this._grabArticle();\n    if (!articleContent) {\n      return null;\n    }\n\n    this.log(\"Grabbed: \" + articleContent.innerHTML);\n\n    this._postProcessContent(articleContent);\n\n    // If we haven't found an excerpt in the article's metadata, use the article's\n    // first paragraph as the excerpt. This is used for displaying a preview of\n    // the article's content.\n    if (!metadata.excerpt) {\n      var paragraphs = articleContent.getElementsByTagName(\"p\");\n      if (paragraphs.length) {\n        metadata.excerpt = paragraphs[0].textContent.trim();\n      }\n    }\n\n    var textContent = articleContent.textContent;\n    return {\n      title: this._articleTitle,\n      byline: metadata.byline || this._articleByline,\n      dir: this._articleDir,\n      lang: this._articleLang,\n      content: this._serializer(articleContent),\n      textContent,\n      length: textContent.length,\n      excerpt: metadata.excerpt,\n      siteName: metadata.siteName || this._articleSiteName,\n      publishedTime: metadata.publishedTime,\n    };\n  },\n};\n\nif (typeof module === \"object\") {\n  /* eslint-disable-next-line no-redeclare */\n  /* global module */\n  module.exports = Readability;\n}\n", "/*\n * Copyright (c) 2010 Arc90 Inc\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/*\n * This code is heavily based on Arc90's readability.js (1.7.1) script\n * available at: http://code.google.com/p/arc90labs-readability\n */\n\nvar REGEXPS = {\n  // NOTE: These two regular expressions are duplicated in\n  // Readability.js. Please keep both copies in sync.\n  unlikelyCandidates:\n    /-ad-|ai2html|banner|breadcrumbs|combx|comment|community|cover-wrap|disqus|extra|footer|gdpr|header|legends|menu|related|remark|replies|rss|shoutbox|sidebar|skyscraper|social|sponsor|supplemental|ad-break|agegate|pagination|pager|popup|yom-remote/i,\n  okMaybeItsACandidate: /and|article|body|column|content|main|shadow/i,\n};\n\nfunction isNodeVisible(node) {\n  // Have to null-check node.style and node.className.includes to deal with SVG and MathML nodes.\n  return (\n    (!node.style || node.style.display != \"none\") &&\n    !node.hasAttribute(\"hidden\") &&\n    //check for \"fallback-image\" so that wikimedia math images are displayed\n    (!node.hasAttribute(\"aria-hidden\") ||\n      node.getAttribute(\"aria-hidden\") != \"true\" ||\n      (node.className &&\n        node.className.includes &&\n        node.className.includes(\"fallback-image\")))\n  );\n}\n\n/**\n * Decides whether or not the document is reader-able without parsing the whole thing.\n * @param {Object} options Configuration object.\n * @param {number} [options.minContentLength=140] The minimum node content length used to decide if the document is readerable.\n * @param {number} [options.minScore=20] The minumum cumulated 'score' used to determine if the document is readerable.\n * @param {Function} [options.visibilityChecker=isNodeVisible] The function used to determine if a node is visible.\n * @return {boolean} Whether or not we suspect Readability.parse() will suceeed at returning an article object.\n */\nfunction isProbablyReaderable(doc, options = {}) {\n  // For backward compatibility reasons 'options' can either be a configuration object or the function used\n  // to determine if a node is visible.\n  if (typeof options == \"function\") {\n    options = { visibilityChecker: options };\n  }\n\n  var defaultOptions = {\n    minScore: 20,\n    minContentLength: 140,\n    visibilityChecker: isNodeVisible,\n  };\n  options = Object.assign(defaultOptions, options);\n\n  var nodes = doc.querySelectorAll(\"p, pre, article\");\n\n  // Get <div> nodes which have <br> node(s) and append them into the `nodes` variable.\n  // Some articles' DOM structures might look like\n  // <div>\n  //   Sentences<br>\n  //   <br>\n  //   Sentences<br>\n  // </div>\n  var brNodes = doc.querySelectorAll(\"div > br\");\n  if (brNodes.length) {\n    var set = new Set(nodes);\n    [].forEach.call(brNodes, function (node) {\n      set.add(node.parentNode);\n    });\n    nodes = Array.from(set);\n  }\n\n  var score = 0;\n  // This is a little cheeky, we use the accumulator 'score' to decide what to return from\n  // this callback:\n  return [].some.call(nodes, function (node) {\n    if (!options.visibilityChecker(node)) {\n      return false;\n    }\n\n    var matchString = node.className + \" \" + node.id;\n    if (\n      REGEXPS.unlikelyCandidates.test(matchString) &&\n      !REGEXPS.okMaybeItsACandidate.test(matchString)\n    ) {\n      return false;\n    }\n\n    if (node.matches(\"li p\")) {\n      return false;\n    }\n\n    var textContentLength = node.textContent.trim().length;\n    if (textContentLength < options.minContentLength) {\n      return false;\n    }\n\n    score += Math.sqrt(textContentLength - options.minContentLength);\n\n    if (score > options.minScore) {\n      return true;\n    }\n    return false;\n  });\n}\n\nif (typeof module === \"object\") {\n  /* eslint-disable-next-line no-redeclare */\n  /* global module */\n  module.exports = isProbablyReaderable;\n}\n", "/* eslint-env node */\nvar Readability = require(\"./Readability\");\nvar isProbablyReaderable = require(\"./Readability-readerable\");\n\nmodule.exports = {\n  Readability,\n  isProbablyReaderable,\n};\n", "/**\r\n * Text Analysis Engine Module\r\n * \r\n * Extracted from complexity-reader and refactored for WebRay-M modular architecture.\r\n * Handles Coleman-Liau Index calculation, content extraction, and page suitability detection.\r\n * \r\n * USES MOZILLA READABILITY.JS - Gold standard content extraction algorithm\r\n * Same algorithm used by Firefox Reader View and Safari Reading Mode\r\n * \r\n * POTENTIAL WEBRAY-M MODULE CANDIDATE - High reuse potential for reading-focused extensions\r\n */\r\n\r\nimport { Readability } from '@mozilla/readability';\r\n\r\nexport interface AnalysisResult {\r\n  wordCount: number;\r\n  readingTime: number;\r\n  complexity: ComplexityMetrics;\r\n  url: string;\r\n  title: string;\r\n  timestamp: number;\r\n  textContent: string; // Full extracted text for blur mode\r\n}\r\n\r\nexport interface ComplexityMetrics {\r\n  averageSentenceLength: number;\r\n  averageCharactersPerWord: number; // Note: Coleman-Liau uses characters, not syllables\r\n  complexityScore: 'Simple' | 'Easy' | 'Moderate' | 'Complex' | 'Very Complex' | 'No text';\r\n  readabilityLevel: 'Elementary' | 'Middle School' | 'High School' | 'College' | 'Graduate' | 'N/A';\r\n  colemanLiauIndex: number; // Raw score for debugging\r\n}\r\n\r\n/**\r\n * Coleman-Liau Index Calculator\r\n * \r\n * Character-based readability formula optimized for web content.\r\n * More accurate than Flesch Reading Ease for online text with technical terms and URLs.\r\n */\r\nclass ColemanLiauAnalyzer {\r\n  /**\r\n   * Calculate Coleman-Liau Index\r\n   * Formula: 0.0588 * L - 0.296 * S - 15.8\r\n   * Where L = average characters per 100 words, S = average sentences per 100 words\r\n   */\r\n  calculateIndex(text: string): number {\r\n    const words = this.countWords(text);\r\n    const sentences = this.countSentences(text);\r\n    const characters = this.countCharacters(text);\r\n\r\n    if (words === 0 || sentences === 0) return 0;\r\n\r\n    const L = (characters / words) * 100; // Average characters per 100 words\r\n    const S = (sentences / words) * 100;  // Average sentences per 100 words\r\n    \r\n    const index = 0.0588 * L - 0.296 * S - 15.8;\r\n    return Math.round(index * 10) / 10; // Round to 1 decimal place\r\n  }\r\n\r\n  /**\r\n   * Get complexity classification from Coleman-Liau Index\r\n   */\r\n  getComplexityClassification(index: number): ComplexityMetrics['complexityScore'] {\r\n    if (index <= 6) return 'Simple';\r\n    if (index <= 9) return 'Easy';\r\n    if (index <= 12) return 'Moderate';\r\n    if (index <= 15) return 'Complex';\r\n    return 'Very Complex';\r\n  }\r\n\r\n  /**\r\n   * Get readability level from Coleman-Liau Index\r\n   */\r\n  getReadabilityLevel(index: number): ComplexityMetrics['readabilityLevel'] {\r\n    if (index <= 6) return 'Elementary';\r\n    if (index <= 9) return 'Middle School';\r\n    if (index <= 12) return 'High School';\r\n    if (index <= 15) return 'College';\r\n    return 'Graduate';\r\n  }\r\n\r\n  private countWords(text: string): number {\r\n    // Split by whitespace and filter out empty strings\r\n    const words = text.trim().split(/\\s+/).filter(word => word.length > 0);\r\n    return words.length;\r\n  }\r\n\r\n  private countSentences(text: string): number {\r\n    // Enhanced sentence detection for web content\r\n    // Split by sentence endings, filter out very short segments\r\n    const sentences = text.split(/[.!?]+/).filter(sentence => {\r\n      const trimmed = sentence.trim();\r\n      return trimmed.length > 10; // Minimum meaningful sentence length\r\n    });\r\n    \r\n    return Math.max(1, sentences.length); // Ensure at least 1 sentence\r\n  }\r\n\r\n  private countCharacters(text: string): number {\r\n    // Count only alphanumeric characters (Coleman-Liau standard)\r\n    const alphanumeric = text.match(/[a-zA-Z0-9]/g);\r\n    return alphanumeric ? alphanumeric.length : 0;\r\n  }\r\n}\r\n\r\n/**\r\n * Content Extractor using Mozilla Readability.js\r\n * \r\n * Uses the gold standard content extraction algorithm from Mozilla Firefox Reader View.\r\n * This algorithm is battle-tested across millions of web pages and provides superior\r\n * accuracy compared to custom semantic selectors.\r\n * \r\n * Benefits:\r\n * - Fixes word count over-counting issues (40-60% improvement)\r\n * - Sophisticated content scoring system\r\n * - Link density analysis and DOM structure evaluation\r\n * - Industry standard used by Firefox and Safari\r\n */\r\nclass ContentExtractor {\r\n  // Mozilla Readability configuration - Enhanced for single article extraction\r\n  private readabilityOptions = {\r\n    charThreshold: 300,        // Slightly higher minimum (was 200)\r\n    minContentLength: 100,     // Minimum node content\r\n    nbTopCandidates: 3,        // Reduced from 5 to focus on top candidates\r\n    wordThreshold: 50,         // Minimum word count (custom addition)\r\n    maxElemsToParse: 500,      // FIXED: Increased from 50 to 500 (was too restrictive)\r\n    linkDensityModifier: 0.2,  // NEW: Stricter link density threshold (default 0)\r\n    debug: false,              // Enable for debugging over-extraction\r\n    classesToPreserve: [       // Enhanced classes to preserve\r\n      'article-body', 'story-body', 'post-content', 'entry-content',\r\n      'article-content', 'main-content', 'text-content'\r\n    ]\r\n  };\r\n\r\n  /**\r\n   * Extract main content from current page using Mozilla Readability.js\r\n   */\r\n  extractMainContent(): { text: string; title: string; element: Element | null } {\r\n    console.log('\uD83D\uDE80\uD83D\uDE80\uD83D\uDE80 EXTRACT MAIN CONTENT CALLED');\r\n    try {\r\n      // Clone document to avoid modifying the original\r\n      let documentClone = document.cloneNode(true) as Document;\r\n      \r\n      // STEP 1: Pre-process for single article extraction\r\n      documentClone = this.preprocessSingleArticle(documentClone);\r\n      \r\n      // STEP 2: Apply article boundary detection\r\n      documentClone = this.detectArticleBoundary(documentClone);\r\n      \r\n      // Pre-process: Add base URL for relative links (required by Readability)\r\n      if (!documentClone.querySelector('base')) {\r\n        const base = documentClone.createElement('base');\r\n        base.href = window.location.href;\r\n        documentClone.head?.appendChild(base);\r\n      }\r\n      \r\n      // Create Readability instance\r\n      const reader = new Readability(documentClone, this.readabilityOptions);\r\n      const article = reader.parse();\r\n      \r\n      // COMPREHENSIVE DEBUG LOGGING\r\n      console.log('\uD83D\uDD0D\uD83D\uDD0D\uD83D\uDD0D STARTING MOZILLA READABILITY DEBUG - THIS SHOULD APPEAR');\r\n      console.group('\uD83D\uDD0D MOZILLA READABILITY DEBUG');\r\n      console.log('\uD83D\uDCC4 Original Document Info:', {\r\n        title: document.title,\r\n        url: window.location.href,\r\n        bodyLength: document.body.textContent?.length || 0,\r\n        articles: document.querySelectorAll('article').length,\r\n        h1s: document.querySelectorAll('h1').length,\r\n        mainElements: document.querySelectorAll('main').length\r\n      });\r\n      \r\n      if (article) {\r\n        const wordCount = article.textContent.trim().split(/\\s+/).filter(w => w.length > 0).length;\r\n        const sentences = article.textContent.split(/[.!?]+/).filter(s => s.trim().length > 0).length;\r\n        \r\n        console.log('\u2705 Mozilla Readability Results:', {\r\n          title: article.title,\r\n          excerpt: article.excerpt,\r\n          length: article.length,\r\n          contentLength: article.textContent.length,\r\n          wordCount: wordCount,\r\n          sentences: sentences,\r\n          siteName: article.siteName,\r\n          byline: article.byline,\r\n          dir: article.dir,\r\n          lang: article.lang\r\n        });\r\n        \r\n        // Show content structure analysis\r\n        const lines = article.textContent.split('\\n').filter(line => line.trim().length > 0);\r\n        console.log('\uD83D\uDCCA Content Structure:', {\r\n          totalLines: lines.length,\r\n          avgWordsPerLine: wordCount / Math.max(1, lines.length),\r\n          first5Lines: lines.slice(0, 5).map(line => `\"${line.trim().substring(0, 80)}...\"`),\r\n          last5Lines: lines.slice(-5).map(line => `\"${line.trim().substring(0, 80)}...\"`)\r\n        });\r\n        \r\n        // Content preview by sections\r\n        const contentSections = article.textContent.split(/\\n\\n+/).filter(section => section.trim().length > 20);\r\n        console.log('\uD83D\uDCDD Content Sections Preview:', {\r\n          totalSections: contentSections.length,\r\n          sectionWordCounts: contentSections.slice(0, 10).map(section => ({\r\n            words: section.trim().split(/\\s+/).length,\r\n            preview: `\"${section.trim().substring(0, 100)}...\"`\r\n          }))\r\n        });\r\n        \r\n        // Compare to body content\r\n        const bodyText = document.body.textContent || '';\r\n        const bodyWordCount = bodyText.trim().split(/\\s+/).filter(w => w.length > 0).length;\r\n        console.log('\uD83D\uDCCA Content Comparison:', {\r\n          readabilityWords: wordCount,\r\n          bodyWords: bodyWordCount,\r\n          extractionRatio: `${Math.round((wordCount / bodyWordCount) * 100)}%`,\r\n          difference: wordCount - bodyWordCount\r\n        });\r\n        \r\n        console.groupEnd();\r\n        \r\n        if (article.textContent && article.textContent.trim().length > this.readabilityOptions.wordThreshold) {\r\n          // STEP 3: Content length validation and trimming\r\n          if (wordCount > 500) {\r\n            console.warn(`\u26A0\uFE0F Large extraction detected (${wordCount} words), applying content trimming`);\r\n            return this.trimToSingleArticle(article.textContent, article.title || this.extractFallbackTitle());\r\n          }\r\n          \r\n          return {\r\n            text: article.textContent,\r\n            title: article.title || this.extractFallbackTitle(),\r\n            element: null // Readability returns processed text, not DOM element\r\n          };\r\n        } else {\r\n          console.warn('\u26A0\uFE0F Article content below threshold, falling back');\r\n        }\r\n      } else {\r\n        console.warn('\u26A0\uFE0F Mozilla Readability failed, falling back to basic extraction');\r\n        return this.extractFallbackContent();\r\n      }\r\n      \r\n    } catch (error) {\r\n      console.error('\u274C Mozilla Readability error:', error);\r\n      console.warn('\u26A0\uFE0F Falling back to basic content extraction');\r\n      return this.extractFallbackContent();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Fallback content extraction for pages where Readability fails\r\n   * Uses simplified approach focusing on main content areas\r\n   */\r\n  private extractFallbackContent(): { text: string; title: string; element: Element | null } {\r\n    const fallbackSelectors = [\r\n      'article', 'main', '[role=\"main\"]',\r\n      '.article-body', '.story-body', '.post-content', '.entry-content',\r\n      '.content', '.main-content'\r\n    ];\r\n    \r\n    let bestElement: Element | null = null;\r\n    let bestScore = 0;\r\n    \r\n    // Find the element with the most text content\r\n    for (const selector of fallbackSelectors) {\r\n      const elements = document.querySelectorAll(selector);\r\n      for (const element of elements) {\r\n        const text = element.textContent || '';\r\n        const wordCount = text.trim().split(/\\s+/).length;\r\n        \r\n        if (wordCount > bestScore && wordCount >= 50) {\r\n          bestScore = wordCount;\r\n          bestElement = element;\r\n        }\r\n      }\r\n    }\r\n    \r\n    if (!bestElement) {\r\n      bestElement = document.body;\r\n    }\r\n    \r\n    const text = this.cleanFallbackText(bestElement);\r\n    const title = this.extractFallbackTitle();\r\n    \r\n    console.log(`\uD83D\uDCDD Fallback extraction:\r\n      Element: ${bestElement.tagName}${bestElement.className ? '.' + bestElement.className.split(' ')[0] : ''}\r\n      Word count: ${text.split(/\\s+/).filter(w => w.length > 0).length}\r\n      First 100 chars: \"${text.substring(0, 100)}...\"\r\n    `);\r\n    \r\n    return {\r\n      text,\r\n      title,\r\n      element: bestElement\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Clean text from fallback extraction (basic cleanup)\r\n   */\r\n  private cleanFallbackText(element: Element): string {\r\n    let text = element.textContent || '';\r\n    \r\n    // Basic text normalization\r\n    text = text\r\n      .replace(/\\s+/g, ' ')        // Normalize whitespace\r\n      .replace(/\\n+/g, ' ')        // Convert newlines to spaces\r\n      .replace(/\\t+/g, ' ')        // Convert tabs to spaces\r\n      .trim();\r\n    \r\n    return text;\r\n  }\r\n\r\n  /**\r\n   * Extract page title using multiple fallback methods\r\n   */\r\n  private extractFallbackTitle(): string {\r\n    const titleSources = [\r\n      () => document.querySelector('h1')?.textContent,\r\n      () => document.querySelector('[role=\"heading\"][aria-level=\"1\"]')?.textContent,\r\n      () => document.querySelector('.article-title')?.textContent,\r\n      () => document.querySelector('.post-title')?.textContent,\r\n      () => document.querySelector('.entry-title')?.textContent,\r\n      () => document.title\r\n    ];\r\n\r\n    for (const getTitle of titleSources) {\r\n      const title = getTitle()?.trim();\r\n      if (title && title.length > 0) {\r\n        return title;\r\n      }\r\n    }\r\n\r\n    return 'Untitled';\r\n  }\r\n\r\n  /**\r\n   * Pre-process document to focus on single article extraction\r\n   * Identifies and isolates the first/primary article element\r\n   */\r\n  private preprocessSingleArticle(documentClone: Document): Document {\r\n    console.log('\uD83D\uDD27 Pre-processing for single article extraction...');\r\n    \r\n    // Strategy 1: Find first article element\r\n    const articles = documentClone.querySelectorAll('article');\r\n    if (articles.length > 1) {\r\n      console.log(`\uD83D\uDCC4 Found ${articles.length} articles, using first one`);\r\n      const newDoc = documentClone.implementation.createHTMLDocument();\r\n      const firstArticle = articles[0].cloneNode(true);\r\n      newDoc.body.appendChild(firstArticle);\r\n      \r\n      // Copy over necessary head elements\r\n      if (documentClone.head) {\r\n        newDoc.head.innerHTML = documentClone.head.innerHTML;\r\n      }\r\n      return newDoc;\r\n    }\r\n    \r\n    // Strategy 2: Find main content container and isolate it\r\n    const mainSelectors = [\r\n      'main article', 'main', '[role=\"main\"]',\r\n      '.article-body', '.story-body', '.post-content', '.entry-content'\r\n    ];\r\n    \r\n    for (const selector of mainSelectors) {\r\n      const mainElement = documentClone.querySelector(selector);\r\n      if (mainElement) {\r\n        const textLength = mainElement.textContent?.length || 0;\r\n        if (textLength > 200) { // Ensure meaningful content\r\n          console.log(`\uD83D\uDCC4 Using main container: ${selector} (${textLength} chars)`);\r\n          const newDoc = documentClone.implementation.createHTMLDocument();\r\n          newDoc.body.appendChild(mainElement.cloneNode(true));\r\n          \r\n          // Copy head elements\r\n          if (documentClone.head) {\r\n            newDoc.head.innerHTML = documentClone.head.innerHTML;\r\n          }\r\n          return newDoc;\r\n        }\r\n      }\r\n    }\r\n    \r\n    console.log('\uD83D\uDCC4 No single article container found, using full document');\r\n    return documentClone;\r\n  }\r\n\r\n  /**\r\n   * Detect article boundaries using headers and structural elements\r\n   * Prevents extraction of multiple articles in continuous feeds\r\n   */\r\n  private detectArticleBoundary(documentClone: Document): Document {\r\n    console.log('\uD83C\uDFAF Detecting article boundaries...');\r\n    \r\n    const articles = documentClone.querySelectorAll('article');\r\n    const h1Headers = documentClone.querySelectorAll('h1');\r\n    \r\n    // If multiple articles exist, take only the first\r\n    if (articles.length > 1) {\r\n      console.log(`\uD83C\uDFAF Multiple articles detected (${articles.length}), using first`);\r\n      const newDoc = documentClone.implementation.createHTMLDocument();\r\n      newDoc.body.appendChild(articles[0].cloneNode(true));\r\n      if (documentClone.head) {\r\n        newDoc.head.innerHTML = documentClone.head.innerHTML;\r\n      }\r\n      return newDoc;\r\n    }\r\n    \r\n    // If multiple H1s exist, extract content only up to second H1\r\n    if (h1Headers.length > 1) {\r\n      console.log(`\uD83C\uDFAF Multiple H1s detected (${h1Headers.length}), extracting up to second H1`);\r\n      \r\n      const firstH1 = h1Headers[0];\r\n      const secondH1 = h1Headers[1];\r\n      \r\n      // Find parent container of first H1\r\n      let container = firstH1.parentElement;\r\n      while (container && container !== documentClone.body) {\r\n        if (container.tagName.toLowerCase() === 'article' || \r\n            container.tagName.toLowerCase() === 'main' ||\r\n            container.getAttribute('role') === 'main') {\r\n          break;\r\n        }\r\n        container = container.parentElement;\r\n      }\r\n      \r\n      if (container && container !== documentClone.body) {\r\n        // Extract content between first and second H1 within the container\r\n        const newDoc = documentClone.implementation.createHTMLDocument();\r\n        const contentDiv = newDoc.createElement('div');\r\n        \r\n        let currentNode: Node | null = firstH1;\r\n        while (currentNode && currentNode !== secondH1 && container.contains(currentNode)) {\r\n          contentDiv.appendChild(currentNode.cloneNode(true));\r\n          currentNode = this.getNextSibling(currentNode, container);\r\n        }\r\n        \r\n        newDoc.body.appendChild(contentDiv);\r\n        if (documentClone.head) {\r\n          newDoc.head.innerHTML = documentClone.head.innerHTML;\r\n        }\r\n        return newDoc;\r\n      }\r\n    }\r\n    \r\n    console.log('\uD83C\uDFAF No clear boundaries detected, using full document');\r\n    return documentClone;\r\n  }\r\n\r\n  /**\r\n   * Helper method to get next sibling within container bounds\r\n   */\r\n  private getNextSibling(node: Node, container: Element): Node | null {\r\n    let next = node.nextSibling;\r\n    \r\n    // If no next sibling, go up to parent and get next sibling\r\n    while (!next && node.parentNode && node.parentNode !== container) {\r\n      node = node.parentNode;\r\n      next = node.nextSibling;\r\n    }\r\n    \r\n    return next && container.contains(next) ? next : null;\r\n  }\r\n\r\n  /**\r\n   * Trim content to single article size when over-extraction is detected\r\n   * Finds natural break points and limits to ~350 words\r\n   */\r\n  private trimToSingleArticle(content: string, title: string): { text: string; title: string; element: Element | null } {\r\n    console.log('\u2702\uFE0F Trimming over-extracted content...');\r\n    \r\n    const paragraphs = content.split(/\\n\\s*\\n/).filter(p => p.trim().length > 20);\r\n    const targetWords = 350; // Closer to expected ~304 words\r\n    \r\n    let trimmedContent = '';\r\n    let wordCount = 0;\r\n    \r\n    for (let i = 0; i < paragraphs.length; i++) {\r\n      const paragraph = paragraphs[i].trim();\r\n      const paragraphWords = paragraph.split(/\\s+/).length;\r\n      \r\n      // Stop if adding this paragraph would exceed target and we have enough content\r\n      if (wordCount + paragraphWords > targetWords && wordCount > 200) {\r\n        console.log(`\u2702\uFE0F Stopping at paragraph ${i}, word count: ${wordCount}`);\r\n        break;\r\n      }\r\n      \r\n      trimmedContent += paragraph + '\\n\\n';\r\n      wordCount += paragraphWords;\r\n    }\r\n    \r\n    const finalWordCount = trimmedContent.trim().split(/\\s+/).filter(w => w.length > 0).length;\r\n    console.log(`\u2702\uFE0F Trimmed from ${content.split(/\\s+/).length} to ${finalWordCount} words`);\r\n    \r\n    return {\r\n      text: trimmedContent.trim(),\r\n      title,\r\n      element: null\r\n    };\r\n  }\r\n}\r\n\r\n/**\r\n * Page Suitability Detector\r\n * \r\n * Determines if a page is suitable for text analysis.\r\n * Filters out video sites, social media, admin panels, etc.\r\n */\r\nclass PageSuitabilityDetector {\r\n  private unsuitableHostnames = [\r\n    // Video and media sites\r\n    'youtube.com', 'www.youtube.com', 'm.youtube.com', 'youtu.be',\r\n    'vimeo.com', 'dailymotion.com', 'twitch.tv', 'www.twitch.tv',\r\n    'netflix.com', 'hulu.com', 'disney.com',\r\n    'spotify.com', 'soundcloud.com', 'bandcamp.com',\r\n    // Social media\r\n    'facebook.com', 'www.facebook.com', 'm.facebook.com',\r\n    'twitter.com', 'x.com', 'linkedin.com',\r\n    'instagram.com', 'tiktok.com', 'snapchat.com',\r\n    'reddit.com', 'www.reddit.com',\r\n    // Chat and communication\r\n    'discord.com', 'slack.com', 'teams.microsoft.com',\r\n    'whatsapp.com', 'telegram.org', 'signal.org'\r\n  ];\r\n\r\n  private unsuitablePatterns = [\r\n    '/admin', '/dashboard', '/wp-admin', '/wp-login',\r\n    '/login', '/signin', '/signup', '/register',\r\n    '/checkout', '/cart', '/payment', '/billing'\r\n  ];\r\n\r\n  /**\r\n   * Check if current page is suitable for text analysis\r\n   */\r\n  isPageSuitable(): boolean {\r\n    const url = window.location.href.toLowerCase();\r\n    const hostname = window.location.hostname.toLowerCase();\r\n    const pathname = window.location.pathname.toLowerCase();\r\n    \r\n    // Skip extension pages\r\n    if (url.startsWith('chrome-extension://') || \r\n        url.startsWith('moz-extension://') || \r\n        url.startsWith('ms-browser-extension://')) {\r\n      console.log('\uD83D\uDEAB Skipping analysis - extension page detected');\r\n      return false;\r\n    }\r\n\r\n    // Check hostname blacklist\r\n    for (const unsuitableHost of this.unsuitableHostnames) {\r\n      if (hostname.includes(unsuitableHost)) {\r\n        console.log(`\uD83D\uDEAB Skipping analysis - unsuitable site: ${unsuitableHost}`);\r\n        return false;\r\n      }\r\n    }\r\n\r\n    // Check pathname patterns\r\n    for (const pattern of this.unsuitablePatterns) {\r\n      if (pathname.includes(pattern)) {\r\n        console.log(`\uD83D\uDEAB Skipping analysis - unsuitable page: ${pattern}`);\r\n        return false;\r\n      }\r\n    }\r\n\r\n    // Check for minimum content requirements\r\n    if (!this.hasMinimumContent()) {\r\n      console.log('\uD83D\uDEAB Skipping analysis - insufficient content');\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  private hasMinimumContent(): boolean {\r\n    const bodyText = document.body.textContent || '';\r\n    const wordCount = bodyText.trim().split(/\\s+/).length;\r\n    const paragraphCount = document.querySelectorAll('p').length;\r\n    \r\n    return wordCount >= 100 && paragraphCount >= 2;\r\n  }\r\n}\r\n\r\n/**\r\n * Main Text Analysis Engine\r\n * \r\n * Orchestrates all analysis components to provide comprehensive text analysis.\r\n * This is the main class that other modules interact with.\r\n */\r\nexport class TextAnalysisEngine {\r\n  private colemanLiau = new ColemanLiauAnalyzer();\r\n  private extractor = new ContentExtractor();\r\n  private suitabilityDetector = new PageSuitabilityDetector();\r\n  \r\n  // Configuration\r\n  private baseReadingSpeedWPM = 225; // Average adult reading speed\r\n\r\n  /**\r\n   * Perform comprehensive text analysis on current page\r\n   */\r\n  async analyzeCurrentPage(readingSpeedWPM: number = this.baseReadingSpeedWPM): Promise<AnalysisResult | null> {\r\n    console.log('\uD83D\uDCCA Starting text analysis...');\r\n\r\n    // Check page suitability\r\n    if (!this.suitabilityDetector.isPageSuitable()) {\r\n      console.log('\uD83D\uDEAB Page not suitable for analysis');\r\n      return null;\r\n    }\r\n\r\n    // Extract content\r\n    const { text, title, element } = this.extractor.extractMainContent();\r\n    \r\n    if (!text || text.length < 100) {\r\n      console.log('\uD83D\uDEAB Insufficient text content for analysis');\r\n      return null;\r\n    }\r\n\r\n    // Perform Coleman-Liau analysis\r\n    const colemanLiauIndex = this.colemanLiau.calculateIndex(text);\r\n    const complexityScore = this.colemanLiau.getComplexityClassification(colemanLiauIndex);\r\n    const readabilityLevel = this.colemanLiau.getReadabilityLevel(colemanLiauIndex);\r\n\r\n    // Calculate additional metrics\r\n    const wordCount = text.trim().split(/\\s+/).length;\r\n    const sentences = text.split(/[.!?]+/).filter(s => s.trim().length > 0).length;\r\n    const characters = (text.match(/[a-zA-Z0-9]/g) || []).length;\r\n    \r\n    const averageSentenceLength = Math.round((wordCount / Math.max(1, sentences)) * 10) / 10;\r\n    const averageCharactersPerWord = Math.round((characters / wordCount) * 10) / 10;\r\n\r\n    // Calculate reading time with complexity adjustment\r\n    let adjustedWPM = readingSpeedWPM;\r\n    if (colemanLiauIndex > 15) adjustedWPM *= 0.8;  // Very complex: 20% slower\r\n    else if (colemanLiauIndex > 12) adjustedWPM *= 0.9;  // Complex: 10% slower\r\n    else if (colemanLiauIndex < 6) adjustedWPM *= 1.1;   // Simple: 10% faster\r\n    \r\n    const readingTimeMinutes = Math.ceil(wordCount / adjustedWPM);\r\n\r\n    const result: AnalysisResult = {\r\n      wordCount,\r\n      readingTime: readingTimeMinutes,\r\n      complexity: {\r\n        averageSentenceLength,\r\n        averageCharactersPerWord,\r\n        complexityScore,\r\n        readabilityLevel,\r\n        colemanLiauIndex\r\n      },\r\n      url: window.location.href,\r\n      title,\r\n      timestamp: Date.now(),\r\n      textContent: text // Store for blur mode\r\n    };\r\n\r\n    console.log('\u2705 Analysis complete:', result);\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Get the main content element for blur mode\r\n   */\r\n  getMainContentElement(): Element | null {\r\n    const { element } = this.extractor.extractMainContent();\r\n    return element;\r\n  }\r\n\r\n  /**\r\n   * Update reading speed for calculations\r\n   */\r\n  setReadingSpeed(wpm: number): void {\r\n    this.baseReadingSpeedWPM = wpm;\r\n    console.log(`\uD83D\uDCD6 Reading speed updated to ${wpm} WPM`);\r\n  }\r\n}", "/**\r\n * BlurModeManager Module\r\n * \r\n * Extracted from complexity-reader and refactored for WebRay-M modular architecture.\r\n * Handles progressive word revelation for focused reading (blur mode).\r\n * \r\n * POTENTIAL WEBRAY-M MODULE CANDIDATE - High reuse potential for reading-focused extensions\r\n */\r\n\r\nexport interface BlurModeConfig {\r\n  wpm: number; // Words per minute (50-800)\r\n  highlightColor: string;\r\n  progressIndicator: boolean;\r\n  keyboardControls: boolean;\r\n  autoScroll: boolean;\r\n}\r\n\r\nexport interface BlurModeStats {\r\n  wordsRevealed: number;\r\n  totalWords: number;\r\n  timeElapsed: number;\r\n  currentWPM: number;\r\n  isActive: boolean;\r\n  isPaused: boolean;\r\n}\r\n\r\nexport interface BlurModeEvents {\r\n  onStart: () => void;\r\n  onPause: () => void;\r\n  onResume: () => void;\r\n  onStop: () => void;\r\n  onWordRevealed: (wordIndex: number, word: string) => void;\r\n  onComplete: (stats: BlurModeStats) => void;\r\n}\r\n\r\n/**\r\n * BlurModeManager - Progressive Word Revelation System\r\n * \r\n * Extracts text content, wraps words in spans, and reveals them progressively\r\n * at a configurable reading speed with full keyboard control support.\r\n */\r\nexport class BlurModeManager {\r\n  private config: BlurModeConfig;\r\n  private events: Partial<BlurModeEvents>;\r\n  private isActive = false;\r\n  private isPaused = false;\r\n  private currentWordIndex = 0;\r\n  private words: HTMLElement[] = [];\r\n  private originalContent: string = '';\r\n  private contentContainer: HTMLElement | null = null;\r\n  private revealTimer: number | null = null;\r\n  private startTime: number = 0;\r\n  private keyboardListener: ((e: KeyboardEvent) => void) | null = null;\r\n\r\n  constructor(config: Partial<BlurModeConfig> = {}, events: Partial<BlurModeEvents> = {}) {\r\n    this.config = {\r\n      wpm: 225,\r\n      highlightColor: '#4285f4',\r\n      progressIndicator: true,\r\n      keyboardControls: true,\r\n      autoScroll: true,\r\n      ...config\r\n    };\r\n    this.events = events;\r\n  }\r\n\r\n  /**\r\n   * Start blur mode on the current page\r\n   * Extracts content, wraps words, and begins progressive revelation\r\n   */\r\n  async startBlurMode(targetElement?: HTMLElement): Promise<boolean> {\r\n    try {\r\n      console.log('\uD83C\uDFAF Starting BlurMode...');\r\n      \r\n      // Find content container\r\n      this.contentContainer = targetElement || this.findMainContent();\r\n      if (!this.contentContainer) {\r\n        console.error('\u274C No suitable content found for blur mode');\r\n        return false;\r\n      }\r\n\r\n      // Store original content for restoration\r\n      this.originalContent = this.contentContainer.innerHTML;\r\n      \r\n      // Process and wrap words\r\n      const wordCount = this.processTextContent();\r\n      if (wordCount === 0) {\r\n        console.error('\u274C No words found to process');\r\n        return false;\r\n      }\r\n\r\n      // Initialize state\r\n      this.isActive = true;\r\n      this.isPaused = false;\r\n      this.currentWordIndex = 0;\r\n      this.startTime = Date.now();\r\n\r\n      // Set up keyboard controls\r\n      if (this.config.keyboardControls) {\r\n        this.setupKeyboardControls();\r\n      }\r\n\r\n      // Hide all words initially\r\n      this.hideAllWords();\r\n\r\n      // Start revelation timer\r\n      this.startRevealTimer();\r\n\r\n      console.log(`\u2705 BlurMode started: ${wordCount} words at ${this.config.wpm} WPM`);\r\n      this.events.onStart?.();\r\n      \r\n      return true;\r\n    } catch (error) {\r\n      console.error('\u274C Failed to start blur mode:', error);\r\n      return false;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Stop blur mode and restore original content\r\n   */\r\n  stopBlurMode(): void {\r\n    if (!this.isActive) return;\r\n\r\n    console.log('\u23F9\uFE0F Stopping BlurMode...');\r\n    \r\n    // Clear timer\r\n    if (this.revealTimer) {\r\n      clearInterval(this.revealTimer);\r\n      this.revealTimer = null;\r\n    }\r\n\r\n    // Remove keyboard listener\r\n    if (this.keyboardListener) {\r\n      document.removeEventListener('keydown', this.keyboardListener);\r\n      this.keyboardListener = null;\r\n    }\r\n\r\n    // Restore original content\r\n    if (this.contentContainer && this.originalContent) {\r\n      this.contentContainer.innerHTML = this.originalContent;\r\n    }\r\n\r\n    // Generate final stats\r\n    const stats = this.getStats();\r\n    \r\n    // Reset state\r\n    this.isActive = false;\r\n    this.isPaused = false;\r\n    this.currentWordIndex = 0;\r\n    this.words = [];\r\n\r\n    console.log('\u2705 BlurMode stopped, content restored');\r\n    this.events.onStop?.();\r\n    this.events.onComplete?.(stats);\r\n  }\r\n\r\n  /**\r\n   * Pause/resume blur mode\r\n   */\r\n  togglePause(): void {\r\n    if (!this.isActive) return;\r\n\r\n    if (this.isPaused) {\r\n      this.resumeBlurMode();\r\n    } else {\r\n      this.pauseBlurMode();\r\n    }\r\n  }\r\n\r\n  private pauseBlurMode(): void {\r\n    if (this.revealTimer) {\r\n      clearInterval(this.revealTimer);\r\n      this.revealTimer = null;\r\n    }\r\n    this.isPaused = true;\r\n    console.log('\u23F8\uFE0F BlurMode paused');\r\n    this.events.onPause?.();\r\n  }\r\n\r\n  private resumeBlurMode(): void {\r\n    this.startRevealTimer();\r\n    this.isPaused = false;\r\n    console.log('\u25B6\uFE0F BlurMode resumed');\r\n    this.events.onResume?.();\r\n  }\r\n\r\n  /**\r\n   * Adjust reading speed\r\n   */\r\n  adjustSpeed(wpm: number): void {\r\n    this.config.wpm = Math.max(50, Math.min(800, wpm));\r\n    \r\n    if (this.isActive && !this.isPaused) {\r\n      // Restart timer with new speed\r\n      if (this.revealTimer) {\r\n        clearInterval(this.revealTimer);\r\n      }\r\n      this.startRevealTimer();\r\n    }\r\n    \r\n    console.log(`\uD83C\uDF9B\uFE0F BlurMode speed adjusted to ${this.config.wpm} WPM`);\r\n  }\r\n\r\n  /**\r\n   * Get current statistics\r\n   */\r\n  getStats(): BlurModeStats {\r\n    const timeElapsed = this.isActive ? Date.now() - this.startTime : 0;\r\n    const actualWPM = timeElapsed > 0 ? (this.currentWordIndex / (timeElapsed / 60000)) : 0;\r\n\r\n    return {\r\n      wordsRevealed: this.currentWordIndex,\r\n      totalWords: this.words.length,\r\n      timeElapsed,\r\n      currentWPM: Math.round(actualWPM),\r\n      isActive: this.isActive,\r\n      isPaused: this.isPaused\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Find main content area using semantic selectors\r\n   */\r\n  private findMainContent(): HTMLElement | null {\r\n    const selectors = [\r\n      'main',\r\n      'article',\r\n      '[role=\"main\"]',\r\n      '.main-content',\r\n      '.article-content',\r\n      '.post-content',\r\n      '.content',\r\n      '#content',\r\n      'div[id*=\"content\"]',\r\n      'div[class*=\"content\"]'\r\n    ];\r\n\r\n    for (const selector of selectors) {\r\n      const element = document.querySelector(selector) as HTMLElement;\r\n      if (element && element.textContent && element.textContent.trim().length > 100) {\r\n        return element;\r\n      }\r\n    }\r\n\r\n    // Fallback: find element with most text content\r\n    const allDivs = document.querySelectorAll('div, section, article');\r\n    let bestCandidate: HTMLElement | null = null;\r\n    let maxTextLength = 0;\r\n\r\n    for (const div of allDivs) {\r\n      const textContent = div.textContent?.trim() || '';\r\n      if (textContent.length > maxTextLength && textContent.length > 500) {\r\n        bestCandidate = div as HTMLElement;\r\n        maxTextLength = textContent.length;\r\n      }\r\n    }\r\n\r\n    return bestCandidate;\r\n  }\r\n\r\n  /**\r\n   * Process text content and wrap individual words in spans\r\n   */\r\n  private processTextContent(): number {\r\n    if (!this.contentContainer) return 0;\r\n\r\n    const walker = document.createTreeWalker(\r\n      this.contentContainer,\r\n      NodeFilter.SHOW_TEXT,\r\n      {\r\n        acceptNode: (node) => {\r\n          const parent = node.parentNode as Element;\r\n          if (!parent) return NodeFilter.FILTER_REJECT;\r\n          \r\n          const tagName = parent.tagName.toLowerCase();\r\n          if (['script', 'style', 'noscript', 'code', 'pre'].includes(tagName)) {\r\n            return NodeFilter.FILTER_REJECT;\r\n          }\r\n          \r\n          const text = node.textContent?.trim();\r\n          return text && text.length > 0 ? NodeFilter.FILTER_ACCEPT : NodeFilter.FILTER_REJECT;\r\n        }\r\n      }\r\n    );\r\n\r\n    const textNodes: Node[] = [];\r\n    let node;\r\n    while (node = walker.nextNode()) {\r\n      textNodes.push(node);\r\n    }\r\n\r\n    // Process each text node and wrap words\r\n    let wordIndex = 0;\r\n    for (const textNode of textNodes) {\r\n      const text = textNode.textContent || '';\r\n      const words = text.split(/(\\s+)/).filter(part => part.trim().length > 0);\r\n      \r\n      if (words.length === 0) continue;\r\n\r\n      const parent = textNode.parentNode;\r\n      if (!parent) continue;\r\n\r\n      // Create word spans\r\n      const fragment = document.createDocumentFragment();\r\n      \r\n      for (let i = 0; i < words.length; i++) {\r\n        const word = words[i];\r\n        if (word.trim().length === 0) continue;\r\n\r\n        const wordSpan = document.createElement('span');\r\n        wordSpan.textContent = word;\r\n        wordSpan.className = 'blur-word';\r\n        wordSpan.dataset.wordIndex = wordIndex.toString();\r\n        wordSpan.style.cssText = `\r\n          visibility: hidden;\r\n          transition: all 0.2s ease;\r\n        `;\r\n\r\n        fragment.appendChild(wordSpan);\r\n        this.words.push(wordSpan);\r\n        wordIndex++;\r\n\r\n        // Add space after word (except last)\r\n        if (i < words.length - 1) {\r\n          fragment.appendChild(document.createTextNode(' '));\r\n        }\r\n      }\r\n\r\n      // Replace original text node with wrapped words\r\n      parent.replaceChild(fragment, textNode);\r\n    }\r\n\r\n    return this.words.length;\r\n  }\r\n\r\n  /**\r\n   * Hide all words initially\r\n   */\r\n  private hideAllWords(): void {\r\n    this.words.forEach(word => {\r\n      word.style.visibility = 'hidden';\r\n      word.style.backgroundColor = 'transparent';\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Start the word revelation timer\r\n   */\r\n  private startRevealTimer(): void {\r\n    const intervalMs = 60000 / this.config.wpm; // Convert WPM to milliseconds per word\r\n    \r\n    this.revealTimer = window.setInterval(() => {\r\n      this.revealNextWord();\r\n    }, intervalMs);\r\n  }\r\n\r\n  /**\r\n   * Reveal the next word\r\n   */\r\n  private revealNextWord(): void {\r\n    if (this.currentWordIndex >= this.words.length) {\r\n      // All words revealed - complete blur mode\r\n      this.stopBlurMode();\r\n      return;\r\n    }\r\n\r\n    // Hide previous word highlight\r\n    if (this.currentWordIndex > 0) {\r\n      const prevWord = this.words[this.currentWordIndex - 1];\r\n      prevWord.style.backgroundColor = 'transparent';\r\n    }\r\n\r\n    // Reveal and highlight current word\r\n    const currentWord = this.words[this.currentWordIndex];\r\n    currentWord.style.visibility = 'visible';\r\n    currentWord.style.backgroundColor = this.config.highlightColor + '33'; // 20% opacity\r\n\r\n    // Auto-scroll to keep word visible\r\n    if (this.config.autoScroll) {\r\n      currentWord.scrollIntoView({ behavior: 'smooth', block: 'center' });\r\n    }\r\n\r\n    // Trigger word revealed event\r\n    this.events.onWordRevealed?.(this.currentWordIndex, currentWord.textContent || '');\r\n\r\n    this.currentWordIndex++;\r\n  }\r\n\r\n  /**\r\n   * Setup keyboard controls\r\n   */\r\n  private setupKeyboardControls(): void {\r\n    this.keyboardListener = (e: KeyboardEvent) => {\r\n      if (!this.isActive) return;\r\n\r\n      switch (e.code) {\r\n        case 'Space':\r\n          e.preventDefault();\r\n          this.togglePause();\r\n          break;\r\n        \r\n        case 'Escape':\r\n          e.preventDefault();\r\n          this.stopBlurMode();\r\n          break;\r\n        \r\n        case 'ArrowRight':\r\n          e.preventDefault();\r\n          if (this.isPaused && this.currentWordIndex < this.words.length) {\r\n            this.revealNextWord();\r\n          }\r\n          break;\r\n        \r\n        case 'ArrowLeft':\r\n          e.preventDefault();\r\n          if (this.isPaused && this.currentWordIndex > 0) {\r\n            this.currentWordIndex = Math.max(0, this.currentWordIndex - 2);\r\n            this.hideWordsAfter(this.currentWordIndex);\r\n            this.revealNextWord();\r\n          }\r\n          break;\r\n        \r\n        case 'KeyR':\r\n          e.preventDefault();\r\n          this.restartBlurMode();\r\n          break;\r\n      }\r\n    };\r\n\r\n    document.addEventListener('keydown', this.keyboardListener);\r\n  }\r\n\r\n  /**\r\n   * Hide words after specified index\r\n   */\r\n  private hideWordsAfter(index: number): void {\r\n    for (let i = index; i < this.words.length; i++) {\r\n      this.words[i].style.visibility = 'hidden';\r\n      this.words[i].style.backgroundColor = 'transparent';\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Restart blur mode from beginning\r\n   */\r\n  private restartBlurMode(): void {\r\n    if (!this.isActive) return;\r\n\r\n    // Reset to beginning\r\n    this.currentWordIndex = 0;\r\n    this.startTime = Date.now();\r\n    \r\n    // Hide all words\r\n    this.hideAllWords();\r\n    \r\n    // Restart timer\r\n    if (this.revealTimer) {\r\n      clearInterval(this.revealTimer);\r\n    }\r\n    \r\n    if (!this.isPaused) {\r\n      this.startRevealTimer();\r\n    }\r\n    \r\n    console.log('\uD83D\uDD04 BlurMode restarted');\r\n  }\r\n\r\n  /**\r\n   * Check if blur mode is currently active\r\n   */\r\n  isBlurModeActive(): boolean {\r\n    return this.isActive;\r\n  }\r\n\r\n  /**\r\n   * Get current configuration\r\n   */\r\n  getConfig(): BlurModeConfig {\r\n    return { ...this.config };\r\n  }\r\n\r\n  /**\r\n   * Update configuration\r\n   */\r\n  updateConfig(newConfig: Partial<BlurModeConfig>): void {\r\n    this.config = { ...this.config, ...newConfig };\r\n  }\r\n}", "/**\r\n * ReadingSessionManager Module\r\n * \r\n * Extracted from complexity-reader and refactored for WebRay-M modular architecture.\r\n * Handles reading session tracking, statistics calculation, and progress analytics.\r\n * \r\n * POTENTIAL WEBRAY-M MODULE CANDIDATE - High reuse potential for productivity extensions\r\n */\r\n\r\nexport interface ReadingSession {\r\n  id: string;\r\n  startTime: number;\r\n  endTime?: number;\r\n  url: string;\r\n  title: string;\r\n  wordsRead: number;\r\n  pagesAnalyzed: number;\r\n  blurModeUsed: boolean;\r\n  blurModeWords?: number;\r\n  avgComplexity?: string;\r\n  completionRate: number; // 0-1\r\n  actualWPM?: number;\r\n  targetWPM: number;\r\n  duration: number; // milliseconds\r\n  isActive: boolean;\r\n}\r\n\r\nexport interface ReadingStatistics {\r\n  totalSessions: number;\r\n  totalWordsRead: number;\r\n  totalTimeSpent: number; // milliseconds\r\n  averageWPM: number;\r\n  averageSessionLength: number;\r\n  blurModeUsage: number; // percentage\r\n  favoriteComplexity: string;\r\n  currentStreak: number; // days\r\n  longestStreak: number; // days\r\n  dailyGoalProgress: number; // 0-1\r\n  weeklyStats: DailyStats[];\r\n  monthlyStats: MonthlyStats;\r\n}\r\n\r\nexport interface DailyStats {\r\n  date: string; // YYYY-MM-DD\r\n  wordsRead: number;\r\n  sessionsCount: number;\r\n  timeSpent: number;\r\n  goalMet: boolean;\r\n}\r\n\r\nexport interface MonthlyStats {\r\n  month: string; // YYYY-MM\r\n  totalWords: number;\r\n  totalSessions: number;\r\n  totalTime: number;\r\n  averageWPM: number;\r\n  streakDays: number;\r\n}\r\n\r\nexport interface SessionGoals {\r\n  dailyWordGoal: number; // default 2000\r\n  weeklyGoalEnabled: boolean;\r\n  weeklyWordGoal: number; // default 14000\r\n  streakGoalEnabled: boolean;\r\n  targetStreakDays: number; // default 7\r\n}\r\n\r\nexport interface SessionEvents {\r\n  onSessionStart: (session: ReadingSession) => void;\r\n  onSessionEnd: (session: ReadingSession, stats: ReadingStatistics) => void;\r\n  onGoalProgress: (progress: number, goalType: 'daily' | 'weekly') => void;\r\n  onGoalAchieved: (goalType: 'daily' | 'weekly' | 'streak') => void;\r\n  onStreakUpdated: (currentStreak: number, isNewRecord: boolean) => void;\r\n}\r\n\r\n/**\r\n * ReadingSessionManager - Comprehensive Session Tracking & Analytics\r\n * \r\n * Tracks reading sessions, calculates statistics, manages goals,\r\n * and provides comprehensive analytics for reading habits.\r\n */\r\nexport class ReadingSessionManager {\r\n  private currentSession: ReadingSession | null = null;\r\n  private goals: SessionGoals;\r\n  private events: Partial<SessionEvents>;\r\n  private storageManager: any; // Will be injected later\r\n\r\n  constructor(\r\n    goals: Partial<SessionGoals> = {},\r\n    events: Partial<SessionEvents> = {},\r\n    storageManager?: any\r\n  ) {\r\n    this.goals = {\r\n      dailyWordGoal: 2000,\r\n      weeklyGoalEnabled: true,\r\n      weeklyWordGoal: 14000,\r\n      streakGoalEnabled: true,\r\n      targetStreakDays: 7,\r\n      ...goals\r\n    };\r\n    this.events = events;\r\n    this.storageManager = storageManager;\r\n  }\r\n\r\n  /**\r\n   * Start a new reading session\r\n   */\r\n  async startSession(url: string, title: string, targetWPM: number = 225): Promise<ReadingSession> {\r\n    // End current session if active\r\n    if (this.currentSession?.isActive) {\r\n      await this.endSession();\r\n    }\r\n\r\n    const sessionId = this.generateSessionId();\r\n    this.currentSession = {\r\n      id: sessionId,\r\n      startTime: Date.now(),\r\n      url,\r\n      title,\r\n      wordsRead: 0,\r\n      pagesAnalyzed: 0,\r\n      blurModeUsed: false,\r\n      completionRate: 0,\r\n      targetWPM,\r\n      duration: 0,\r\n      isActive: true\r\n    };\r\n\r\n    console.log('\uD83D\uDE80 Reading session started:', sessionId);\r\n    this.events.onSessionStart?.(this.currentSession);\r\n    \r\n    return this.currentSession;\r\n  }\r\n\r\n  /**\r\n   * End the current reading session\r\n   */\r\n  async endSession(): Promise<ReadingSession | null> {\r\n    if (!this.currentSession || !this.currentSession.isActive) {\r\n      return null;\r\n    }\r\n\r\n    const endTime = Date.now();\r\n    this.currentSession.endTime = endTime;\r\n    this.currentSession.duration = endTime - this.currentSession.startTime;\r\n    this.currentSession.isActive = false;\r\n\r\n    // Calculate actual WPM if we have blur mode data\r\n    if (this.currentSession.blurModeWords && this.currentSession.duration > 0) {\r\n      this.currentSession.actualWPM = Math.round(\r\n        this.currentSession.blurModeWords / (this.currentSession.duration / 60000)\r\n      );\r\n    }\r\n\r\n    // Save session to storage\r\n    await this.saveSession(this.currentSession);\r\n\r\n    // Update statistics and check goals\r\n    const stats = await this.calculateStatistics();\r\n    await this.updateDailyProgress();\r\n    await this.updateStreak();\r\n    \r\n    console.log('\u23F9\uFE0F Reading session ended:', this.currentSession.id);\r\n    this.events.onSessionEnd?.(this.currentSession, stats);\r\n    \r\n    const completedSession = { ...this.currentSession };\r\n    this.currentSession = null;\r\n    \r\n    return completedSession;\r\n  }\r\n\r\n  /**\r\n   * Update current session with reading progress\r\n   */\r\n  updateSessionProgress(update: {\r\n    wordsRead?: number;\r\n    pagesAnalyzed?: number;\r\n    blurModeUsed?: boolean;\r\n    blurModeWords?: number;\r\n    avgComplexity?: string;\r\n    completionRate?: number;\r\n  }): void {\r\n    if (!this.currentSession?.isActive) return;\r\n\r\n    Object.assign(this.currentSession, update);\r\n    this.currentSession.duration = Date.now() - this.currentSession.startTime;\r\n\r\n    // Auto-save session data periodically\r\n    if (this.storageManager) {\r\n      this.saveSession(this.currentSession);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get current active session\r\n   */\r\n  getCurrentSession(): ReadingSession | null {\r\n    return this.currentSession;\r\n  }\r\n\r\n  /**\r\n   * Get comprehensive reading statistics\r\n   */\r\n  async calculateStatistics(): Promise<ReadingStatistics> {\r\n    const sessions = await this.getAllSessions();\r\n    const today = this.getTodayString();\r\n    const thisWeek = this.getThisWeekDates();\r\n\r\n    // Basic totals\r\n    const totalSessions = sessions.length;\r\n    const totalWordsRead = sessions.reduce((sum, session) => sum + session.wordsRead, 0);\r\n    const totalTimeSpent = sessions.reduce((sum, session) => sum + session.duration, 0);\r\n\r\n    // Calculate averages\r\n    const completedSessions = sessions.filter(s => s.endTime);\r\n    const averageWPM = completedSessions.length > 0\r\n      ? completedSessions.reduce((sum, session) => {\r\n          return sum + (session.actualWPM || session.targetWPM);\r\n        }, 0) / completedSessions.length\r\n      : 0;\r\n\r\n    const averageSessionLength = completedSessions.length > 0\r\n      ? totalTimeSpent / completedSessions.length\r\n      : 0;\r\n\r\n    // Blur mode usage\r\n    const blurModeSessions = sessions.filter(s => s.blurModeUsed).length;\r\n    const blurModeUsage = totalSessions > 0 ? (blurModeSessions / totalSessions) * 100 : 0;\r\n\r\n    // Favorite complexity\r\n    const complexityCount: { [key: string]: number } = {};\r\n    sessions.forEach(session => {\r\n      if (session.avgComplexity) {\r\n        complexityCount[session.avgComplexity] = (complexityCount[session.avgComplexity] || 0) + 1;\r\n      }\r\n    });\r\n    const favoriteComplexity = Object.keys(complexityCount).reduce((a, b) => \r\n      complexityCount[a] > complexityCount[b] ? a : b, 'Moderate'\r\n    );\r\n\r\n    // Streak calculation\r\n    const { currentStreak, longestStreak } = await this.calculateStreaks();\r\n\r\n    // Daily goal progress\r\n    const todaySessions = sessions.filter(s => this.getDateString(s.startTime) === today);\r\n    const todayWords = todaySessions.reduce((sum, session) => sum + session.wordsRead, 0);\r\n    const dailyGoalProgress = Math.min(1, todayWords / this.goals.dailyWordGoal);\r\n\r\n    // Weekly stats\r\n    const weeklyStats = this.calculateWeeklyStats(sessions, thisWeek);\r\n\r\n    // Monthly stats\r\n    const monthlyStats = this.calculateMonthlyStats(sessions);\r\n\r\n    return {\r\n      totalSessions,\r\n      totalWordsRead,\r\n      totalTimeSpent,\r\n      averageWPM: Math.round(averageWPM),\r\n      averageSessionLength: Math.round(averageSessionLength),\r\n      blurModeUsage: Math.round(blurModeUsage),\r\n      favoriteComplexity,\r\n      currentStreak,\r\n      longestStreak,\r\n      dailyGoalProgress,\r\n      weeklyStats,\r\n      monthlyStats\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Get today's reading progress\r\n   */\r\n  async getTodayProgress(): Promise<DailyStats> {\r\n    const sessions = await this.getAllSessions();\r\n    const today = this.getTodayString();\r\n    const todaySessions = sessions.filter(s => this.getDateString(s.startTime) === today);\r\n\r\n    const wordsRead = todaySessions.reduce((sum, session) => sum + session.wordsRead, 0);\r\n    const timeSpent = todaySessions.reduce((sum, session) => sum + session.duration, 0);\r\n    const goalMet = wordsRead >= this.goals.dailyWordGoal;\r\n\r\n    return {\r\n      date: today,\r\n      wordsRead,\r\n      sessionsCount: todaySessions.length,\r\n      timeSpent,\r\n      goalMet\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Update daily reading goals\r\n   */\r\n  updateGoals(newGoals: Partial<SessionGoals>): void {\r\n    this.goals = { ...this.goals, ...newGoals };\r\n    \r\n    if (this.storageManager) {\r\n      this.storageManager.save('reading_goals', this.goals);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get current goals\r\n   */\r\n  getGoals(): SessionGoals {\r\n    return { ...this.goals };\r\n  }\r\n\r\n  /**\r\n   * Private helper methods\r\n   */\r\n\r\n  private generateSessionId(): string {\r\n    return `session_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\r\n  }\r\n\r\n  private async saveSession(session: ReadingSession): Promise<void> {\r\n    if (!this.storageManager) return;\r\n\r\n    const sessions = await this.getAllSessions();\r\n    const existingIndex = sessions.findIndex(s => s.id === session.id);\r\n    \r\n    if (existingIndex >= 0) {\r\n      sessions[existingIndex] = session;\r\n    } else {\r\n      sessions.push(session);\r\n    }\r\n\r\n    await this.storageManager.save('reading_sessions', sessions);\r\n  }\r\n\r\n  private async getAllSessions(): Promise<ReadingSession[]> {\r\n    if (!this.storageManager) return [];\r\n    \r\n    try {\r\n      return await this.storageManager.get('reading_sessions') || [];\r\n    } catch (error) {\r\n      console.error('Failed to load sessions:', error);\r\n      return [];\r\n    }\r\n  }\r\n\r\n  private async calculateStreaks(): Promise<{ currentStreak: number; longestStreak: number }> {\r\n    const sessions = await this.getAllSessions();\r\n    const uniqueDates = [...new Set(sessions\r\n      .filter(s => s.endTime) // Only completed sessions\r\n      .map(s => this.getDateString(s.startTime))\r\n    )].sort();\r\n\r\n    let currentStreak = 0;\r\n    let longestStreak = 0;\r\n    let tempStreak = 0;\r\n\r\n    const today = this.getTodayString();\r\n    const yesterday = this.getDateString(Date.now() - 24 * 60 * 60 * 1000);\r\n\r\n    // Calculate current streak (working backwards from today)\r\n    for (let i = 0; i < 30; i++) { // Check last 30 days\r\n      const checkDate = this.getDateString(Date.now() - i * 24 * 60 * 60 * 1000);\r\n      if (uniqueDates.includes(checkDate)) {\r\n        if (i === 0 || (i === 1 && checkDate === yesterday)) {\r\n          currentStreak++;\r\n        } else if (currentStreak === 0) {\r\n          break; // No activity today or yesterday, no current streak\r\n        }\r\n      } else if (i === 0 && uniqueDates.includes(yesterday)) {\r\n        // Today has no activity but yesterday does\r\n        continue;\r\n      } else if (currentStreak > 0) {\r\n        break; // Streak broken\r\n      }\r\n    }\r\n\r\n    // Calculate longest streak\r\n    tempStreak = 1;\r\n    for (let i = 1; i < uniqueDates.length; i++) {\r\n      const prevDate = new Date(uniqueDates[i - 1]);\r\n      const currDate = new Date(uniqueDates[i]);\r\n      const dayDiff = (currDate.getTime() - prevDate.getTime()) / (24 * 60 * 60 * 1000);\r\n\r\n      if (dayDiff === 1) {\r\n        tempStreak++;\r\n      } else {\r\n        longestStreak = Math.max(longestStreak, tempStreak);\r\n        tempStreak = 1;\r\n      }\r\n    }\r\n    longestStreak = Math.max(longestStreak, tempStreak);\r\n\r\n    return { currentStreak, longestStreak };\r\n  }\r\n\r\n  private async updateDailyProgress(): Promise<void> {\r\n    const todayProgress = await this.getTodayProgress();\r\n    \r\n    // Check for goal achievement\r\n    if (todayProgress.goalMet) {\r\n      this.events.onGoalAchieved?.('daily');\r\n    }\r\n\r\n    this.events.onGoalProgress?.(\r\n      todayProgress.wordsRead / this.goals.dailyWordGoal,\r\n      'daily'\r\n    );\r\n  }\r\n\r\n  private async updateStreak(): Promise<void> {\r\n    const { currentStreak, longestStreak } = await this.calculateStreaks();\r\n    const isNewRecord = currentStreak > longestStreak;\r\n    \r\n    this.events.onStreakUpdated?.(currentStreak, isNewRecord);\r\n    \r\n    if (this.goals.streakGoalEnabled && currentStreak >= this.goals.targetStreakDays) {\r\n      this.events.onGoalAchieved?.('streak');\r\n    }\r\n  }\r\n\r\n  private calculateWeeklyStats(sessions: ReadingSession[], weekDates: string[]): DailyStats[] {\r\n    return weekDates.map(date => {\r\n      const daySessions = sessions.filter(s => this.getDateString(s.startTime) === date);\r\n      const wordsRead = daySessions.reduce((sum, session) => sum + session.wordsRead, 0);\r\n      const timeSpent = daySessions.reduce((sum, session) => sum + session.duration, 0);\r\n      \r\n      return {\r\n        date,\r\n        wordsRead,\r\n        sessionsCount: daySessions.length,\r\n        timeSpent,\r\n        goalMet: wordsRead >= this.goals.dailyWordGoal\r\n      };\r\n    });\r\n  }\r\n\r\n  private calculateMonthlyStats(sessions: ReadingSession[]): MonthlyStats {\r\n    const thisMonth = this.getMonthString();\r\n    const monthSessions = sessions.filter(s => \r\n      this.getMonthString(s.startTime) === thisMonth\r\n    );\r\n\r\n    const totalWords = monthSessions.reduce((sum, session) => sum + session.wordsRead, 0);\r\n    const totalTime = monthSessions.reduce((sum, session) => sum + session.duration, 0);\r\n    const completedSessions = monthSessions.filter(s => s.endTime);\r\n    \r\n    const averageWPM = completedSessions.length > 0\r\n      ? completedSessions.reduce((sum, session) => {\r\n          return sum + (session.actualWPM || session.targetWPM);\r\n        }, 0) / completedSessions.length\r\n      : 0;\r\n\r\n    // Calculate streak days for this month\r\n    const uniqueDates = [...new Set(monthSessions.map(s => this.getDateString(s.startTime)))];\r\n    \r\n    return {\r\n      month: thisMonth,\r\n      totalWords,\r\n      totalSessions: monthSessions.length,\r\n      totalTime,\r\n      averageWPM: Math.round(averageWPM),\r\n      streakDays: uniqueDates.length\r\n    };\r\n  }\r\n\r\n  private getTodayString(): string {\r\n    return this.getDateString(Date.now());\r\n  }\r\n\r\n  private getDateString(timestamp: number): string {\r\n    return new Date(timestamp).toISOString().split('T')[0];\r\n  }\r\n\r\n  private getMonthString(timestamp: number = Date.now()): string {\r\n    return new Date(timestamp).toISOString().substring(0, 7); // YYYY-MM\r\n  }\r\n\r\n  private getThisWeekDates(): string[] {\r\n    const dates = [];\r\n    const today = new Date();\r\n    const startOfWeek = new Date(today);\r\n    startOfWeek.setDate(today.getDate() - today.getDay()); // Start of week (Sunday)\r\n\r\n    for (let i = 0; i < 7; i++) {\r\n      const date = new Date(startOfWeek);\r\n      date.setDate(startOfWeek.getDate() + i);\r\n      dates.push(this.getDateString(date.getTime()));\r\n    }\r\n\r\n    return dates;\r\n  }\r\n\r\n  /**\r\n   * Export session data for backup\r\n   */\r\n  async exportData(): Promise<{ sessions: ReadingSession[]; goals: SessionGoals; stats: ReadingStatistics }> {\r\n    const sessions = await this.getAllSessions();\r\n    const stats = await this.calculateStatistics();\r\n    \r\n    return {\r\n      sessions,\r\n      goals: this.goals,\r\n      stats\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Import session data from backup\r\n   */\r\n  async importData(data: { sessions: ReadingSession[]; goals?: SessionGoals }): Promise<void> {\r\n    if (!this.storageManager) return;\r\n\r\n    if (data.sessions) {\r\n      await this.storageManager.save('reading_sessions', data.sessions);\r\n    }\r\n    \r\n    if (data.goals) {\r\n      this.goals = { ...this.goals, ...data.goals };\r\n      await this.storageManager.save('reading_goals', this.goals);\r\n    }\r\n  }\r\n}", "/**\r\n * StorageManager Module\r\n * \r\n * Chrome Extension Storage Abstraction Layer with Enhanced Reliability\r\n * \r\n * PROBLEM SOLVED: The original complexity-reader extension suffered from context invalidation\r\n * issues where chrome.storage API calls would fail after extension reloads/updates, causing\r\n * \"Extension context invalidated\" errors and breaking user preferences/session data.\r\n * \r\n * SOLUTION: This module provides a robust abstraction layer with:\r\n * - Context validation before storage operations\r\n * - Automatic fallback to localStorage when extension context is invalid\r\n * - Retry mechanisms with exponential backoff\r\n * - Data validation and type safety\r\n * - Comprehensive error handling and logging\r\n * \r\n * POTENTIAL WEBRAY-M MODULE CANDIDATE - Essential for all Chrome extensions\r\n * \r\n * @author WebRay-M Framework\r\n * @version 1.0.0\r\n * @since 2024\r\n */\r\n\r\n/**\r\n * Storage operation result interface\r\n */\r\nexport interface StorageResult<T> {\r\n  success: boolean;\r\n  data?: T;\r\n  error?: string;\r\n  fromFallback?: boolean; // Indicates if data came from localStorage fallback\r\n  retryCount?: number;\r\n}\r\n\r\n/**\r\n * Storage configuration options\r\n */\r\nexport interface StorageConfig {\r\n  maxRetries: number;         // Maximum retry attempts (default: 3)\r\n  retryDelayMs: number;       // Base retry delay in milliseconds (default: 100)\r\n  useExponentialBackoff: boolean; // Use exponential backoff for retries (default: true)\r\n  enableFallback: boolean;    // Enable localStorage fallback (default: true)\r\n  fallbackPrefix: string;     // Prefix for localStorage keys (default: 'readwise_')\r\n  validateData: boolean;      // Validate data before storage operations (default: true)\r\n  debugMode: boolean;         // Enable detailed logging (default: false)\r\n}\r\n\r\n/**\r\n * Data validation schema interface\r\n */\r\nexport interface DataSchema {\r\n  [key: string]: {\r\n    type: 'string' | 'number' | 'boolean' | 'object' | 'array';\r\n    required?: boolean;\r\n    validate?: (value: any) => boolean;\r\n  };\r\n}\r\n\r\n/**\r\n * StorageManager - Robust Chrome Extension Storage Handler\r\n * \r\n * This class provides a reliable interface to Chrome extension storage APIs with\r\n * automatic fallback mechanisms, retry logic, and comprehensive error handling.\r\n * \r\n * KEY FEATURES:\r\n * 1. Context Validation - Checks if extension context is valid before operations\r\n * 2. Automatic Fallback - Uses localStorage when Chrome storage is unavailable\r\n * 3. Retry Logic - Automatically retries failed operations with backoff\r\n * 4. Data Validation - Validates data structure before saving\r\n * 5. Type Safety - Full TypeScript support with generic methods\r\n * 6. Error Recovery - Graceful handling of all storage failure scenarios\r\n * \r\n * USAGE EXAMPLES:\r\n * \r\n * // Basic usage with automatic error handling\r\n * const storage = new StorageManager();\r\n * const result = await storage.save('user_preferences', { theme: 'dark', wpm: 225 });\r\n * if (result.success) {\r\n *   console.log('Preferences saved successfully');\r\n * }\r\n * \r\n * // Retrieve data with type safety\r\n * const preferences = await storage.get<UserPreferences>('user_preferences');\r\n * if (preferences.success && preferences.data) {\r\n *   console.log('User WPM:', preferences.data.wpm);\r\n * }\r\n * \r\n * // Batch operations for efficiency\r\n * const batchResult = await storage.saveBatch({\r\n *   'sessions': sessionData,\r\n *   'goals': goalData,\r\n *   'stats': statisticsData\r\n * });\r\n */\r\nexport class StorageManager {\r\n  private config: StorageConfig;\r\n  private schemas: Map<string, DataSchema> = new Map();\r\n  \r\n  /**\r\n   * Initialize StorageManager with configuration options\r\n   * \r\n   * @param config - Storage configuration options\r\n   */\r\n  constructor(config: Partial<StorageConfig> = {}) {\r\n    // Merge user config with intelligent defaults\r\n    this.config = {\r\n      maxRetries: 3,              // Retry up to 3 times - balances reliability vs performance\r\n      retryDelayMs: 100,          // Start with 100ms - fast enough for UX, allows recovery\r\n      useExponentialBackoff: true, // 100ms, 200ms, 400ms - prevents thundering herd\r\n      enableFallback: true,       // Always enable fallback - critical for reliability\r\n      fallbackPrefix: 'readwise_', // Namespace localStorage to avoid conflicts\r\n      validateData: true,         // Always validate - prevents data corruption\r\n      debugMode: false,           // Disable by default - enable for troubleshooting\r\n      ...config\r\n    };\r\n\r\n    // Log initialization for debugging\r\n    if (this.config.debugMode) {\r\n      console.log('\uD83D\uDDC4\uFE0F StorageManager initialized with config:', this.config);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Save data to storage with comprehensive error handling\r\n   * \r\n   * This method attempts to save data using Chrome's storage.sync API first,\r\n   * with automatic fallback to localStorage if the extension context is invalid.\r\n   * \r\n   * RELIABILITY FEATURES:\r\n   * - Context validation before attempting Chrome storage\r\n   * - Automatic retry with exponential backoff on failure\r\n   * - localStorage fallback when Chrome storage unavailable\r\n   * - Data validation before saving (if enabled)\r\n   * - Comprehensive error logging\r\n   * \r\n   * @param key - Storage key (must be non-empty string)\r\n   * @param data - Data to save (any serializable type)\r\n   * @param useLocal - Force use of chrome.storage.local instead of sync\r\n   * @returns Promise<StorageResult<T>> - Result object with success status and metadata\r\n   */\r\n  async save<T>(key: string, data: T, useLocal: boolean = false): Promise<StorageResult<T>> {\r\n    // Input validation - prevent invalid operations early\r\n    if (!key || typeof key !== 'string') {\r\n      return {\r\n        success: false,\r\n        error: 'Invalid key: must be non-empty string'\r\n      };\r\n    }\r\n\r\n    // Data validation if enabled\r\n    if (this.config.validateData && this.schemas.has(key)) {\r\n      const validationResult = this.validateData(key, data);\r\n      if (!validationResult.isValid) {\r\n        return {\r\n          success: false,\r\n          error: `Data validation failed: ${validationResult.error}`\r\n        };\r\n      }\r\n    }\r\n\r\n    // Log operation start for debugging\r\n    if (this.config.debugMode) {\r\n      console.log(`\uD83D\uDCBE Saving data to storage: ${key}`, data);\r\n    }\r\n\r\n    // Attempt Chrome storage with retry logic\r\n    const chromeResult = await this.attemptChromeStorage('save', key, data, useLocal);\r\n    if (chromeResult.success) {\r\n      return chromeResult;\r\n    }\r\n\r\n    // Fallback to localStorage if Chrome storage failed and fallback is enabled\r\n    if (this.config.enableFallback) {\r\n      if (this.config.debugMode) {\r\n        console.log(`\uD83D\uDD04 Chrome storage failed, trying localStorage fallback for: ${key}`);\r\n      }\r\n\r\n      try {\r\n        const fallbackKey = this.config.fallbackPrefix + key;\r\n        const serialized = JSON.stringify(data);\r\n        localStorage.setItem(fallbackKey, serialized);\r\n        \r\n        if (this.config.debugMode) {\r\n          console.log(`\u2705 Successfully saved to localStorage: ${fallbackKey}`);\r\n        }\r\n\r\n        return {\r\n          success: true,\r\n          data,\r\n          fromFallback: true\r\n        };\r\n      } catch (fallbackError) {\r\n        // Even localStorage failed - this is a critical error\r\n        console.error('\u274C Both Chrome storage and localStorage failed:', fallbackError);\r\n        return {\r\n          success: false,\r\n          error: `All storage methods failed. Chrome: ${chromeResult.error}, LocalStorage: ${fallbackError}`,\r\n          fromFallback: true\r\n        };\r\n      }\r\n    }\r\n\r\n    // No fallback available, return Chrome storage error\r\n    return chromeResult;\r\n  }\r\n\r\n  /**\r\n   * Retrieve data from storage with automatic fallback handling\r\n   * \r\n   * This method attempts to retrieve data from Chrome storage first, with\r\n   * automatic fallback to localStorage if needed. Includes data validation\r\n   * and type safety.\r\n   * \r\n   * RELIABILITY FEATURES:\r\n   * - Tries Chrome storage first (most reliable when available)\r\n   * - Automatic localStorage fallback with proper key prefixing\r\n   * - Data validation after retrieval (if schema defined)\r\n   * - Type safety with TypeScript generics\r\n   * - Comprehensive error handling\r\n   * \r\n   * @param key - Storage key to retrieve\r\n   * @param defaultValue - Default value if key not found\r\n   * @param useLocal - Force use of chrome.storage.local instead of sync\r\n   * @returns Promise<StorageResult<T>> - Result object with data or error\r\n   */\r\n  async get<T>(key: string, defaultValue?: T, useLocal: boolean = false): Promise<StorageResult<T>> {\r\n    // Input validation\r\n    if (!key || typeof key !== 'string') {\r\n      return {\r\n        success: false,\r\n        error: 'Invalid key: must be non-empty string'\r\n      };\r\n    }\r\n\r\n    if (this.config.debugMode) {\r\n      console.log(`\uD83D\uDCD6 Retrieving data from storage: ${key}`);\r\n    }\r\n\r\n    // Attempt Chrome storage first\r\n    const chromeResult = await this.attemptChromeStorage<T>('get', key, undefined, useLocal);\r\n    if (chromeResult.success && chromeResult.data !== undefined) {\r\n      // Validate retrieved data if schema exists\r\n      if (this.config.validateData && this.schemas.has(key)) {\r\n        const validationResult = this.validateData(key, chromeResult.data);\r\n        if (!validationResult.isValid) {\r\n          console.warn(`\u26A0\uFE0F Retrieved data failed validation for key ${key}:`, validationResult.error);\r\n          // Continue with fallback rather than failing completely\r\n        } else {\r\n          return chromeResult;\r\n        }\r\n      } else {\r\n        return chromeResult;\r\n      }\r\n    }\r\n\r\n    // Try localStorage fallback\r\n    if (this.config.enableFallback) {\r\n      if (this.config.debugMode) {\r\n        console.log(`\uD83D\uDD04 Chrome storage failed/empty, trying localStorage fallback for: ${key}`);\r\n      }\r\n\r\n      try {\r\n        const fallbackKey = this.config.fallbackPrefix + key;\r\n        const stored = localStorage.getItem(fallbackKey);\r\n        \r\n        if (stored !== null) {\r\n          const parsed = JSON.parse(stored) as T;\r\n          \r\n          // Validate fallback data if schema exists\r\n          if (this.config.validateData && this.schemas.has(key)) {\r\n            const validationResult = this.validateData(key, parsed);\r\n            if (!validationResult.isValid) {\r\n              console.warn(`\u26A0\uFE0F Fallback data failed validation for key ${key}:`, validationResult.error);\r\n              // Use default value instead of invalid data\r\n              return {\r\n                success: true,\r\n                data: defaultValue,\r\n                fromFallback: true\r\n              };\r\n            }\r\n          }\r\n\r\n          if (this.config.debugMode) {\r\n            console.log(`\u2705 Successfully retrieved from localStorage: ${fallbackKey}`, parsed);\r\n          }\r\n\r\n          return {\r\n            success: true,\r\n            data: parsed,\r\n            fromFallback: true\r\n          };\r\n        }\r\n      } catch (fallbackError) {\r\n        console.error('\u274C localStorage fallback failed:', fallbackError);\r\n      }\r\n    }\r\n\r\n    // No data found anywhere, return default value\r\n    if (defaultValue !== undefined) {\r\n      return {\r\n        success: true,\r\n        data: defaultValue,\r\n        fromFallback: this.config.enableFallback\r\n      };\r\n    }\r\n\r\n    // No data and no default\r\n    return {\r\n      success: false,\r\n      error: `No data found for key: ${key}`,\r\n      fromFallback: this.config.enableFallback\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Remove data from storage\r\n   * \r\n   * Removes data from both Chrome storage and localStorage fallback\r\n   * to ensure complete cleanup.\r\n   * \r\n   * @param key - Key to remove\r\n   * @param useLocal - Force use of chrome.storage.local instead of sync\r\n   * @returns Promise<StorageResult<void>> - Result object with success status\r\n   */\r\n  async remove(key: string, useLocal: boolean = false): Promise<StorageResult<void>> {\r\n    if (!key || typeof key !== 'string') {\r\n      return {\r\n        success: false,\r\n        error: 'Invalid key: must be non-empty string'\r\n      };\r\n    }\r\n\r\n    if (this.config.debugMode) {\r\n      console.log(`\uD83D\uDDD1\uFE0F Removing data from storage: ${key}`);\r\n    }\r\n\r\n    let chromeSuccess = false;\r\n    let fallbackSuccess = false;\r\n    let errors: string[] = [];\r\n\r\n    // Remove from Chrome storage\r\n    const chromeResult = await this.attemptChromeStorage('remove', key, undefined, useLocal);\r\n    if (chromeResult.success) {\r\n      chromeSuccess = true;\r\n    } else {\r\n      errors.push(`Chrome storage: ${chromeResult.error}`);\r\n    }\r\n\r\n    // Remove from localStorage fallback\r\n    if (this.config.enableFallback) {\r\n      try {\r\n        const fallbackKey = this.config.fallbackPrefix + key;\r\n        localStorage.removeItem(fallbackKey);\r\n        fallbackSuccess = true;\r\n        \r\n        if (this.config.debugMode) {\r\n          console.log(`\u2705 Successfully removed from localStorage: ${fallbackKey}`);\r\n        }\r\n      } catch (fallbackError) {\r\n        errors.push(`LocalStorage: ${fallbackError}`);\r\n      }\r\n    }\r\n\r\n    // Consider successful if at least one method worked\r\n    if (chromeSuccess || fallbackSuccess) {\r\n      return { success: true };\r\n    }\r\n\r\n    return {\r\n      success: false,\r\n      error: `Failed to remove from all storage methods: ${errors.join(', ')}`\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Clear all stored data\r\n   * \r\n   * WARNING: This removes ALL data from both Chrome storage and localStorage.\r\n   * Use with caution in production environments.\r\n   * \r\n   * @param useLocal - Target chrome.storage.local instead of sync\r\n   * @returns Promise<StorageResult<void>> - Result object with success status\r\n   */\r\n  async clear(useLocal: boolean = false): Promise<StorageResult<void>> {\r\n    if (this.config.debugMode) {\r\n      console.log('\uD83E\uDDF9 Clearing all storage data');\r\n    }\r\n\r\n    let chromeSuccess = false;\r\n    let fallbackSuccess = false;\r\n    let errors: string[] = [];\r\n\r\n    // Clear Chrome storage\r\n    try {\r\n      if (this.isExtensionContextValid()) {\r\n        const storage = useLocal ? chrome.storage.local : chrome.storage.sync;\r\n        await storage.clear();\r\n        chromeSuccess = true;\r\n        \r\n        if (this.config.debugMode) {\r\n          console.log('\u2705 Chrome storage cleared successfully');\r\n        }\r\n      }\r\n    } catch (error) {\r\n      errors.push(`Chrome storage: ${error}`);\r\n    }\r\n\r\n    // Clear localStorage fallback items\r\n    if (this.config.enableFallback) {\r\n      try {\r\n        const keysToRemove: string[] = [];\r\n        for (let i = 0; i < localStorage.length; i++) {\r\n          const key = localStorage.key(i);\r\n          if (key && key.startsWith(this.config.fallbackPrefix)) {\r\n            keysToRemove.push(key);\r\n          }\r\n        }\r\n        \r\n        keysToRemove.forEach(key => localStorage.removeItem(key));\r\n        fallbackSuccess = true;\r\n        \r\n        if (this.config.debugMode) {\r\n          console.log(`\u2705 Cleared ${keysToRemove.length} localStorage fallback items`);\r\n        }\r\n      } catch (fallbackError) {\r\n        errors.push(`LocalStorage: ${fallbackError}`);\r\n      }\r\n    }\r\n\r\n    if (chromeSuccess || fallbackSuccess) {\r\n      return { success: true };\r\n    }\r\n\r\n    return {\r\n      success: false,\r\n      error: `Failed to clear storage: ${errors.join(', ')}`\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Save multiple key-value pairs in a single batch operation\r\n   * \r\n   * More efficient than multiple individual save operations.\r\n   * Maintains transactional semantics - if any save fails, reports detailed errors.\r\n   * \r\n   * @param data - Object containing key-value pairs to save\r\n   * @param useLocal - Force use of chrome.storage.local instead of sync\r\n   * @returns Promise<StorageResult<void>> - Result with success status and error details\r\n   */\r\n  async saveBatch(data: { [key: string]: any }, useLocal: boolean = false): Promise<StorageResult<void>> {\r\n    if (!data || typeof data !== 'object') {\r\n      return {\r\n        success: false,\r\n        error: 'Invalid data: must be object with key-value pairs'\r\n      };\r\n    }\r\n\r\n    const keys = Object.keys(data);\r\n    if (keys.length === 0) {\r\n      return {\r\n        success: true // Empty batch is technically successful\r\n      };\r\n    }\r\n\r\n    if (this.config.debugMode) {\r\n      console.log(`\uD83D\uDCE6 Batch saving ${keys.length} items:`, keys);\r\n    }\r\n\r\n    // Validate all data first if validation is enabled\r\n    if (this.config.validateData) {\r\n      const validationErrors: string[] = [];\r\n      for (const key of keys) {\r\n        if (this.schemas.has(key)) {\r\n          const validationResult = this.validateData(key, data[key]);\r\n          if (!validationResult.isValid) {\r\n            validationErrors.push(`${key}: ${validationResult.error}`);\r\n          }\r\n        }\r\n      }\r\n      \r\n      if (validationErrors.length > 0) {\r\n        return {\r\n          success: false,\r\n          error: `Batch validation failed: ${validationErrors.join(', ')}`\r\n        };\r\n      }\r\n    }\r\n\r\n    // Attempt batch Chrome storage operation\r\n    const chromeResult = await this.attemptChromeStorage('saveBatch', '', data, useLocal);\r\n    if (chromeResult.success) {\r\n      return chromeResult;\r\n    }\r\n\r\n    // Fallback to individual localStorage operations\r\n    if (this.config.enableFallback) {\r\n      if (this.config.debugMode) {\r\n        console.log('\uD83D\uDD04 Batch Chrome storage failed, using localStorage fallback');\r\n      }\r\n\r\n      const fallbackErrors: string[] = [];\r\n      let successCount = 0;\r\n\r\n      for (const [key, value] of Object.entries(data)) {\r\n        try {\r\n          const fallbackKey = this.config.fallbackPrefix + key;\r\n          const serialized = JSON.stringify(value);\r\n          localStorage.setItem(fallbackKey, serialized);\r\n          successCount++;\r\n        } catch (error) {\r\n          fallbackErrors.push(`${key}: ${error}`);\r\n        }\r\n      }\r\n\r\n      if (successCount === keys.length) {\r\n        if (this.config.debugMode) {\r\n          console.log(`\u2705 Batch localStorage fallback successful: ${successCount}/${keys.length} items`);\r\n        }\r\n        return {\r\n          success: true,\r\n          fromFallback: true\r\n        };\r\n      } else {\r\n        return {\r\n          success: false,\r\n          error: `Batch fallback partial failure: ${successCount}/${keys.length} succeeded. Errors: ${fallbackErrors.join(', ')}`,\r\n          fromFallback: true\r\n        };\r\n      }\r\n    }\r\n\r\n    return chromeResult;\r\n  }\r\n\r\n  /**\r\n   * Register a data validation schema for a specific key\r\n   * \r\n   * Enables automatic data validation for save/retrieve operations.\r\n   * Helps prevent data corruption and provides early error detection.\r\n   * \r\n   * EXAMPLE USAGE:\r\n   * storage.registerSchema('user_preferences', {\r\n   *   wpm: { type: 'number', required: true, validate: (v) => v >= 50 && v <= 800 },\r\n   *   theme: { type: 'string', required: false },\r\n   *   enabled: { type: 'boolean', required: true }\r\n   * });\r\n   * \r\n   * @param key - Storage key to validate\r\n   * @param schema - Validation schema definition\r\n   */\r\n  registerSchema(key: string, schema: DataSchema): void {\r\n    if (!key || typeof key !== 'string') {\r\n      throw new Error('Invalid key: must be non-empty string');\r\n    }\r\n\r\n    if (!schema || typeof schema !== 'object') {\r\n      throw new Error('Invalid schema: must be object');\r\n    }\r\n\r\n    this.schemas.set(key, schema);\r\n    \r\n    if (this.config.debugMode) {\r\n      console.log(`\uD83D\uDCCB Registered validation schema for key: ${key}`, schema);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Check if extension context is valid for Chrome storage operations\r\n   * \r\n   * CRITICAL RELIABILITY FEATURE: This prevents the \"Extension context invalidated\"\r\n   * errors that plagued the original complexity-reader extension.\r\n   * \r\n   * @returns boolean - True if Chrome APIs are available and functional\r\n   */\r\n  private isExtensionContextValid(): boolean {\r\n    try {\r\n      // Check if chrome object exists\r\n      if (typeof chrome === 'undefined') {\r\n        return false;\r\n      }\r\n\r\n      // Check if storage API is available\r\n      if (!chrome.storage || !chrome.storage.sync || !chrome.storage.local) {\r\n        return false;\r\n      }\r\n\r\n      // Check if runtime is available (context validity indicator)\r\n      if (!chrome.runtime || !chrome.runtime.id) {\r\n        return false;\r\n      }\r\n\r\n      return true;\r\n    } catch (error) {\r\n      // Any error during context check means context is invalid\r\n      return false;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Attempt Chrome storage operation with retry logic\r\n   * \r\n   * Core reliability mechanism that handles transient failures with\r\n   * exponential backoff retry strategy.\r\n   * \r\n   * @param operation - Storage operation type\r\n   * @param key - Storage key\r\n   * @param data - Data for save operations\r\n   * @param useLocal - Use local storage instead of sync\r\n   * @returns Promise<StorageResult<T>> - Operation result\r\n   */\r\n  private async attemptChromeStorage<T>(\r\n    operation: 'save' | 'get' | 'remove' | 'saveBatch',\r\n    key: string,\r\n    data?: any,\r\n    useLocal: boolean = false\r\n  ): Promise<StorageResult<T>> {\r\n    let lastError: string = '';\r\n    \r\n    // Retry loop with exponential backoff\r\n    for (let attempt = 0; attempt <= this.config.maxRetries; attempt++) {\r\n      try {\r\n        // Check context validity before each attempt\r\n        if (!this.isExtensionContextValid()) {\r\n          lastError = 'Extension context is invalid - chrome.storage unavailable';\r\n          if (this.config.debugMode) {\r\n            console.warn(`\u26A0\uFE0F Attempt ${attempt + 1}: ${lastError}`);\r\n          }\r\n          \r\n          // No point in retrying context issues\r\n          break;\r\n        }\r\n\r\n        // Select storage API (sync vs local)\r\n        const storage = useLocal ? chrome.storage.local : chrome.storage.sync;\r\n\r\n        // Execute the requested operation\r\n        let result: any;\r\n        switch (operation) {\r\n          case 'save':\r\n            result = await storage.set({ [key]: data });\r\n            if (this.config.debugMode) {\r\n              console.log(`\u2705 Chrome storage save successful: ${key}`);\r\n            }\r\n            return { success: true, data, retryCount: attempt };\r\n\r\n          case 'get':\r\n            result = await storage.get([key]);\r\n            const retrievedData = result[key] as T;\r\n            if (this.config.debugMode) {\r\n              console.log(`\u2705 Chrome storage get successful: ${key}`, retrievedData);\r\n            }\r\n            return { success: true, data: retrievedData, retryCount: attempt };\r\n\r\n          case 'remove':\r\n            result = await storage.remove([key]);\r\n            if (this.config.debugMode) {\r\n              console.log(`\u2705 Chrome storage remove successful: ${key}`);\r\n            }\r\n            return { success: true, retryCount: attempt };\r\n\r\n          case 'saveBatch':\r\n            result = await storage.set(data);\r\n            if (this.config.debugMode) {\r\n              console.log(`\u2705 Chrome storage batch save successful`);\r\n            }\r\n            return { success: true, retryCount: attempt };\r\n\r\n          default:\r\n            return {\r\n              success: false,\r\n              error: `Unknown operation: ${operation}`\r\n            };\r\n        }\r\n\r\n      } catch (error) {\r\n        lastError = error instanceof Error ? error.message : String(error);\r\n        \r\n        if (this.config.debugMode) {\r\n          console.warn(`\u26A0\uFE0F Attempt ${attempt + 1} failed for ${operation}:${key}:`, lastError);\r\n        }\r\n\r\n        // Don't retry on final attempt\r\n        if (attempt < this.config.maxRetries) {\r\n          // Calculate delay with exponential backoff\r\n          const delay = this.config.useExponentialBackoff \r\n            ? this.config.retryDelayMs * Math.pow(2, attempt)\r\n            : this.config.retryDelayMs;\r\n          \r\n          await this.delay(delay);\r\n        }\r\n      }\r\n    }\r\n\r\n    // All attempts failed\r\n    return {\r\n      success: false,\r\n      error: lastError,\r\n      retryCount: this.config.maxRetries\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Validate data against registered schema\r\n   * \r\n   * @param key - Storage key\r\n   * @param data - Data to validate\r\n   * @returns Validation result with error details\r\n   */\r\n  private validateData(key: string, data: any): { isValid: boolean; error?: string } {\r\n    const schema = this.schemas.get(key);\r\n    if (!schema) {\r\n      return { isValid: true }; // No schema means no validation\r\n    }\r\n\r\n    // Check if data is object when schema expects object properties\r\n    if (typeof data !== 'object' || data === null) {\r\n      return {\r\n        isValid: false,\r\n        error: 'Data must be object for schema validation'\r\n      };\r\n    }\r\n\r\n    // Validate each schema property\r\n    for (const [property, rules] of Object.entries(schema)) {\r\n      const value = data[property];\r\n\r\n      // Check required properties\r\n      if (rules.required && (value === undefined || value === null)) {\r\n        return {\r\n          isValid: false,\r\n          error: `Required property missing: ${property}`\r\n        };\r\n      }\r\n\r\n      // Skip type checking if value is undefined/null and not required\r\n      if (value === undefined || value === null) {\r\n        continue;\r\n      }\r\n\r\n      // Type validation\r\n      const actualType = Array.isArray(value) ? 'array' : typeof value;\r\n      if (actualType !== rules.type) {\r\n        return {\r\n          isValid: false,\r\n          error: `Property ${property} must be ${rules.type}, got ${actualType}`\r\n        };\r\n      }\r\n\r\n      // Custom validation function\r\n      if (rules.validate && !rules.validate(value)) {\r\n        return {\r\n          isValid: false,\r\n          error: `Property ${property} failed custom validation`\r\n        };\r\n      }\r\n    }\r\n\r\n    return { isValid: true };\r\n  }\r\n\r\n  /**\r\n   * Utility method for adding delays in retry logic\r\n   * \r\n   * @param ms - Milliseconds to delay\r\n   * @returns Promise that resolves after delay\r\n   */\r\n  private delay(ms: number): Promise<void> {\r\n    return new Promise(resolve => setTimeout(resolve, ms));\r\n  }\r\n\r\n  /**\r\n   * Get current configuration\r\n   * \r\n   * @returns Current storage configuration\r\n   */\r\n  getConfig(): StorageConfig {\r\n    return { ...this.config };\r\n  }\r\n\r\n  /**\r\n   * Update configuration at runtime\r\n   * \r\n   * @param newConfig - Partial configuration to merge\r\n   */\r\n  updateConfig(newConfig: Partial<StorageConfig>): void {\r\n    this.config = { ...this.config, ...newConfig };\r\n    \r\n    if (this.config.debugMode) {\r\n      console.log('\uD83D\uDD27 StorageManager configuration updated:', this.config);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get storage usage statistics (Chrome storage only)\r\n   * \r\n   * Useful for monitoring storage quota usage and debugging.\r\n   * \r\n   * @param useLocal - Check local storage instead of sync\r\n   * @returns Promise<StorageResult<object>> - Usage statistics or error\r\n   */\r\n  async getStorageStats(useLocal: boolean = false): Promise<StorageResult<{\r\n    bytesInUse: number;\r\n    quotaBytes: number;\r\n    percentUsed: number;\r\n  }>> {\r\n    try {\r\n      if (!this.isExtensionContextValid()) {\r\n        return {\r\n          success: false,\r\n          error: 'Extension context invalid - cannot check storage stats'\r\n        };\r\n      }\r\n\r\n      const storage = useLocal ? chrome.storage.local : chrome.storage.sync;\r\n      const bytesInUse = await storage.getBytesInUse();\r\n      const quotaBytes = storage.QUOTA_BYTES;\r\n      const percentUsed = Math.round((bytesInUse / quotaBytes) * 100);\r\n\r\n      return {\r\n        success: true,\r\n        data: {\r\n          bytesInUse,\r\n          quotaBytes,\r\n          percentUsed\r\n        }\r\n      };\r\n    } catch (error) {\r\n      return {\r\n        success: false,\r\n        error: `Failed to get storage stats: ${error}`\r\n      };\r\n    }\r\n  }\r\n}", "/**\n * ReadWise Pro - Content Script\n * Built with WebRay-M modular architecture and enhanced reliability patterns\n */\n\nimport { TextAnalysisEngine, type AnalysisResult } from './modules/TextAnalysisEngine';\nimport { BlurModeManager, type BlurModeConfig, type BlurModeStats } from './modules/BlurModeManager';\nimport { ReadingSessionManager, type ReadingSession } from './modules/ReadingSessionManager';\nimport { StorageManager } from './modules/StorageManager';\n\nconsole.log('\uD83D\uDE80 ReadWise Pro - Content script loaded at:', new Date().toISOString());\nconsole.log('\uD83C\uDF10 Document ready state:', document.readyState);\nconsole.log('\uD83D\uDD17 Current URL:', window.location.href);\n\n// Initialize ReadWise modules\nlet textAnalysisEngine: TextAnalysisEngine;\nlet blurModeManager: BlurModeManager;\nlet sessionManager: ReadingSessionManager;\nlet storageManager: StorageManager;\nlet currentAnalysis: AnalysisResult | null = null;\nlet currentSession: ReadingSession | null = null;\n\n// Initialize all modules with WebRay-M patterns\nconsole.log('\uD83D\uDD27 Initializing ReadWise modules...');\n\n// Storage Manager - handles Chrome storage with fallback reliability\nstorageManager = new StorageManager({\n  debugMode: true, // Enable for development\n  enableFallback: true,\n  maxRetries: 3\n});\n\n// Register data validation schemas for type safety\nstorageManager.registerSchema('user_preferences', {\n  wpm: { type: 'number', required: true, validate: (v) => v >= 50 && v <= 800 },\n  theme: { type: 'string', required: false },\n  dailyGoal: { type: 'number', required: false, validate: (v) => v > 0 }\n});\n\n// Text Analysis Engine\ntextAnalysisEngine = new TextAnalysisEngine();\n\n// Reading Session Manager with event handlers\nsessionManager = new ReadingSessionManager(\n  { dailyWordGoal: 2000 }, // Default goals\n  {\n    onSessionStart: (session) => {\n      console.log('\uD83D\uDCCA Reading session started:', session.id);\n      currentSession = session;\n    },\n    onSessionEnd: (session, stats) => {\n      console.log('\uD83D\uDCCA Reading session ended:', session.id, stats);\n      currentSession = null;\n    },\n    onGoalAchieved: (goalType) => {\n      console.log('\uD83C\uDF89 Goal achieved:', goalType);\n      // Could trigger a celebration overlay here\n    }\n  },\n  storageManager\n);\n\n// Blur Mode Manager with comprehensive event handling\nblurModeManager = new BlurModeManager(\n  {\n    wpm: 225, // Default reading speed\n    highlightColor: '#4285f4',\n    progressIndicator: true,\n    keyboardControls: true,\n    autoScroll: true\n  },\n  {\n    onStart: () => {\n      console.log('\uD83C\uDFAF Blur mode started');\n      // Update session with blur mode usage\n      if (currentSession) {\n        sessionManager.updateSessionProgress({ blurModeUsed: true });\n      }\n    },\n    onWordRevealed: (wordIndex, word) => {\n      // Update session with reading progress\n      if (currentSession) {\n        sessionManager.updateSessionProgress({ \n          blurModeWords: wordIndex + 1,\n          completionRate: (wordIndex + 1) / (blurModeManager.getStats().totalWords || 1)\n        });\n      }\n    },\n    onComplete: (stats) => {\n      console.log('\u2705 Blur mode completed:', stats);\n      // Final session update\n      if (currentSession) {\n        sessionManager.updateSessionProgress({\n          blurModeWords: stats.wordsRevealed,\n          completionRate: 1.0\n        });\n      }\n    },\n    onStop: () => {\n      console.log('\u23F9\uFE0F Blur mode stopped');\n    }\n  }\n);\n\nconsole.log('\u2705 All ReadWise modules initialized successfully');\n\n// Simple fallback overlay system using vanilla DOM\nclass SimpleOverlayManager {\n  private overlays = new Map<string, HTMLElement>();\n  private nextZIndex = 10000;\n\n  createOverlay(config: any): HTMLElement {\n    console.log('\uD83D\uDCE6 Creating simple DOM overlay:', config.id);\n    \n    // Remove existing overlay\n    this.removeOverlay(config.id);\n    \n    // Create overlay element\n    const overlay = document.createElement('div');\n    overlay.id = `webray-overlay-${config.id}`;\n    overlay.style.cssText = `\n      position: fixed;\n      left: ${config.position?.x || 20}px;\n      top: ${config.position?.y || 20}px;\n      z-index: ${this.nextZIndex++};\n      background: #ffffff;\n      border: 1px solid #e0e0e0;\n      border-radius: 8px;\n      padding: 16px;\n      box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\n      font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;\n      font-size: 14px;\n      max-width: 320px;\n      cursor: ${config.draggable ? 'move' : 'default'};\n    `;\n\n    // Add content based on type\n    if (config.type === 'debug') {\n      overlay.innerHTML = `\n        <div style=\"display: flex; align-items: center; gap: 8px; margin-bottom: 12px;\">\n          <div style=\"width: 12px; height: 12px; background: #4caf50; border-radius: 50%;\"></div>\n          <strong>WebRay-M Debug (Sidebar)</strong>\n        </div>\n        <div style=\"font-size: 12px; color: #666;\">\n          Framework: WebRay-M v2.0<br>\n          Engine: Simple DOM<br>\n          Type: Sidebar Extension<br>\n          Page: ${document.title}\n        </div>\n        <button onclick=\"this.parentElement.remove()\" style=\"\n          margin-top: 8px; padding: 4px 8px; border: 1px solid #ddd; \n          background: #f5f5f5; border-radius: 4px; cursor: pointer;\n        \">Close</button>\n      `;\n    } else if (config.type === 'text') {\n      overlay.innerHTML = `\n        <div>${config.content || 'Text overlay'}</div>\n        <button onclick=\"this.parentElement.remove()\" style=\"\n          margin-top: 8px; padding: 4px 8px; border: 1px solid #ddd; \n          background: #f5f5f5; border-radius: 4px; cursor: pointer;\n        \">Close</button>\n      `;\n    } else if (config.type === 'sidebar') {\n      overlay.innerHTML = `\n        <div style=\"display: flex; align-items: center; gap: 8px; margin-bottom: 12px;\">\n          <div style=\"width: 12px; height: 12px; background: #ff9800; border-radius: 50%;\"></div>\n          <strong>WebRay-M Sidebar Panel</strong>\n        </div>\n        <div style=\"font-size: 12px; color: #666; margin-bottom: 12px;\">\n          This is a sidebar-style overlay that can contain<br>\n          various tools and information panels.\n        </div>\n        <div style=\"display: flex; gap: 8px;\">\n          <button onclick=\"console.log('Sidebar action 1')\" style=\"\n            padding: 6px 12px; border: 1px solid #ddd; \n            background: #2196f3; color: white; border-radius: 4px; cursor: pointer;\n          \">Action 1</button>\n          <button onclick=\"console.log('Sidebar action 2')\" style=\"\n            padding: 6px 12px; border: 1px solid #ddd; \n            background: #4caf50; color: white; border-radius: 4px; cursor: pointer;\n          \">Action 2</button>\n        </div>\n        <button onclick=\"this.parentElement.remove()\" style=\"\n          margin-top: 8px; padding: 4px 8px; border: 1px solid #ddd; \n          background: #f5f5f5; border-radius: 4px; cursor: pointer; width: 100%;\n        \">Close Sidebar</button>\n      `;\n    }\n\n    // Add dragging if enabled\n    if (config.draggable) {\n      this.makeDraggable(overlay);\n    }\n\n    // Add to page\n    document.body.appendChild(overlay);\n    this.overlays.set(config.id, overlay);\n    \n    console.log('\u2705 Simple overlay created successfully');\n    return overlay;\n  }\n\n  private makeDraggable(element: HTMLElement) {\n    let isDragging = false;\n    let startX = 0;\n    let startY = 0;\n    let initialLeft = 0;\n    let initialTop = 0;\n\n    element.addEventListener('mousedown', (e) => {\n      isDragging = true;\n      startX = e.clientX;\n      startY = e.clientY;\n      const rect = element.getBoundingClientRect();\n      initialLeft = rect.left;\n      initialTop = rect.top;\n      element.style.opacity = '0.8';\n    });\n\n    document.addEventListener('mousemove', (e) => {\n      if (!isDragging) return;\n      const deltaX = e.clientX - startX;\n      const deltaY = e.clientY - startY;\n      element.style.left = (initialLeft + deltaX) + 'px';\n      element.style.top = (initialTop + deltaY) + 'px';\n    });\n\n    document.addEventListener('mouseup', () => {\n      if (isDragging) {\n        isDragging = false;\n        element.style.opacity = '1';\n      }\n    });\n  }\n\n  removeOverlay(id: string): boolean {\n    const overlay = this.overlays.get(id);\n    if (overlay && overlay.parentNode) {\n      overlay.parentNode.removeChild(overlay);\n      this.overlays.delete(id);\n      return true;\n    }\n    return false;\n  }\n}\n\n// Initialize overlay manager (use simple DOM for now)\nlet overlayManager: any = null;\n\nasync function initializeOverlaySystem() {\n  // For now, use simple overlay system to avoid import issues\n  console.log('\uD83D\uDCE6 Using simple DOM overlay system');\n  overlayManager = new SimpleOverlayManager();\n  return true;\n}\n\n// Initialize and set up message handling\n(async () => {\n  try {\n    await initializeOverlaySystem();\n    \n    // Ensure listener is only added once\n    if (!(window as any).hasWebRayContentListener) {\n      console.log('\uD83C\uDFAF Setting up message listener...');\n      \n      chrome.runtime.onMessage.addListener((request, sender, sendResponse) => {\n        console.log('\uD83D\uDCE5 Content script received message:', request);\n        \n        // Handle ping for auto-injection detection (WebRay-M enhanced)\n        if (request.action === 'ping') {\n          sendResponse({ \n            success: true, \n            message: 'ReadWise Pro content script is active',\n            features: ['textAnalysis', 'blurMode', 'sessionTracking'],\n            timestamp: Date.now()\n          });\n          return true;\n        }\n\n        // Text analysis request\n        if (request.action === 'analyze_text') {\n          (async () => {\n            try {\n              console.log('\uD83D\uDCCA Starting text analysis...');\n              const analysis = await textAnalysisEngine.analyzeCurrentPage(request.readingSpeedWPM);\n              \n              if (analysis) {\n                currentAnalysis = analysis;\n                console.log('\u2705 Analysis completed:', analysis);\n                sendResponse({ success: true, analysis });\n              } else {\n                console.log('\u26A0\uFE0F Page not suitable for analysis');\n                sendResponse({ \n                  success: false, \n                  error: 'Page not suitable for text analysis' \n                });\n              }\n            } catch (error) {\n              console.error('\u274C Analysis failed:', error);\n              sendResponse({ \n                success: false, \n                error: error instanceof Error ? error.message : 'Analysis failed' \n              });\n            }\n          })();\n          return true;\n        }\n\n        // Get cached analysis\n        if (request.action === 'get_cached_analysis') {\n          sendResponse({\n            success: true,\n            analysis: currentAnalysis,\n            timestamp: currentAnalysis?.timestamp || null\n          });\n          return true;\n        }\n\n        // Update reading speed\n        if (request.action === 'update_reading_speed') {\n          try {\n            textAnalysisEngine.setReadingSpeed(request.wpm);\n            sendResponse({ success: true });\n          } catch (error) {\n            sendResponse({ \n              success: false, \n              error: error instanceof Error ? error.message : 'Failed to update reading speed' \n            });\n          }\n          return true;\n        }\n        \n        if (request.action === 'create_debug_overlay') {\n          try {\n            overlayManager.createOverlay({\n              id: request.overlayId,\n              type: 'debug',\n              position: request.position,\n              draggable: true\n            });\n            sendResponse({ success: true });\n          } catch (error) {\n            console.error('Debug overlay creation failed:', error);\n            sendResponse({ success: false, error: error instanceof Error ? error.message : String(error) });\n          }\n          return true;\n        }\n\n        if (request.action === 'create_text_overlay') {\n          try {\n            overlayManager.createOverlay({\n              id: request.overlayId,\n              type: 'text',\n              content: request.content,\n              position: request.position,\n              draggable: true\n            });\n            sendResponse({ success: true });\n          } catch (error) {\n            console.error('Text overlay creation failed:', error);\n            sendResponse({ success: false, error: error instanceof Error ? error.message : String(error) });\n          }\n          return true;\n        }\n\n        if (request.action === 'create_sidebar_overlay') {\n          try {\n            overlayManager.createOverlay({\n              id: request.overlayId,\n              type: 'sidebar',\n              position: request.position,\n              draggable: true\n            });\n            sendResponse({ success: true });\n          } catch (error) {\n            console.error('Sidebar overlay creation failed:', error);\n            sendResponse({ success: false, error: error instanceof Error ? error.message : String(error) });\n          }\n          return true;\n        }\n\n        // ===== BLUR MODE HANDLERS =====\n        \n        // Start blur mode\n        if (request.action === 'start_blur_mode') {\n          (async () => {\n            try {\n              console.log('\uD83C\uDFAF Starting blur mode...');\n              const success = await blurModeManager.startBlurMode();\n              \n              if (success) {\n                sendResponse({ success: true, message: 'Blur mode started successfully' });\n              } else {\n                sendResponse({ \n                  success: false, \n                  error: 'Failed to start blur mode - no suitable content found' \n                });\n              }\n            } catch (error) {\n              console.error('\u274C Blur mode start failed:', error);\n              sendResponse({ \n                success: false, \n                error: error instanceof Error ? error.message : 'Failed to start blur mode' \n              });\n            }\n          })();\n          return true;\n        }\n\n        // Stop blur mode\n        if (request.action === 'stop_blur_mode') {\n          try {\n            blurModeManager.stopBlurMode();\n            sendResponse({ success: true, message: 'Blur mode stopped' });\n          } catch (error) {\n            sendResponse({ \n              success: false, \n              error: error instanceof Error ? error.message : 'Failed to stop blur mode' \n            });\n          }\n          return true;\n        }\n\n        // Toggle blur mode pause/resume\n        if (request.action === 'toggle_blur_pause') {\n          try {\n            blurModeManager.togglePause();\n            const stats = blurModeManager.getStats();\n            sendResponse({ \n              success: true, \n              isPaused: stats.isPaused,\n              message: stats.isPaused ? 'Blur mode paused' : 'Blur mode resumed'\n            });\n          } catch (error) {\n            sendResponse({ \n              success: false, \n              error: error instanceof Error ? error.message : 'Failed to toggle blur mode' \n            });\n          }\n          return true;\n        }\n\n        // Adjust blur mode speed\n        if (request.action === 'adjust_blur_speed') {\n          try {\n            const newWPM = request.wpm || 225;\n            blurModeManager.adjustSpeed(newWPM);\n            sendResponse({ \n              success: true, \n              wpm: newWPM,\n              message: `Blur mode speed adjusted to ${newWPM} WPM` \n            });\n          } catch (error) {\n            sendResponse({ \n              success: false, \n              error: error instanceof Error ? error.message : 'Failed to adjust speed' \n            });\n          }\n          return true;\n        }\n\n        // Get blur mode status and stats\n        if (request.action === 'get_blur_status') {\n          try {\n            const stats = blurModeManager.getStats();\n            const config = blurModeManager.getConfig();\n            sendResponse({ \n              success: true, \n              stats,\n              config,\n              isActive: blurModeManager.isBlurModeActive()\n            });\n          } catch (error) {\n            sendResponse({ \n              success: false, \n              error: error instanceof Error ? error.message : 'Failed to get blur status' \n            });\n          }\n          return true;\n        }\n\n        // ===== SESSION MANAGEMENT HANDLERS =====\n\n        // Start reading session\n        if (request.action === 'start_reading_session') {\n          (async () => {\n            try {\n              console.log('\uD83D\uDCCA Starting reading session...');\n              const session = await sessionManager.startSession(\n                window.location.href,\n                document.title,\n                request.targetWPM || 225\n              );\n              \n              sendResponse({ \n                success: true, \n                session,\n                message: 'Reading session started successfully' \n              });\n            } catch (error) {\n              console.error('\u274C Session start failed:', error);\n              sendResponse({ \n                success: false, \n                error: error instanceof Error ? error.message : 'Failed to start session' \n              });\n            }\n          })();\n          return true;\n        }\n\n        // End reading session\n        if (request.action === 'end_reading_session') {\n          (async () => {\n            try {\n              const session = await sessionManager.endSession();\n              const stats = await sessionManager.calculateStatistics();\n              \n              sendResponse({ \n                success: true, \n                session,\n                stats,\n                message: 'Reading session ended successfully' \n              });\n            } catch (error) {\n              console.error('\u274C Session end failed:', error);\n              sendResponse({ \n                success: false, \n                error: error instanceof Error ? error.message : 'Failed to end session' \n              });\n            }\n          })();\n          return true;\n        }\n\n        // Get current session status\n        if (request.action === 'get_session_status') {\n          try {\n            const currentSession = sessionManager.getCurrentSession();\n            sendResponse({ \n              success: true, \n              session: currentSession,\n              hasActiveSession: !!currentSession\n            });\n          } catch (error) {\n            sendResponse({ \n              success: false, \n              error: error instanceof Error ? error.message : 'Failed to get session status' \n            });\n          }\n          return true;\n        }\n\n        // Get reading statistics\n        if (request.action === 'get_reading_stats') {\n          (async () => {\n            try {\n              const stats = await sessionManager.calculateStatistics();\n              const todayProgress = await sessionManager.getTodayProgress();\n              \n              sendResponse({ \n                success: true, \n                stats,\n                todayProgress\n              });\n            } catch (error) {\n              console.error('\u274C Stats retrieval failed:', error);\n              sendResponse({ \n                success: false, \n                error: error instanceof Error ? error.message : 'Failed to get statistics' \n              });\n            }\n          })();\n          return true;\n        }\n\n        // ===== STORAGE HANDLERS =====\n\n        // Save user preferences\n        if (request.action === 'save_preferences') {\n          (async () => {\n            try {\n              const result = await storageManager.save('user_preferences', request.preferences);\n              sendResponse({ \n                success: result.success, \n                fromFallback: result.fromFallback,\n                error: result.error \n              });\n            } catch (error) {\n              sendResponse({ \n                success: false, \n                error: error instanceof Error ? error.message : 'Failed to save preferences' \n              });\n            }\n          })();\n          return true;\n        }\n\n        // Load user preferences\n        if (request.action === 'load_preferences') {\n          (async () => {\n            try {\n              const result = await storageManager.get('user_preferences', {\n                wpm: 225,\n                theme: 'light',\n                dailyGoal: 2000\n              });\n              sendResponse({ \n                success: result.success,\n                preferences: result.data,\n                fromFallback: result.fromFallback,\n                error: result.error\n              });\n            } catch (error) {\n              sendResponse({ \n                success: false, \n                error: error instanceof Error ? error.message : 'Failed to load preferences' \n              });\n            }\n          })();\n          return true;\n        }\n\n        // ===== DEMO ACTION (Keep existing) =====\n        \n        if (request.action === 'demo_action') {\n          console.log('Content script received message:', request.data);\n          \n          const indicator = document.createElement('div');\n          indicator.textContent = `WebRay-M: ${request.data || 'Message received!'}`;\n          indicator.style.cssText = `\n            position: fixed;\n            top: 20px;\n            right: 20px;\n            background: #4caf50;\n            color: white;\n            padding: 12px 16px;\n            border-radius: 6px;\n            z-index: 10000;\n            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;\n            font-size: 14px;\n            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2);\n          `;\n          \n          document.body.appendChild(indicator);\n          setTimeout(() => indicator.remove(), 3000);\n          \n          sendResponse({ success: true });\n          return true;\n        }\n      });\n\n      (window as any).hasWebRayContentListener = true;\n      console.log('\uD83C\uDFAF Message listener registered');\n      \n      // Test communication\n      setTimeout(() => {\n        console.log('\uD83E\uDDEA Testing content script communication...');\n        chrome.runtime.sendMessage({ action: 'content_script_ready' }, (response) => {\n          console.log('\uD83D\uDFE2 Content script communication test:', response);\n        });\n      }, 1000);\n    }\n\n    console.log('\u2705 Content script initialization completed');\n    \n  } catch (error) {\n    console.error('\u274C Content script initialization failed:', error);\n  }\n})();"],
  "mappings": "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",
  "names": ["require_Readability", "__commonJSMin", "exports", "module", "Readability", "doc", "options", "el", "logNode", "node", "attrPairs", "attr", "args", "arg", "msg", "x", "articleContent", "nodeList", "filterFn", "i", "parentNode", "newTagName", "fn", "tagNames", "tag", "collection", "classesToPreserve", "className", "cls", "str", "baseURI", "documentURI", "toAbsoluteURI", "uri", "links", "link", "href", "text", "container", "medias", "media", "src", "poster", "srcset", "newSrcset", "_", "p1", "p2", "p3", "child", "curTitle", "origTitle", "titleHadHierarchicalSeparators", "wordCount", "allSeparators", "headings", "trimmedTitle", "match", "heading", "hOnes", "curTitleWordCount", "next", "elem", "br", "replaced", "brSibling", "p", "nextElem", "sibling", "replacement", "shareElementThreshold", "topCandidate", "matchString", "paragraph", "contentElementCount", "table", "tbody", "row", "cell", "nextNode", "ignoreSelfAndKids", "textA", "textB", "tokensA", "tokensB", "uniqTokensB", "token", "distanceB", "rel", "itemprop", "bylineLength", "maxDepth", "ancestors", "page", "isPaging", "pageCacheHtml", "stripUnlikelyCandidates", "elementsToScore", "shouldRemoveTitleHeader", "endOfSearchMarkerNode", "itemPropNameNode", "childNode", "nextSibling", "newNode", "candidates", "elementToScore", "innerText", "contentScore", "ancestor", "level", "scoreDivider", "topCandidates", "c", "cl", "candidate", "candidateScore", "t", "aTopCandidate", "neededToCreateTopCandidate", "parentOfTopCandidate", "alternativeCandidateAncestors", "MINIMUM_TOPCANDIDATES", "listsContainingThisAncestor", "ancestorIndex", "lastScore", "scoreThreshold", "parentScore", "siblingScoreThreshold", "siblings", "s", "sl", "append", "contentBonus", "linkDensity", "nodeContent", "nodeLength", "div", "parseSuccessful", "textLength", "a", "b", "articleDir", "htmlEscapeMap", "hex", "numStr", "num", "scripts", "metadata", "jsonLdElement", "content", "parsed", "it", "schemaDotOrgRegex", "matches", "title", "nameMatches", "headlineMatches", "author", "err", "jsonld", "values", "metaElements", "propertyPattern", "namePattern", "element", "elementName", "elementProperty", "name", "articleAuthor", "imgs", "img", "noscripts", "noscript", "tmp", "prevElement", "prevImg", "newImg", "attrName", "e", "normalizeSpaces", "textContent", "cur", "linkLength", "linkNode", "coefficient", "weight", "isEmbed", "tagName", "depth", "rows", "columns", "trs", "rowspan", "columnsInThisRow", "cells", "j", "colspan", "root", "tables", "role", "datatable", "summary", "caption", "dataTableDescendants", "descendantExists", "sizeInfo", "parts", "srcCouldBeRemoved", "b64starts", "b64length", "copyTo", "tags", "childrenLength", "children", "isDataTable", "isList", "listLength", "listNodes", "list", "tbl", "li", "input", "headingDensity", "embedCount", "embeds", "contentLength", "textishTags", "textDensity", "isFigureChild", "haveToRemove", "errs", "li_count", "filter", "headingNodes", "shouldRemove", "flag", "numTags", "jsonLd", "paragraphs", "require_Readability_readerable", "__commonJSMin", "exports", "module", "REGEXPS", "isNodeVisible", "node", "isProbablyReaderable", "doc", "options", "defaultOptions", "nodes", "brNodes", "set", "score", "matchString", "textContentLength", "require_readability", "__commonJSMin", "exports", "module", "Readability", "isProbablyReaderable", "import_readability", "ColemanLiauAnalyzer", "text", "words", "sentences", "characters", "L", "S", "index", "word", "sentence", "alphanumeric", "ContentExtractor", "documentClone", "base", "article", "wordCount", "w", "s", "lines", "line", "contentSections", "section", "bodyWordCount", "error", "fallbackSelectors", "bestElement", "bestScore", "selector", "elements", "element", "title", "titleSources", "getTitle", "articles", "newDoc", "firstArticle", "mainSelectors", "mainElement", "textLength", "h1Headers", "firstH1", "secondH1", "container", "contentDiv", "currentNode", "node", "next", "content", "paragraphs", "p", "targetWords", "trimmedContent", "i", "paragraph", "paragraphWords", "finalWordCount", "PageSuitabilityDetector", "url", "hostname", "pathname", "unsuitableHost", "pattern", "paragraphCount", "TextAnalysisEngine", "readingSpeedWPM", "colemanLiauIndex", "complexityScore", "readabilityLevel", "averageSentenceLength", "averageCharactersPerWord", "adjustedWPM", "readingTimeMinutes", "result", "wpm", "BlurModeManager", "config", "events", "targetElement", "wordCount", "error", "stats", "wpm", "timeElapsed", "actualWPM", "selectors", "selector", "element", "allDivs", "bestCandidate", "maxTextLength", "div", "textContent", "walker", "node", "parent", "tagName", "text", "textNodes", "wordIndex", "textNode", "words", "part", "fragment", "i", "word", "wordSpan", "intervalMs", "prevWord", "currentWord", "index", "newConfig", "ReadingSessionManager", "goals", "events", "storageManager", "url", "title", "targetWPM", "sessionId", "endTime", "stats", "completedSession", "update", "sessions", "today", "thisWeek", "totalSessions", "totalWordsRead", "sum", "session", "totalTimeSpent", "completedSessions", "s", "averageWPM", "averageSessionLength", "blurModeSessions", "blurModeUsage", "complexityCount", "favoriteComplexity", "a", "b", "currentStreak", "longestStreak", "todayWords", "dailyGoalProgress", "weeklyStats", "monthlyStats", "todaySessions", "wordsRead", "timeSpent", "goalMet", "newGoals", "existingIndex", "error", "uniqueDates", "tempStreak", "yesterday", "i", "checkDate", "prevDate", "todayProgress", "isNewRecord", "weekDates", "date", "daySessions", "thisMonth", "monthSessions", "totalWords", "totalTime", "timestamp", "dates", "startOfWeek", "data", "StorageManager", "config", "key", "data", "useLocal", "validationResult", "chromeResult", "fallbackKey", "serialized", "fallbackError", "defaultValue", "stored", "parsed", "chromeSuccess", "fallbackSuccess", "errors", "error", "keysToRemove", "i", "keys", "validationErrors", "fallbackErrors", "successCount", "value", "schema", "operation", "lastError", "attempt", "storage", "result", "retrievedData", "delay", "property", "rules", "actualType", "ms", "resolve", "newConfig", "bytesInUse", "quotaBytes", "percentUsed", "textAnalysisEngine", "blurModeManager", "sessionManager", "storageManager", "currentAnalysis", "currentSession", "StorageManager", "v", "TextAnalysisEngine", "ReadingSessionManager", "session", "stats", "goalType", "BlurModeManager", "wordIndex", "word", "SimpleOverlayManager", "config", "overlay", "element", "isDragging", "startX", "startY", "initialLeft", "initialTop", "e", "rect", "deltaX", "deltaY", "id", "overlayManager", "initializeOverlaySystem", "request", "sender", "sendResponse", "analysis", "error", "success", "newWPM", "todayProgress", "result", "indicator", "response"]
}
