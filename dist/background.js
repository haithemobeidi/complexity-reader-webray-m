(()=>{var l=class{constructor(s={}){this.defaultConfig={maxRetries:3,progressiveBackoff:!0,timeout:5e3,ensureContentScript:!0,contentScriptPath:"content.js",debugMode:!1};this.defaultConfig={...this.defaultConfig,...s}}async send(s,r={}){let e={...this.defaultConfig,...r},o=performance.now(),c,u=0,g=(await chrome.tabs.query({active:!0,currentWindow:!0}))[0];if(!g?.id)return this.createErrorResult("No active tab found",0,o);let m=g.id;for(let n=1;n<=e.maxRetries;n++){u=n;try{if(n>1&&e.progressiveBackoff){let b=100*Math.pow(2,n-2);await this.delay(b),e.debugMode&&console.log(`\u23F3 [ContentScriptBridge] Retry attempt ${n}/${e.maxRetries} after ${b}ms delay`)}let i=await this.sendMessageWithTimeout(m,s,e.timeout),f=performance.now();return e.debugMode&&console.log(`\u2705 [ContentScriptBridge] Success on attempt ${n}:`,i),{success:!0,data:i,retryCount:u,timing:{startTime:o,endTime:f,duration:f-o}}}catch(i){c=i,e.debugMode&&console.log(`\u274C [ContentScriptBridge] Attempt ${n}/${e.maxRetries} failed:`,i.message),this.isContentScriptMissingError(i.message)&&n<e.maxRetries&&e.ensureContentScript&&(e.debugMode&&console.log("\u{1F504} [ContentScriptBridge] Re-injecting content script..."),await this.injectContentScript(m,e.contentScriptPath,e.debugMode))}}return this.createErrorResult(`Content script communication failed after ${e.maxRetries} attempts: ${c?.message||"Unknown error"}`,u,o)}async ping(s={}){let r={timeout:1e3,debugMode:!1,...s};try{return(await this.send({action:"ping"},{maxRetries:1,timeout:r.timeout,ensureContentScript:!1,debugMode:r.debugMode})).success}catch{return!1}}sendMessageWithTimeout(s,r,e){return new Promise((o,c)=>{let u=setTimeout(()=>{c(new Error("Content script timeout"))},e);chrome.tabs.sendMessage(s,r,d=>{clearTimeout(u),chrome.runtime.lastError?c(new Error(chrome.runtime.lastError.message)):o(d)})})}async injectContentScript(s,r,e){try{await chrome.scripting.executeScript({target:{tabId:s},files:[r]}),await this.delay(100)}catch(o){throw e&&console.error("\u274C [ContentScriptBridge] Failed to inject:",o),o}}isContentScriptMissingError(s){return s.includes("Receiving end does not exist")||s.includes("Could not establish connection")}createErrorResult(s,r,e){let o=performance.now();return{success:!1,error:s,retryCount:r,timing:{startTime:e,endTime:o,duration:o-e}}}delay(s){return new Promise(r=>setTimeout(r,s))}},p=new l;console.log("\u{1F680} ReadWise Pro - Background script loaded");var a=new l({maxRetries:5,progressiveBackoff:!0,timeout:1e4,ensureContentScript:!0,debugMode:!0});chrome.runtime.onMessage.addListener((t,s,r)=>{if(console.log("\u{1F4E5} Background received message:",t.action),t.action==="analyze_page")return(async()=>{try{console.log("\u{1F504} Relaying analysis request with WebRay-M bridge...");let e=await a.send({action:"analyze_text",readingSpeedWPM:t.readingSpeedWPM||225});e.success?(console.log("\u2705 Analysis successful via bridge:",e.retryCount,"attempts"),r({success:!0,analysis:e.data.analysis,bridgeInfo:{retryCount:e.retryCount,duration:e.timing.duration}})):(console.error("\u274C Analysis failed via bridge:",e.error),r({success:!1,error:e.error,bridgeInfo:{retryCount:e.retryCount,duration:e.timing.duration}}))}catch(e){console.error("\u274C Bridge communication failed:",e),r({success:!1,error:e instanceof Error?e.message:"Communication failed"})}})(),!0;if(t.action==="get_cached_analysis")return(async()=>{try{let e=await a.send({action:"get_cached_analysis"});r({success:e.success,...e.success?e.data:{error:e.error}})}catch(e){r({success:!1,error:e instanceof Error?e.message:"Failed to get cached analysis"})}})(),!0;if(t.action==="start_blur_mode")return(async()=>{try{let e=await a.send({action:"start_blur_mode"});r({success:e.success,...e.success?e.data:{error:e.error}})}catch(e){r({success:!1,error:e instanceof Error?e.message:"Failed to start blur mode"})}})(),!0;if(t.action==="stop_blur_mode")return(async()=>{try{let e=await a.send({action:"stop_blur_mode"});r({success:e.success,...e.success?e.data:{error:e.error}})}catch(e){r({success:!1,error:e instanceof Error?e.message:"Failed to stop blur mode"})}})(),!0;if(t.action==="get_blur_status")return(async()=>{try{let e=await a.send({action:"get_blur_status"});r({success:e.success,...e.success?e.data:{error:e.error}})}catch(e){r({success:!1,error:e instanceof Error?e.message:"Failed to get blur status"})}})(),!0;if(t.action==="adjust_blur_speed")return(async()=>{try{let e=await a.send({action:"adjust_blur_speed",wpm:t.wpm});r({success:e.success,...e.success?e.data:{error:e.error}})}catch(e){r({success:!1,error:e instanceof Error?e.message:"Failed to adjust blur speed"})}})(),!0;if(t.action==="toggle_blur_pause")return(async()=>{try{let e=await a.send({action:"toggle_blur_pause"});r({success:e.success,...e.success?e.data:{error:e.error}})}catch(e){r({success:!1,error:e instanceof Error?e.message:"Failed to toggle blur pause"})}})(),!0;if(t.action==="start_reading_session")return(async()=>{try{let e=await a.send({action:"start_reading_session",targetWPM:t.targetWPM||225});r({success:e.success,...e.success?e.data:{error:e.error}})}catch(e){r({success:!1,error:e instanceof Error?e.message:"Failed to start session"})}})(),!0;if(t.action==="end_reading_session")return(async()=>{try{let e=await a.send({action:"end_reading_session"});r({success:e.success,...e.success?e.data:{error:e.error}})}catch(e){r({success:!1,error:e instanceof Error?e.message:"Failed to end session"})}})(),!0;if(t.action==="get_session_status")return(async()=>{try{let e=await a.send({action:"get_session_status"});r({success:e.success,...e.success?e.data:{error:e.error}})}catch(e){r({success:!1,error:e instanceof Error?e.message:"Failed to get session status"})}})(),!0;if(t.action==="update_session_progress")return(async()=>{try{let e=await a.send({action:"update_session_progress",update:t.update});r({success:e.success,...e.success?e.data:{error:e.error}})}catch(e){r({success:!1,error:e instanceof Error?e.message:"Failed to update session progress"})}})(),!0;if(t.action==="fetch")return console.log("Background: Handling fetch request for:",t.url),fetch(t.url,t.options||{}).then(e=>e.json()).then(e=>{console.log("Background: Fetch successful:",e),r(e)}).catch(e=>{console.error("Background: Fetch error:",e),r({error:e.message})}),!0});chrome.commands.onCommand.addListener(async t=>{console.log("\u2328\uFE0F Keyboard command:",t);try{let[s]=await chrome.tabs.query({active:!0,currentWindow:!0});if(!s?.id)return;switch(t){case"toggle_sidebar":await chrome.sidePanel.open({tabId:s.id}),console.log("\u{1F4CB} Sidebar toggled");break;case"analyze_current_page":let r=await a.send({action:"analyze_text",readingSpeedWPM:225});if(r.success){let o=r.data.analysis?.complexity;o&&(await chrome.action.setBadgeText({text:o.complexityScore.charAt(0),tabId:s.id}),await chrome.action.setBadgeBackgroundColor({color:"#667eea"})),console.log("\u{1F4CA} Page analyzed via keyboard shortcut")}break;case"toggle_blur_mode":let e=await a.send({action:"get_blur_status"});e.success&&e.data.success&&(e.data.isActive?(await a.send({action:"stop_blur_mode"})).success&&(await chrome.action.setBadgeText({text:"",tabId:s.id}),console.log("\u{1F441}\uFE0F Blur mode stopped via keyboard shortcut")):(await a.send({action:"start_blur_mode"})).success&&(await chrome.action.setBadgeText({text:"B",tabId:s.id}),await chrome.action.setBadgeBackgroundColor({color:"#4285f4"}),console.log("\u{1F441}\uFE0F Blur mode started via keyboard shortcut")));break}}catch(s){console.error("\u274C Keyboard command failed:",s)}});chrome.runtime.onInstalled.addListener(async()=>{console.log("\u{1F4E6} ReadWise Pro installed");try{let[t]=await chrome.tabs.query({active:!0,currentWindow:!0});t?.id&&t.url&&!t.url.startsWith("chrome://")&&!t.url.startsWith("chrome-extension://")&&(console.log("\u{1F9EA} Testing WebRay-M bridge on install..."),(await a.send({action:"ping"},{timeout:3e3,debugMode:!0})).success?console.log("\u2705 WebRay-M bridge test successful on install"):console.log("\u26A0\uFE0F Bridge test failed, but auto-injection should handle it"))}catch(t){console.log("\u26A0\uFE0F Install test failed:",t.message)}});chrome.action.onClicked.addListener(async t=>{t.id&&await chrome.sidePanel.open({tabId:t.id})});chrome.tabs.onUpdated.addListener((t,s,r)=>{s.status==="complete"&&r.url&&console.log("Tab updated:",r.url)});chrome.tabs.onActivated.addListener(async t=>{try{let s=await chrome.tabs.get(t.tabId);if(!s.url||s.url.startsWith("chrome://")||s.url.startsWith("chrome-extension://"))return;try{await chrome.tabs.sendMessage(t.tabId,{action:"ping"}),console.log("\u{1F4CD} Content script already active on tab:",s.url)}catch(r){r.message.includes("Receiving end does not exist")&&(console.log("\u{1F504} Auto-injecting content script into active tab:",s.url),await chrome.scripting.executeScript({target:{tabId:t.tabId},files:["content.js"]}),console.log("\u2705 Content script auto-injected successfully"))}}catch(s){console.log("\u26A0\uFE0F Could not auto-inject into tab:",s.message)}});chrome.runtime.onInstalled.addListener(async()=>{console.log("WebRay-M Sidebar Example installed");try{let[t]=await chrome.tabs.query({active:!0,currentWindow:!0});t?.id&&t.url&&!t.url.startsWith("chrome://")&&!t.url.startsWith("chrome-extension://")&&(console.log("\u{1F504} Auto-injecting content script into current tab on install:",t.url),await chrome.scripting.executeScript({target:{tabId:t.id},files:["content.js"]}),console.log("\u2705 Content script injected on install"))}catch(t){console.log("\u26A0\uFE0F Could not inject into current tab on install:",t.message)}});})();
//# sourceMappingURL=background.js.map
